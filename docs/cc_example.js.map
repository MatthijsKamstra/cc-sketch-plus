{
"version":3,
"file":"cc_example.js",
"sourceRoot":"file:///",
"sources":["/usr/local/lib/haxe/std/js/_std/HxOverrides.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/Main.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/App.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/Settings.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/Sketcher.hx","/usr/local/lib/haxe/std/js/_std/Std.hx","/usr/local/lib/haxe/std/StringBuf.hx","/usr/local/lib/haxe/std/StringTools.hx","/usr/local/lib/haxe/std/js/_std/Type.hx","/usr/local/lib/haxe/std/Xml.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/examples/ExAll.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/examples/ExCircles.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/examples/ExImage.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/examples/ExLine.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/examples/ExRectangle.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/usr/local/lib/haxe/std/haxe/xml/Parser.hx","/usr/local/lib/haxe/std/haxe/xml/Printer.hx","/usr/local/lib/haxe/std/js/Boot.hx","/usr/local/lib/haxe/std/js/html/CanvasElement.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/debug/Grid.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Base.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Circle.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/util/ColorUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Ellipse.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Gradient.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Group.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Image.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Line.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Path.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/PolyLine.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Polygon.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Rectangle.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/draw/Text.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/util/GridUtil.hx","/Users/matthijs/Documents/GIT/cc-sketch-plus/src/sketcher/util/MathUtil.hx","/usr/local/lib/haxe/std/js/_std/Math.hx","/usr/local/lib/haxe/std/js/_std/String.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\tstatic function dateStr(date:Date):String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\n\t}\n\n\tstatic function strDate(s:String):Date {\n\t\tswitch (s.length) {\n\t\t\tcase 8: // hh:mm:ss\n\t\t\t\tvar k = s.split(\":\");\n\t\t\t\tvar d = js.Syntax.construct(Date);\n\t\t\t\t(cast d)[cast \"setTime\"](0);\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\n\t\t\t\treturn d;\n\t\t\tcase 10: // YYYY-MM-DD\n\t\t\t\tvar k = s.split(\"-\");\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\t\tvar k = s.split(\" \");\n\t\t\t\tvar y = k[0].split(\"-\");\n\t\t\t\tvar t = k[1].split(\":\");\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca(s:String, index:Int):Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif (x != x) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0)\n\t\t\t\ti = 0;\n\t\t}\n\t\twhile (i < len) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>(a:Array<T>, obj:T) {\n\t\tvar i = a.indexOf(obj);\n\t\tif (i == -1)\n\t\t\treturn false;\n\t\ta.splice(i, 1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\n\t\tuntyped {\n\t\t\treturn {\n\t\t\t\tcur: 0,\n\t\t\t\tarr: a,\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__('HxOverrides.indexOf',\n\t\t\t\tif (Array.prototype.indexOf) __js__(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\n\t\t\t__feature__('HxOverrides.lastIndexOf',\n\t\t\t\tif (Array.prototype.lastIndexOf) __js__(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\n\t\t\t#end\n\t\t}\n}\n","package;\n\nimport js.Browser.*;\nimport Sketcher.Globals.*;\n\nusing StringTools;\n\nclass Main {\n\tvar count:Int;\n\tvar hash:String;\n\tvar ccTypeArray:Array<Class<Dynamic>> = [\n\t\t//\n\t\texamples.ExAll,\n\t\t//\n\t\texamples.ExCircles,\n\t\t//\n\t\texamples.ExRectangle,\n\t\t//\n\t\texamples.ExLine,\n\t\texamples.ExImage,\n\t];\n\n\tpublic function new() {\n\t\t// console.log('START :: main');\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\tconsole.log('${sketcher.App.NAME} Dom ready :: build: ${sketcher.App.getBuildDate()}');\n\n\t\t\t// var cc = new examples.All();\n\t\t\tsetupArt();\n\t\t\tsetupNav();\n\t\t});\n\t}\n\n\tfunction setupArt() {\n\t\t// get hash from url\n\t\thash = js.Browser.location.hash;\n\t\thash = hash.replace('#', '');\n\n\t\tvar clazz = Type.resolveClass('examples.${hash}');\n\t\tif (clazz == null) {\n\t\t\t// make sure if it's not in the list, show the latest Sketch\n\t\t\tclazz = ccTypeArray[ccTypeArray.length - 1];\n\t\t}\n\t\t// trace('hash: ' + hash);\n\t\t// trace('clazz: ' + clazz);\n\n\t\tcount = ccTypeArray.indexOf(clazz);\n\t\tvar cc = Type.createInstance(clazz, []);\n\n\t\tchangeHash();\n\t}\n\n\tfunction setupNav() {\n\t\t// make sure the browser updates after changing the hash\n\t\twindow.addEventListener(\"hashchange\", function() {\n\t\t\tlocation.reload();\n\t\t}, false);\n\n\t\t// use cursor key lef and right to switch sketches\n\t\twindow.addEventListener(KEY_DOWN, function(e:js.html.KeyboardEvent) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tcount++;\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tcount--;\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tcount = ccTypeArray.length - 1;\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tcount = 0;\n\t\t\t\t\t// default : trace (\"case '\"+e.key+\"': trace ('\"+e.key+\"');\");\n\t\t\t}\n\t\t\tchangeHash();\n\t\t}, false);\n\t}\n\n\tfunction changeHash() {\n\t\tlocation.hash = Type.getClassName(ccTypeArray[count]).replace('examples.', '');\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new Main();\n\t}\n}\n","package sketcher;\n\nimport haxe.macro.Context;\n\nclass App {\n\tpublic static var NAME:String = \"[cc-sketcher]\";\n\n\tpublic static inline macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}\n","/**\n * https://two.js.org/#documentation\n */\nclass Settings {\n\t@:isVar public var type(get, set):String = 'svg';\n\t@:isVar public var width(get, set):Int;\n\t@:isVar public var height(get, set):Int;\n\n\t@:isVar public var padding(get, set):Int;\n\t@:isVar public var margin(get, set):Int;\n\n\t@:isVar public var scale(get, set):Bool;\n\t@:isVar public var autostart(get, set):Bool;\n\n\t@:isVar public var element(get, set):js.html.Element;\n\t@:isVar public var elementID(get, set):String;\n\n\t@:isVar public var sizeType(get, set):String;\n\n\tpublic function new(width:Int, height:Int, ?type:String = 'svg') {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.type = type.toLowerCase(); // make sure to user lowercase\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\tfunction get_width():Int {\n\t\treturn width;\n\t}\n\n\tfunction set_width(value:Int):Int {\n\t\treturn width = value;\n\t}\n\n\tfunction get_height():Int {\n\t\treturn height;\n\t}\n\n\tfunction set_height(value:Int):Int {\n\t\treturn height = value;\n\t}\n\n\tfunction get_type():String {\n\t\treturn type;\n\t}\n\n\tfunction set_type(value:String):String {\n\t\treturn type = value;\n\t}\n\n\tfunction get_padding():Int {\n\t\treturn padding;\n\t}\n\n\tfunction set_padding(value:Int):Int {\n\t\treturn padding = value;\n\t}\n\n\tfunction get_scale():Bool {\n\t\treturn scale;\n\t}\n\n\tfunction set_scale(value:Bool):Bool {\n\t\treturn scale = value;\n\t}\n\n\tfunction get_element():js.html.Element {\n\t\treturn element;\n\t}\n\n\tfunction set_element(value:js.html.Element):js.html.Element {\n\t\treturn element = value;\n\t}\n\n\tfunction get_margin():Int {\n\t\treturn margin;\n\t}\n\n\tfunction set_margin(value:Int):Int {\n\t\treturn margin = value;\n\t}\n\n\tfunction get_autostart():Bool {\n\t\treturn autostart;\n\t}\n\n\tfunction set_autostart(value:Bool):Bool {\n\t\treturn autostart = value;\n\t}\n\n\tfunction get_elementID():String {\n\t\treturn elementID;\n\t}\n\n\tfunction set_elementID(value:String):String {\n\t\treturn elementID = value;\n\t}\n\n\tfunction get_sizeType():String {\n\t\treturn sizeType;\n\t}\n\n\tfunction set_sizeType(value:String):String {\n\t\treturn sizeType = value;\n\t}\n}\n","package;\n\n// import cc.draw.Gradient;\nimport js.Browser.*;\nimport draw.*;\nimport sketcher.draw.*;\nimport sketcher.AST.Point;\n\nclass Sketcher {\n\tvar settings:Settings;\n\t// var paper:Dynamic;\n\tvar element:js.html.Element;\n\tvar baseArray:Array<IBase> = [];\n\n\t/**\n\t * canvas used for graphics\n\t */\n\tpublic var canvas:js.html.CanvasElement;\n\n\t// canvan context\n\tpublic static var ctx:js.html.CanvasRenderingContext2D;\n\n\t// webgl?\n\tpublic static var gl:js.html.webgl.RenderingContext;\n\n\t/**\n\t * the svg string (string injected into div)\n\t */\n\tpublic var svg:String; // should be the svg/xml\n\n\tpublic var CANVAS_ID:String = \"sketcher_canvas\";\n\tpublic var WEBGL_ID:String = \"sketcher_canvas_webgl\";\n\tpublic var SVG_ID:String = \"sketcher_svg\";\n\tpublic var WRAPPER_ID:String = \"sketcher_wrapper\";\n\n\tpublic function new(settings:Settings) {\n\t\tthis.settings = settings;\n\n\t\tSketcher.Globals.w = settings.width;\n\t\tSketcher.Globals.h = settings.height;\n\n\t\tif (settings.elementID != null) {\n\t\t\tWRAPPER_ID = settings.elementID;\n\t\t}\n\n\t\tif (settings.scale == true) {\n\t\t\tvar node = document.createElement('style');\n\t\t\tnode.innerHTML = 'svg {width: 100%; height: 100%;}';\n\t\t\tdocument.body.appendChild(node);\n\t\t}\n\n\t\tif (settings.padding != null && settings.padding > 0) {\n\t\t\tvar node = document.createElement('style');\n\t\t\tnode.innerHTML = 'svg {margin: ${settings.padding}px; }';\n\t\t\tdocument.body.appendChild(node);\n\t\t}\n\t}\n\n\t// ____________________________________ util to append ____________________________________\n\n\tpublic function appendTo(element:js.html.Element):Sketcher {\n\t\tif (element == null) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.element = element;\n\n\t\t// console.log(settings);\n\t\t// console.log(element);\n\n\t\tswitch (settings.type) {\n\t\t\tcase 'canvas':\n\t\t\t\t// trace('canvas');\n\t\t\t\tcanvas = document.createCanvasElement();\n\t\t\t\tcanvas.width = settings.width;\n\t\t\t\tcanvas.height = settings.height;\n\t\t\t\tcanvas.id = CANVAS_ID;\n\t\t\t\tctx = canvas.getContext2d();\n\t\t\t\telement.appendChild(canvas);\n\t\t\t// console.log(canvas);\n\t\t\tcase 'svg':\n\t\t\t// trace('svg');\n\t\t\tcase 'webgl':\n\t\t\t\t// trace('webgl');\n\t\t\t\tcanvas = document.createCanvasElement();\n\t\t\t\tcanvas.width = settings.width;\n\t\t\t\tcanvas.height = settings.height;\n\t\t\t\tcanvas.id = WEBGL_ID;\n\t\t\t\tgl = canvas.getContextWebGL();\n\t\t\t\telement.appendChild(canvas);\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + settings.type.toLowerCase() + \"': trace ('\" + settings.type.toLowerCase() + \"');\");\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// ____________________________________ make something ____________________________________\n\n\t/**\n\t * Create a text field\n\t *\n\t * @param str\t\tvalue of the text you want to create\n\t * @param x\t\t\t(optional) x position of the text (default: 0)\n\t * @param y\t\t\t(optional) y position of the text (default: 0)\n\t * @return Text\n\t */\n\tpublic function makeText(str:String, ?x, ?y):Text {\n\t\tvar shape = new Text(str, x, y);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * create a circl with a center point x and y\n\t *\n\t * @param x\t\t\tx position\n\t * @param y\t\t\ty position\n\t * @param radius\n\t * @return Circle\n\t */\n\tpublic function makeCircle(x:Float, y:Float, radius:Float):Circle {\n\t\tvar shape = new Circle(x, y, radius);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * make a rectangle with the x and y  pos as center point (default center)\n\t *\n\t * @param x\t\t\t\tx position\n\t * @param y\t\t\t\ty position\n\t * @param width\t\t\twidth of the rectangle\n\t * @param height\t\theight of the rectangle\n\t * @param isCenter\t\tdefault is centered true, otherwise x and y are top-left start pos\n\t * @return Rectangle\n\t */\n\tpublic function makeRectangle(x:Float, y:Float, width:Float, height:Float, isCenter = true):Rectangle {\n\t\tvar shape = new Rectangle(x, y, width, height, isCenter);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Not sure why I made this, but at that time it seemed really important\n\t * @param x\t\t\t\tx position\n\t * @param y\t\t\t\ty position\n\t * @param width\t\t\twidth of the rectangle\n\t * @param height\t\theight of the rectangle\n\t * @param isCenter\t\tdefault is centered true, otherwise x and y are top-left start pos\n\t * @return Rectangle\n\t */\n\tpublic function makeRectangleInt(x:Int, y:Int, width:Int, height:Int, isCenter = true):Rectangle {\n\t\tvar shape = new Rectangle(x, y, width, height);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * [Description]\n\t * @param x\t\t\t\tx position\n\t * @param y\t\t\t\ty position\n\t * @param width\t\t\twidth of the rectangle\n\t * @param height\t\theight of the rectangle\n\t * @param radius\n\t * @param isCenter\t\tdefault is centered true, otherwise x and y are top-left start pos\n\t * @return Rectangle\n\t */\n\tpublic function makeRoundedRectangle(x, y, width, height, radius, isCenter = true):Rectangle {\n\t\tif (!isCenter) {\n\t\t\tx = Math.round(width / 2);\n\t\t\ty = Math.round(height / 2);\n\t\t}\n\t\tvar shape = new Rectangle(x, y, width, height);\n\t\tshape.radius = radius;\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Create a line between two points (x, y)\n\t *\n\t * @param x1\t\t\tfirst x position\n\t * @param y1\t\t\tfirst y position\n\t * @param x2\t\t\tsecond x position\n\t * @param y2\t\t\tsecond x position\n\t * @return Line\n\t */\n\tpublic function makeLine(x1, y1, x2, y2):Line {\n\t\tvar shape = new Line(x1, y1, x2, y2);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Create an ellipse with a radius x and radius y\n\t *\n\t * @param x\t\t\tx position\n\t * @param y\t\t\ty position\n\t * @param rx\t\tradius in x dir\n\t * @param ry\t\tradius in y dir\n\t * @return Ellipse\n\t */\n\tpublic function makeEllipse(x, y, rx, ry):Ellipse {\n\t\tvar shape = new Ellipse(x, y, rx, ry);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * [Description]\n\t *  (example [10,11,20,21] translates to point 1: (x: 10, y: 11) and point 1: (x: 20, y: 21)\n\t *\n\t * @param sides\t\t\tan array of x and y position\n\t * @return Polygon\n\t */\n\tpublic function makePolygon(sides:Array<Float>):Polygon {\n\t\tvar shape = new Polygon(sides);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Create polygon with an array of points ( {x:22, y:33} )\n\t * (it's syntatic sugar for makePolygon)\n\t *\n\t * @param sides\t\tan array of points [{x:22, y:33}]\n\t * @return Polygon\n\t */\n\tpublic function makePolygonPoint(sides:Array<Point>):Polygon {\n\t\tvar _sides:Array<Float> = [];\n\t\tfor (i in sides) {\n\t\t\t_sides.push(i.x);\n\t\t\t_sides.push(i.y);\n\t\t}\n\t\tvar shape = new Polygon(_sides);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t// public function makePolygonInt(sides:Array<Int>):Polygon {\n\t// \tvar shape = new Polygon(sides);\n\t// \tbaseArray.push(shape);\n\t// \treturn shape;\n\t// }\n\n\t/**\n\t * [Description]\n\t * @param x\t\t\tx position\n\t * @param y\t\t\ty position\n\t * @param str\n\t * @return Path\n\t */\n\tpublic function makePath(x, y):Path {\n\t\tvar shape = new Path(x, y);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * The <polyline> element is used to create any shape that consists of only straight lines (that is connected at several points)\n\t *  (example [10,11,20,21] translates to point 1: (x: 10, y: 11) and point 1: (x: 20, y: 21)\n\t *\n\t * @example \tvar polyline = sketch.makePolyLine([10,11,20,21]);\n\t *\n\t * @param sides\t\t\tan array of x and y position\n\t * @return PolyLine\n\t */\n\tpublic function makePolyLine(sides:Array<Float>):PolyLine {\n\t\tvar shape = new PolyLine(sides);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Create polyline with an array of points ( {x:22, y:33} )\n\t * (it's syntatic sugar for makePolyLine)\n\t *\n\t * @param sides\t\tan array of points [{x:22, y:33}]\n\t * @return polyline\n\t */\n\tpublic function makePolyLinePoint(sides:Array<Point>):PolyLine {\n\t\tvar _sides:Array<Float> = [];\n\t\tfor (i in sides) {\n\t\t\t_sides.push(i.x);\n\t\t\t_sides.push(i.y);\n\t\t}\n\t\tvar shape = new PolyLine(_sides);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * @source \thttps://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Gradients\n\t * \t\t\thttps://www.w3schools.com/graphics/svg_grad_linear.asp\n\t */\n\tpublic function makeGradient(color0:String, color1:String, isLinear:Bool = true):Gradient {\n\t\tvar shape = new Gradient(color0, color1, isLinear);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * add an image\n\t *\n\t * @source \thttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/image\n\t *\n\t * @param x\t\t\t\tPositions the image horizontally from the origin\n\t * @param y\t\t\t\tPositions the image vertically from the origin.\n\t * @param href\t\t\tPoints at a URL for the image file.\n\t * @param width\t\t\tThe width the image renders at. Unlike HTML's <img>, this attribute is required.\n\t * @param height\t\tThe height the image renders at. Unlike HTML's <img>, this attribute is required.\n\t * @param isCenter\n\t * @return Image\n\t */\n\tpublic function makeImage(x:Float, y:Float, href:String, width:Float, height:Float, ?isCenter:Bool = false):Image {\n\t\tvar shape = new Image(x, y, href, width, height, isCenter);\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * Group is an collection of IBase items\n\t * usefull if you want to rotate/color/stroke-weight a group of items at the same time.\n\t * In Illustrator it will be layer, so usefull to group items to make a more structured file\n\t *\n\t * @param array\t\tarray of items (IBase), a collection of shapes or groups\n\t * @return Group\n\t */\n\tpublic function makeGroup(array:Array<IBase>):Group {\n\t\tvar shape = new Group(array);\n\t\tfor (j in 0...array.length) {\n\t\t\tvar _base = array[j];\n\t\t\tfor (i in 0...baseArray.length) {\n\t\t\t\tvar base:IBase = baseArray[i];\n\t\t\t\tif (base == _base) {\n\t\t\t\t\tbaseArray[i] = null; // the reason there is base == null!\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseArray.push(shape);\n\t\treturn shape;\n\t}\n\n\t/**\n\t * helpfull debug tool, register point\n\t *\n\t * ```\n\t * var sketch = Sketcher.create(params).appendTo(elem);\n\t * sketch.makeX(10,10);\n\t * ```\n\t *\n\t * @param x\t\t\tposition in x dir (will automaticly be rounded to Int) but why?\n\t * @param y\t\t\tposition in y dir (will automaticly be rounded to Int)\n\t * @param color\t\t(optional) default color is red\n\t * @return PolyLine\n\t */\n\tpublic function makeX(x:Float, y:Float, ?color:String = 'red'):PolyLine {\n\t\tvar cx = Math.round(x);\n\t\tvar cy = Math.round(y);\n\t\tvar r = 5;\n\n\t\tvar polyline = new PolyLine([\n\t\t\t    cx,     cy,\n\t\t\tcx - r,     cy,\n\t\t\t    cx,     cy,\n\t\t\tcx + r,     cy,\n\t\t\t    cx,     cy,\n\t\t\t    cx, cy - r,\n\t\t\t    cx,     cy,\n\t\t\t    cx, cy + r,\n\t\t\t    cx,     cy,\n\t\t]);\n\t\tpolyline.id = 'registration_marker_${polyline.count}';\n\t\tpolyline.desc = 'Registration Marker\\nx: ${cx}, y: ${cy}';\n\t\tpolyline.stroke = color;\n\t\tbaseArray.push(polyline);\n\t\treturn polyline;\n\t}\n\n\t/**\n\t * not sure this is needed, but will leave this here for now\n\t * @param x\n\t * @param y\n\t * @param color\n\t * @return PolyLine\n\t */\n\tpublic function makeXCross(x:Float, y:Float, size:Float):PolyLine {\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\tvar r = size;\n\n\t\tvar polyline = new PolyLine([\n\t\t\t    cx,     cy,\n\t\t\tcx - r,     cy,\n\t\t\t    cx,     cy,\n\t\t\tcx + r,     cy,\n\t\t\t    cx,     cy,\n\t\t\t    cx, cy - r,\n\t\t\t    cx,     cy,\n\t\t\t    cx, cy + r,\n\t\t\t    cx,     cy,\n\t\t]);\n\t\tpolyline.id = 'xcross_${polyline.count}';\n\t\tpolyline.desc = 'xcross\\nx: ${cx}, y: ${cy}, size:${size}';\n\t\tbaseArray.push(polyline);\n\t\treturn polyline;\n\t}\n\n\t/**\n\t * basic reset\n\t */\n\tpublic function clear() {\n\t\tbaseArray = [];\n\t\tif (settings.type.toLowerCase() == 'svg')\n\t\t\telement.innerHTML = '';\n\t\tif (settings.type.toLowerCase() == 'canvas')\n\t\t\tctx.clearRect(0, 0, settings.width, settings.height);\n\t}\n\n\t/**\n\t * all elements created in code, are store here,\n\t * this way its possible to add a element (for example a rectangle)\n\t * and later put that rectangle in a group\n\t *\n\t * @return Array<IBase>\n\t */\n\tpublic function getBaseArray():Array<IBase> {\n\t\treturn baseArray;\n\t}\n\n\t/**\n\t * get the SVG (as String) used for this sketch\n\t *\n\t * @return String\n\t */\n\tpublic function getSVG():String {\n\t\t// var svg:js.html.svg.SVGElement = cast wrapperDiv.getElementsByTagName('svg')[0];\n\t\tvar div = document.getElementById(WRAPPER_ID);\n\t\treturn div.innerHTML;\n\t}\n\n\t/**\n\t * get the SVGElement used for the sketch\n\t *\n\t * @return js.html.svg.SVGElement\n\t */\n\tpublic function getSVGElement():js.html.svg.SVGElement {\n\t\t// var svg:js.html.svg.SVGElement = cast wrapperDiv.getElementsByTagName('svg')[0];\n\t\tvar svg:js.html.svg.SVGElement = cast document.getElementById(SVG_ID);\n\t\treturn svg;\n\t}\n\n\t// ____________________________________ update ____________________________________\n\n\t/**\n\t * svg will be generated in array and objects\n\t *\n\t * So to generate the svg, you need to update it!\n\t */\n\tpublic function update() {\n\t\t// trace('WIP update');\n\n\t\tif (element == null) {\n\t\t\t// make sure the element exists\n\t\t\t// console.warn('element doesn\\'t exist in DOM (${element})');\n\t\t\treturn;\n\t\t}\n\t\t// trace('type:${settings.type}, id:${element.id}');\n\n\t\tswitch (settings.type) {\n\t\t\tcase 'svg':\n\t\t\t\t// trace('svg');\n\t\t\t\t// [mck] TODO change string into XML!!!\n\t\t\t\tvar svgW = '${settings.width}';\n\t\t\t\tvar svgH = '${settings.height}';\n\t\t\t\tif (settings.sizeType != null) {\n\t\t\t\t\tsvgW += '${settings.sizeType}';\n\t\t\t\t\tsvgH += '${settings.sizeType}';\n\t\t\t\t}\n\t\t\t\tvar _xml = '<?xml version=\"1.0\" standalone=\"no\"?><svg width=\"${svgW}\" height=\"${svgH}\" viewBox=\"0 0 ${svgW} ${svgH}\" version=\"1.1\" id=\"${SVG_ID}\" xmlns=\"http://www.w3.org/2000/svg\">';\n\t\t\t\tvar content = '';\n\t\t\t\tvar defs = '<defs>';\n\t\t\t\tfor (i in 0...baseArray.length) {\n\t\t\t\t\tvar base = baseArray[i];\n\n\t\t\t\t\tif (base == null)\n\t\t\t\t\t\tcontinue; // with the creation of groups there are base == null\n\n\t\t\t\t\t// if (base.type == 'Group') {\n\t\t\t\t\t// \ttrace('groups do this');\n\t\t\t\t\t// \tcast(base, draw.Group).test();\n\t\t\t\t\t// }\n\t\t\t\t\tvar draw = base.svg(settings);\n\t\t\t\t\t// trace(base.toString());\n\t\t\t\t\t// trace(draw);\n\t\t\t\t\tif (base.type == 'gradient') {\n\t\t\t\t\t\tdefs += draw;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontent += draw;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_xml += defs + '</defs>';\n\t\t\t\t_xml += content + '</svg>';\n\t\t\t\tsvg = _xml; // external acces?\n\t\t\t\telement.innerHTML = _xml;\n\t\t\tcase 'canvas':\n\t\t\t\t// trace('canvas');\n\t\t\t\tfor (i in 0...baseArray.length) {\n\t\t\t\t\tvar base = baseArray[i];\n\t\t\t\t\tif (base == null)\n\t\t\t\t\t\tcontinue; // with the creation of groups there are base == null\n\t\t\t\t\t// trace(base.type);\n\t\t\t\t\tbase.ctx(ctx);\n\t\t\t\t}\n\t\t\tcase 'webgl':\n\t\t\t\ttrace('webgl');\n\t\t\t\tfor (i in 0...baseArray.length) {\n\t\t\t\t\tvar base = baseArray[i];\n\t\t\t\t\tif (base == null)\n\t\t\t\t\t\tcontinue; // with the creation of groups there are base == null\n\t\t\t\t\t// trace(base.type);\n\t\t\t\t\tbase.gl(gl);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\ttrace(\"case '\" + settings.type + \"': trace ('\" + settings.type + \"');\");\n\t\t}\n\t}\n\n\t// [mck] TODO create settings AST to have possible object send as well?\n\tpublic static function create(settings:Settings):Sketcher {\n\t\tvar sketcher = new Sketcher(settings);\n\t\tsketcher.baseArray = []; // make sure it's empty\n\t\treturn sketcher;\n\t}\n}\n\n/**\n * Sketcher.Globals has values you can access easily\n *\n * @usage:\n * \t\timport Sketcher.Globals.*;\n *\n * @source\n * \t\t\thttps://groups.google.com/forum/#!topic/haxelang/CPbyE3WCvnc\n * \t\t\thttps://gist.github.com/nadako/5913724\n */\nclass Globals {\n\tpublic static var MOUSE_DOWN:String = 'mousedown';\n\tpublic static var MOUSE_UP:String = 'mouseup';\n\tpublic static var MOUSE_MOVE:String = 'mousemove';\n\tpublic static var KEY_DOWN:String = 'keydown';\n\tpublic static var KEY_UP:String = 'keyup';\n\tpublic static var RESIZE:String = 'resize';\n\tpublic static var mouseX:Int;\n\tpublic static var mouseY:Int;\n\tpublic static var mouseMoved:Bool;\n\tpublic static var mouseDown:Bool;\n\tpublic static var keyDown:Int;\n\tpublic static var keyUp:Int;\n\tpublic static var mousePressed:Int = 0;\n\tpublic static var mouseReleased:Int = 0;\n\tpublic static var isFullscreen:Bool = false;\n\tpublic static var TWO_PI:Float = Math.PI * 2;\n\t// allows me global access to canvas and it’s width and height properties\n\tpublic static var w:Int;\n\tpublic static var h:Int;\n\t// public static var width:Int;\n\t// public static var height:Int;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar v:Int = Syntax.code('parseInt({0}, ({0}[{1}]==\"x\" || {0}[{1}]==\"X\") ? 16 : 10)', x, i + 1);\n\t\t\t\t\treturn Math.isNaN(v) ? null : v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\t__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = __js__('Date'), __js__('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", __js__('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", __js__('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", __js__('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", __js__('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", __js__('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", __js__('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", __js__('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get, never):Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length():Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>(x:T):Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar(c:Int):Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub(s:String, pos:Int, ?len:Int):Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn b;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.StringIterator;\nimport haxe.iterators.StringKeyValueIterator;\n\n#if cpp\nusing cpp.NativeString;\n#end\n\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function(c) {\n\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static function postProcessUrlEncode(s:String):String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0, len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch (_charAt(s, i++)) {\n\t\t\t\tcase '+'.code:\n\t\t\t\t\tret.add('%20');\n\t\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\t\tvar c1 = _charAt(s, i++), c2 = _charAt(s, i++);\n\t\t\t\t\tswitch [c1, c2] {\n\t\t\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\t\t\tret.addChar('('.code);\n\t\t\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t\t}\n\t\t\t\tcase var chr:\n\t\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n\t#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\ttry\n\t\t\treturn java.net.URLDecoder.decode(s, \"UTF-8\")\n\t\tcatch (e:Dynamic)\n\t\t\tthrow e;\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"+\", \" \");\n\t\ts = lua.NativeStringTools.gsub(s, \"%%(%x%x)\", function(h) {\n\t\t\treturn lua.NativeStringTools.char(lua.Lua.tonumber(h, 16));\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \"\\r\\n\", \"\\n\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape(s:String, ?quotes:Bool):String {\n\t\tvar buf = new StringBuf();\n\t\tfor (code in new haxe.iterators.StringIteratorUnicode(s)) {\n\t\t\tswitch (code) {\n\t\t\t\tcase '&'.code:\n\t\t\t\t\tbuf.add(\"&amp;\");\n\t\t\t\tcase '<'.code:\n\t\t\t\t\tbuf.add(\"&lt;\");\n\t\t\t\tcase '>'.code:\n\t\t\t\t\tbuf.add(\"&gt;\");\n\t\t\t\tcase '\"'.code if (quotes):\n\t\t\t\t\tbuf.add(\"&quot;\");\n\t\t\t\tcase '\\''.code if (quotes):\n\t\t\t\t\tbuf.add(\"&#039;\");\n\t\t\t\tcase _:\n\t\t\t\t\tbuf.addChar(code);\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape(s:String):String {\n\t\treturn s.split(\"&gt;\")\n\t\t\t.join(\">\")\n\t\t\t.split(\"&lt;\")\n\t\t\t.join(\"<\")\n\t\t\t.split(\"&quot;\")\n\t\t\t.join('\"')\n\t\t\t.split(\"&#039;\")\n\t\t\t.join(\"'\")\n\t\t\t.split(\"&amp;\")\n\t\t\t.join(\"&\");\n\t}\n\n\t/**\n\t\tReturns `true` if `s` contains `value` and  `false` otherwise.\n\n\t\tWhen `value` is `null`, the result is unspecified.\n\t**/\n\tpublic static inline function contains(s:String, value:String):Bool {\n\t\treturn s.indexOf(value) != -1;\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python) inline #end function startsWith(s:String, start:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length < start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor (i in 0...start.length)\n\t\t\tif (p0.at(i) != p1.at(i))\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0, start.bytes, 0, start.length << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.startswith(s, start);\n\t\t#else\n\t\treturn (s.length >= start.length && s.lastIndexOf(start, 0) == 0);\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python) inline #end function endsWith(s:String, end:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length < end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add(s.length - end.length);\n\t\tvar p1 = end.c_str();\n\t\tfor (i in 0...end.length)\n\t\t\tif (p0.at(i) != p1.at(i))\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.endswith(s, end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn (slen >= elen && s.indexOf(end, (slen - elen)) == (slen - elen));\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace(s:String, pos:Int):Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length)\n\t\t\treturn false;\n\t\t#end\n\t\tvar c = s.charCodeAt(pos);\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, r)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0)\n\t\t\treturn s.substr(r, l - r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, l - r - 1)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0) {\n\t\t\treturn s.substr(0, l - r);\n\t\t} else {\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn (cast s : java.NativeString).trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tl -= s.length;\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\tbuf.add(s);\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tbuf.add(s);\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s` except the last one. If `by` is also the empty String `\"\"`, `s`\n\t\tremains unchanged.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace(s:String, sub:String, by:String):String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn (cast s : java.NativeString).replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex(n:Int, ?digits:Int) {\n\t\t#if flash\n\t\tvar n:UInt = n;\n\t\tvar s:String = untyped n.toString(16);\n\t\ts = s.toUpperCase();\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\tdo {\n\t\t\ts = hexChars.charAt(n & 15) + s;\n\t\t\tn >>>= 4;\n\t\t} while (n > 0);\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif (digits != null)\n\t\t\twhile (s.length < digits)\n\t\t\t\ts = \"0\" + s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function fastCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn (index < s.length) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn (cast(index, UInt) < s.length) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an iterator of the char codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringIteratorUnicode`.\n\t**/\n\tpublic static inline function iterator(s:String):StringIterator {\n\t\treturn new StringIterator(s);\n\t}\n\n\t/**\n\t\tReturns an iterator of the char indexes and codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different of runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringKeyValueIteratorUnicode`.\n\t**/\n\tpublic static inline function keyValueIterator(s:String):StringKeyValueIterator {\n\t\treturn new StringKeyValueIterator(s);\n\t}\n\n\t/**\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t**/\n\t@:noUsing public static inline function isEof(c:Int):Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua || eval)\n\t\treturn c == null;\n\t\t#elseif (cs || java || python)\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteUnixArg() is deprecated. Use haxe.SysTools.quoteUnixArg() instead.')\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\treturn inline haxe.SysTools.quoteUnixArg(argument);\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.winMetaCharacters is deprecated. Use haxe.SysTools.winMetaCharacters instead.')\n\tpublic static var winMetaCharacters:Array<Int> = cast haxe.SysTools.winMetaCharacters;\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```haxe\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteWinArg() is deprecated. Use haxe.SysTools.quoteWinArg() instead.')\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\treturn inline haxe.SysTools.quoteWinArg(argument, escapeMetaCharacters);\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16\n\t\treturn (cast str : java.NativeString).charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\", \"url_encode\", 1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\", \"url_decode\", 1);\n\t#end\n\n\t#if utf16\n\tstatic inline var MIN_SURROGATE_CODE_POINT = 65536;\n\n\tstatic inline function utf16CodePointAt(s:String, index:Int):Int {\n\t\tvar c = StringTools.fastCodeAt(s, index);\n\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n\t\t\tc = ((c - 0xD7C0) << 10) | (StringTools.fastCodeAt(s, index + 1) & 0x3FF);\n\t\t}\n\t\treturn c;\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass(c:Class<Dynamic>);\n\tTEnum(e:Enum<Dynamic>);\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\tpublic static inline function getClass<T>(o:T):Class<T> {\n\t\treturn @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum(o:EnumValue):Enum<Dynamic>\n\t\tuntyped {\n\t\t\tif (o == null)\n\t\t\t\treturn null;\n\t\t\t#if js_enums_as_arrays\n\t\t\treturn o.__enum__;\n\t\t\t#else\n\t\t\treturn $hxEnums[o.__enum__];\n\t\t\t#end\n\t\t}\n\n\tpublic static inline function getSuperClass(c:Class<Dynamic>):Class<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.getSuperClass\", c.__super__);\n\t}\n\n\tpublic static inline function getClassName(c:Class<Dynamic>):String {\n\t\treturn untyped __define_feature__(\"Type.getClassName\", c.__name__);\n\t}\n\n\tpublic static inline function getEnumName(e:Enum<Dynamic>):String {\n\t\treturn untyped __define_feature__(\"Type.getEnumName\", e.__ename__);\n\t}\n\n\t#if js_enums_as_arrays\n\tpublic static function resolveClass(name:String):Class<Dynamic>\n\t\tuntyped {\n\t\t\tvar cl:Class<Dynamic> = $hxClasses[name];\n\t\t\t// ensure that this is a class\n\t\t\tif (cl == null || !js.Boot.isClass(cl))\n\t\t\t\treturn null;\n\t\t\treturn cl;\n\t\t}\n\n\tpublic static function resolveEnum(name:String):Enum<Dynamic>\n\t\tuntyped {\n\t\t\tvar e:Dynamic = $hxClasses[name];\n\t\t\t// ensure that this is an enum\n\t\t\tif (e == null || !js.Boot.isEnum(e))\n\t\t\t\treturn null;\n\t\t\treturn e;\n\t\t}\n\t#else\n\tpublic static inline function resolveClass(name:String):Class<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.resolveClass\", $hxClasses[name]);\n\t}\n\n\tpublic static inline function resolveEnum(name:String):Enum<Dynamic> {\n\t\treturn untyped __define_feature__(\"Type.resolveEnum\", $hxEnums[name]);\n\t}\n\t#end\n\n\t#if (js_es < 5)\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T {\n\t\tswitch (args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn js.Syntax.construct(cl);\n\t\t\tcase 1:\n\t\t\t\treturn js.Syntax.construct(cl, args[0]);\n\t\t\tcase 2:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1]);\n\t\t\tcase 3:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2]);\n\t\t\tcase 4:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3]);\n\t\t\tcase 5:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 6:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5]);\n\t\t\tcase 7:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t\t\tcase 8:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n\t\t\tcase 9:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\n\t\t\tcase 10:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\n\t\t\tcase 11:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10]);\n\t\t\tcase 12:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11]);\n\t\t\tcase 13:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\n\t\t\t\t\targs[12]);\n\t\t\tcase 14:\n\t\t\t\treturn js.Syntax.construct(cl, args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11],\n\t\t\t\t\targs[12], args[13]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\tpublic static function createEmptyInstance<T>(cl:Class<T>):T\n\t\tuntyped {\n\t\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\t\treturn __js__(\"new empty()\");\n\t\t}\n\t#else\n\tpublic static function createInstance<T>(cl:Class<T>, args:Array<Dynamic>):T\n\t\tuntyped {\n\t\t\treturn untyped __js__(\"new ({0})\", Function.prototype.bind.apply(cl, [null].concat(args)));\n\t\t}\n\n\tpublic static inline function createEmptyInstance<T>(cl:Class<T>):T {\n\t\treturn js.lib.Object.create((cast cl).prototype);\n\t}\n\t#end\n\n\tpublic static function createEnum<T>(e:Enum<T>, constr:String, ?params:Array<Dynamic>):T {\n\t\tvar f:Dynamic = Reflect.field(e, constr);\n\t\tif (f == null)\n\t\t\tthrow \"No such constructor \" + constr;\n\t\tif (Reflect.isFunction(f)) {\n\t\t\tif (params == null)\n\t\t\t\tthrow \"Constructor \" + constr + \" need parameters\";\n\t\t\treturn Reflect.callMethod(e, f, params);\n\t\t}\n\t\tif (params != null && params.length != 0)\n\t\t\tthrow \"Constructor \" + constr + \" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>(e:Enum<T>, index:Int, ?params:Array<Dynamic>):T {\n\t\tvar c:String = (untyped e.__constructs__)[index];\n\t\tif (c == null)\n\t\t\tthrow index + \" is not a valid enum constructor index\";\n\t\treturn createEnum(e, c, params);\n\t}\n\n\t#if (js_es >= 6)\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\n\t\tvar result = [];\n\t\twhile (c != null) {\n\t\t\tfor (name in js.lib.Object.getOwnPropertyNames((cast c).prototype)) {\n\t\t\t\tswitch name {\n\t\t\t\t\tcase \"constructor\" | \"__class__\" | \"__properties__\":\n\t\t\t\t\t// skip special names\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tif (result.indexOf(name) == -1)\n\t\t\t\t\t\t\tresult.push(name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc = getSuperClass(c);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = js.lib.Object.getOwnPropertyNames(cast c);\n\t\ta.remove(\"__id__\");\n\t\ta.remove(\"hx__closures__\");\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__isInterface__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__instanceFields__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\ta.remove(\"name\");\n\t\ta.remove(\"length\");\n\t\treturn a;\n\t}\n\t#else\n\tpublic static function getInstanceFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields(c:Class<Dynamic>):Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\t#end\n\n\tpublic static inline function getEnumConstructs(e:Enum<Dynamic>):Array<String> {\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function typeof(v:Dynamic):ValueType {\n\t\tswitch (js.Syntax.typeof(v)) {\n\t\t\tcase \"boolean\":\n\t\t\t\treturn TBool;\n\t\t\tcase \"string\":\n\t\t\t\treturn TClass(String);\n\t\t\tcase \"number\":\n\t\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\t\tif (Math.ceil(v) == v % 2147483648.0)\n\t\t\t\t\treturn TInt;\n\t\t\t\treturn TFloat;\n\t\t\tcase \"object\":\n\t\t\t\tif (v == null)\n\t\t\t\t\treturn TNull;\n\t\t\t\tvar e = v.__enum__;\n\t\t\t\tif (e != null) {\n\t\t\t\t\t#if js_enums_as_arrays\n\t\t\t\t\treturn TEnum(e);\n\t\t\t\t\t#else\n\t\t\t\t\treturn TEnum(untyped $hxEnums[e]);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t\tvar c = js.Boot.getClass(v);\n\t\t\t\tif (c != null)\n\t\t\t\t\treturn TClass(c);\n\t\t\t\treturn TObject;\n\t\t\tcase \"function\":\n\t\t\t\tif (js.Boot.isClass(v) || js.Boot.isEnum(v))\n\t\t\t\t\treturn TObject;\n\t\t\t\treturn TFunction;\n\t\t\tcase \"undefined\":\n\t\t\t\treturn TNull;\n\t\t\tdefault:\n\t\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T:EnumValue>(a:T, b:T):Bool\n\t\tuntyped {\n\t\t\tif (a == b)\n\t\t\t\treturn true;\n\t\t\ttry {\n\t\t\t\tvar e = a.__enum__;\n\t\t\t\tif (e == null || e != b.__enum__)\n\t\t\t\t\treturn false;\n\t\t\t\t#if js_enums_as_arrays\n\t\t\t\tif (a[0] != b[0])\n\t\t\t\t\treturn false;\n\t\t\t\tfor (i in 2...a.length)\n\t\t\t\t\tif (!enumEq(a[i], b[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t#else\n\t\t\t\tif (a._hx_index != b._hx_index)\n\t\t\t\t\treturn false;\n\t\t\t\tvar enm = $hxEnums[e];\n\t\t\t\tvar ctorName = enm.__constructs__[a._hx_index];\n\t\t\t\tvar params:Array<String> = enm[ctorName].__params__;\n\t\t\t\tfor (f in params) {\n\t\t\t\t\tif (!enumEq(a[f], b[f])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\tpublic inline static function enumConstructor(e:EnumValue):String {\n\t\t#if js_enums_as_arrays\n\t\treturn untyped e[0];\n\t\t#else\n\t\treturn untyped $hxEnums[e.__enum__].__constructs__[e._hx_index];\n\t\t#end\n\t}\n\n\t#if js_enums_as_arrays\n\tpublic inline static function enumParameters(e:EnumValue):Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\t#else\n\tpublic static function enumParameters(e:EnumValue):Array<Dynamic>\n\t\tuntyped {\n\t\t\tvar enm:Enum<Dynamic> = $hxEnums[e.__enum__];\n\t\t\tvar ctorName:String = enm.__constructs__[e._hx_index];\n\t\t\tvar params:Array<String> = enm[ctorName].__params__;\n\t\t\treturn params != null ? [for (p in params) e[p]] : [];\n\t\t}\n\t#end\n\n\tpublic inline static function enumIndex(e:EnumValue):Int {\n\t\t#if !js_enums_as_arrays\n\t\treturn untyped e._hx_index;\n\t\t#else\n\t\treturn untyped e[1];\n\t\t#end\n\t}\n\n\tpublic inline static function allEnums<T>(e:Enum<T>):Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__.slice());\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tXml node types.\n\n\t@see https://haxe.org/manual/std-Xml.html\n**/\nenum abstract XmlType(Int) {\n\t/**\n\t\tRepresents an XML element type.\n\t**/\n\tvar Element = 0;\n\n\t/**\n\t\tRepresents XML parsed character data type.\n\t**/\n\tvar PCData = 1;\n\n\t/**\n\t\tRepresents XML character data type.\n\t**/\n\tvar CData = 2;\n\n\t/**\n\t\tRepresents an XML comment type.\n\t**/\n\tvar Comment = 3;\n\n\t/**\n\t\tRepresents an XML doctype element type.\n\t**/\n\tvar DocType = 4;\n\n\t/**\n\t\tRepresents an XML processing instruction type.\n\t**/\n\tvar ProcessingInstruction = 5;\n\n\t/**\n\t\tRepresents an XML document type.\n\t**/\n\tvar Document = 6;\n\n\tpublic function toString():String {\n\t\treturn switch (cast this : XmlType) {\n\t\t\tcase Element: \"Element\";\n\t\t\tcase PCData: \"PCData\";\n\t\t\tcase CData: \"CData\";\n\t\t\tcase Comment: \"Comment\";\n\t\t\tcase DocType: \"DocType\";\n\t\t\tcase ProcessingInstruction: \"ProcessingInstruction\";\n\t\t\tcase Document: \"Document\";\n\t\t};\n\t}\n}\n\n/**\n\tCross-platform Xml API.\n\n\t@see https://haxe.org/manual/std-Xml.html\n**/\nclass Xml {\n\t/**\n\t\tXML element type.\n\t**/\n\tstatic public var Element(default, never) = XmlType.Element;\n\n\t/**\n\t\tXML parsed character data type.\n\t**/\n\tstatic public var PCData(default, never) = XmlType.PCData;\n\n\t/**\n\t\tXML character data type.\n\t**/\n\tstatic public var CData(default, never) = XmlType.CData;\n\n\t/**\n\t\tXML comment type.\n\t**/\n\tstatic public var Comment(default, never) = XmlType.Comment;\n\n\t/**\n\t\tXML doctype element type.\n\t**/\n\tstatic public var DocType(default, never) = XmlType.DocType;\n\n\t/**\n\t\tXML processing instruction type.\n\t**/\n\tstatic public var ProcessingInstruction(default, never) = XmlType.ProcessingInstruction;\n\n\t/**\n\t\tXML document type.\n\t**/\n\tstatic public var Document(default, never) = XmlType.Document;\n\n\t/**\n\t\tParses the String into an Xml document.\n\t**/\n\tstatic public function parse(str:String):Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\t/**\n\t\tReturns the type of the Xml Node. This should be used before\n\t\taccessing other functions since some might raise an exception\n\t\tif the node type is not correct.\n\t**/\n\tpublic var nodeType(default, null):XmlType;\n\n\t/**\n\t\tReturns the node name of an Element.\n\t**/\n\t@:isVar public var nodeName(get, set):String;\n\n\t/**\n\t\tReturns the node value. Only works if the Xml node is not an Element or a Document.\n\t**/\n\t@:isVar public var nodeValue(get, set):String;\n\n\t/**\n\t\tReturns the parent object in the Xml hierarchy.\n\t\tThe parent can be `null`, an Element or a Document.\n\t**/\n\tpublic var parent(default, null):Xml;\n\n\tvar children:Array<Xml>;\n\tvar attributeMap:Map<String, String>;\n\n\t#if !cppia inline #end function get_nodeName() {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn nodeName;\n\t}\n\n\t#if !cppia inline #end function set_nodeName(v) {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn this.nodeName = v;\n\t}\n\n\t#if !cppia inline #end function get_nodeValue() {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\t#if !cppia inline #end function set_nodeValue(v) {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn this.nodeValue = v;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createElement(name:String):Xml {\n\t\tvar xml = new Xml(Element);\n\t\txml.nodeName = name;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createPCData(data:String):Xml {\n\t\tvar xml = new Xml(PCData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createCData(data:String):Xml {\n\t\tvar xml = new Xml(CData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createComment(data:String):Xml {\n\t\tvar xml = new Xml(Comment);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocType(data:String):Xml {\n\t\tvar xml = new Xml(DocType);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createProcessingInstruction(data:String):Xml {\n\t\tvar xml = new Xml(ProcessingInstruction);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocument():Xml {\n\t\treturn new Xml(Document);\n\t}\n\n\t/**\n\t\tGet the given attribute of an Element node. Returns `null` if not found.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function get(att:String):String {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap[att];\n\t}\n\n\t/**\n\t\tSet the given attribute value for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function set(att:String, value:String):Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.set(att, value);\n\t}\n\n\t/**\n\t\tRemoves an attribute for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function remove(att:String):Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.remove(att);\n\t}\n\n\t/**\n\t\tTells if the Element node has a given attribute.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function exists(att:String):Bool {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.exists(att);\n\t}\n\n\t/**\n\t\tReturns an `Iterator` on all the attribute names.\n\t**/\n\tpublic function attributes():Iterator<String> {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.keys();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic #if !cppia inline #end function iterator():Iterator<Xml> {\n\t\tensureElementType();\n\t\treturn children.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elements():Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements with the given nodeName.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elementsNamed(name:String):Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [\n\t\t\tfor (child in children)\n\t\t\t\tif (child.nodeType == Element && child.nodeName == name) child\n\t\t];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns the first child node.\n\t**/\n\tpublic #if !cppia inline #end function firstChild():Xml {\n\t\tensureElementType();\n\t\treturn children[0];\n\t}\n\n\t/**\n\t\tReturns the first child node which is an Element.\n\t**/\n\tpublic function firstElement():Xml {\n\t\tensureElementType();\n\t\tfor (child in children) {\n\t\t\tif (child.nodeType == Element) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tAdds a child node to the Document or Element.\n\t\tA child node can only be inside one given parent node, which is indicated by the `parent` property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function addChild(x:Xml):Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.removeChild(x);\n\t\t}\n\t\tchildren.push(x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tRemoves a child from the Document or Element.\n\t\tReturns true if the child was successfuly removed.\n\t**/\n\tpublic function removeChild(x:Xml):Bool {\n\t\tensureElementType();\n\t\tif (children.remove(x)) {\n\t\t\tx.parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tInserts a child at the given position among the other childs.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function insertChild(x:Xml, pos:Int):Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.children.remove(x);\n\t\t}\n\t\tchildren.insert(pos, x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tReturns a String representation of the Xml node.\n\t**/\n\tpublic #if !cppia inline #end function toString():String {\n\t\treturn haxe.xml.Printer.print(this);\n\t}\n\n\tfunction new(nodeType:XmlType) {\n\t\tthis.nodeType = nodeType;\n\t\tchildren = [];\n\t\tattributeMap = new Map();\n\t}\n\n\tinline function ensureElementType() {\n\t\tif (nodeType != Document && nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element or Document but found $nodeType';\n\t\t}\n\t}\n}\n","package examples;\n\nimport sketcher.draw.AST.LineCap;\nimport js.Browser.*;\nimport sketcher.util.GridUtil;\nimport sketcher.util.MathUtil;\nimport sketcher.util.ColorUtil.*;\n\nclass ExAll {\n\tvar radiusSmall:Float = 50;\n\t//\n\tvar sketchWidth = 600;\n\tvar sketchHeight = 400;\n\t//\n\tvar grid:GridUtil;\n\t//\n\tvar isDebug:Bool = true;\n\n\tpublic function new() {\n\t\t// document.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t// \t// DOM ready\n\t\t// \tconsole.log('${App.NAME} :: build: ${App.getBuildDate()}');\n\t\t// });\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\t// to connected to sketch\n\t\tgrid = new GridUtil(sketchWidth, sketchHeight);\n\t\tgrid.setNumbered(3, 3); // 3 horizontal, 3 vertical\n\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n\n\t\tinitDocument(); // if document doesn't have elements with correct id\n\t\tsketchSVG();\n\t\tsketchCanvas();\n\t}\n\n\tfunction initDocument() {\n\t\tvar wrapper = document.createDivElement();\n\t\twrapper.id = 'sketcher-wrapper';\n\t\twrapper.className = 'container';\n\n\t\tvar div0 = document.createDivElement();\n\t\tdiv0.id = 'sketcher-svg';\n\n\t\tvar div1 = document.createDivElement();\n\t\tdiv1.id = 'sketcher-canvas';\n\n\t\twrapper.appendChild(div0);\n\t\twrapper.appendChild(div1);\n\t\tdocument.body.appendChild(wrapper);\n\t}\n\n\tfunction sketchSVG() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-svg');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'svg');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar p = grid.array[0];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, 50);\n\n\t\tvar p = grid.array[1];\n\t\tvar rect = sketch.makeRectangle(p.x, p.y, 100, 100);\n\n\t\t// The object returned has many stylable properties:\n\t\tcircle.fill = '#FF8000';\n\t\tcircle.stroke = '#ff4500'; // Accepts all valid css color\n\t\tcircle.lineWeight = 5;\n\n\t\trect.fill = 'rgb(0, 200, 255)';\n\t\trect.fillOpacity = 0.75;\n\t\trect.noStroke();\n\n\t\tvar p = grid.array[2];\n\t\tvar pct = .77;\n\t\tvar _stroke = 15;\n\t\tvar _r = radiusSmall - (_stroke * 0.5);\n\t\tvar omtrek = MathUtil.circumferenceCircle(_r);\n\t\tvar dashLine = omtrek * pct;\n\t\tvar dashNoLine = omtrek - dashLine;\n\n\t\tvar circle = sketch.makeCircle(p.x, p.y, _r);\n\t\tcircle.lineCap = LineCap.Round;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(LIME);\n\t\tcircle.strokeWeight = _stroke;\n\t\tcircle.dash = [dashLine, dashNoLine];\n\t\tcircle.setRotate(-90, p.x, p.y); // rotate it 90 degree to start on top\n\n\t\tvar circle2 = sketch.makeCircle(p.x, p.y, _r);\n\t\tcircle2.fillOpacity = 0;\n\t\tcircle2.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle2.strokeWeight = _stroke;\n\t\tcircle2.strokeOpacity = 0.2;\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n\n\tfunction sketchCanvas() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'canvas');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar p = grid.array[0];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, 50);\n\n\t\tvar p = grid.array[1];\n\t\tvar rect = sketch.makeRectangle(p.x, p.y, 100, 100);\n\n\t\t// The object returned has many stylable properties:\n\t\tcircle.fillColor = '#FF8000';\n\t\tcircle.strokeColor = '#ff4500'; // Accepts all valid css color\n\t\tcircle.lineWeight = 5;\n\n\t\trect.fillColor = 'rgb(0, 200, 255)';\n\t\trect.fillOpacity = 0.75;\n\t\trect.noStroke();\n\n\t\tvar p = grid.array[2];\n\t\tvar pct = .77;\n\t\tvar _stroke = 15;\n\t\tvar _r = radiusSmall - (_stroke * 0.5);\n\t\tvar omtrek = MathUtil.circumferenceCircle(_r);\n\t\tvar dashLine = omtrek * pct;\n\t\tvar dashNoLine = omtrek - dashLine;\n\n\t\tvar circle = sketch.makeCircle(p.x, p.y, _r);\n\t\tcircle.id = \"round cap, lime color\";\n\t\tcircle.lineCap = LineCap.Round;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(LIME);\n\t\tcircle.strokeWeight = _stroke;\n\t\tcircle.dash = [dashLine, dashNoLine];\n\t\tcircle.setRotate(-90, p.x, p.y); // rotate it 90 degree to start on top\n\t\t// circle.debug();\n\n\t\tvar circle2 = sketch.makeCircle(p.x, p.y, _r);\n\t\tcircle2.id = \"circle round fuchsia\";\n\t\tcircle2.fillOpacity = 0;\n\t\tcircle2.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle2.strokeWeight = _stroke;\n\t\tcircle2.strokeOpacity = 0.2;\n\t\t// circle2.debug();\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n}\n","package examples;\n\nimport sketcher.draw.AST.LineCap;\nimport js.Browser.*;\nimport sketcher.util.GridUtil;\nimport sketcher.util.MathUtil;\nimport sketcher.util.ColorUtil.*;\n\nclass ExCircles {\n\tvar radiusSmall:Float = 50;\n\t//\n\tvar sketchWidth = 600;\n\tvar sketchHeight = 400;\n\t//\n\tvar grid:GridUtil;\n\t//\n\tvar isDebug:Bool = true;\n\n\tpublic function new() {\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\t// to connected to sketch\n\t\tgrid = new GridUtil(sketchWidth, sketchHeight);\n\t\tgrid.setNumbered(3, 3); // 3 horizontal, 3 vertical\n\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n\n\t\tinitDocument(); // if document doesn't have elements with correct id\n\t\tsketchSVG();\n\t\tsketchCanvas();\n\t}\n\n\tfunction initDocument() {\n\t\tvar wrapper = document.createDivElement();\n\t\twrapper.id = 'sketcher-wrapper';\n\t\twrapper.className = 'container';\n\n\t\tvar div0 = document.createDivElement();\n\t\tdiv0.id = 'sketcher-svg';\n\n\t\tvar div1 = document.createDivElement();\n\t\tdiv1.id = 'sketcher-canvas';\n\n\t\twrapper.appendChild(div0);\n\t\twrapper.appendChild(div1);\n\t\tdocument.body.appendChild(wrapper);\n\t}\n\n\tfunction sketchSVG() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-svg');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'svg');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction sketchCanvas() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'canvas');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction generateShapes(sketch:Sketcher) {\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar omtrek = MathUtil.circumferenceCircle(radiusSmall);\n\n\t\tvar p = grid.array[0];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\n\t\tvar p = grid.array[1];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.fillColor = getColourObj(LIME);\n\n\t\tvar p = grid.array[2];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.fillColor = getColourObj(LIME);\n\t\tcircle.lineWeight = 10;\n\n\t\tvar p = grid.array[3];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\n\t\tvar p = grid.array[4];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\t\tcircle.strokeColor = getColourObj(GREEN);\n\n\t\tvar p = grid.array[5];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\t\tcircle.strokeColor = getColourObj(GREEN);\n\t\tcircle.strokeOpacity = 0.5;\n\n\t\tvar p = grid.array[6];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\n\t\tvar p = grid.array[7];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 20;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle.dash = [omtrek / 8];\n\n\t\tvar p = grid.array[8];\n\t\tvar circle = sketch.makeCircle(p.x, p.y, radiusSmall);\n\t\tcircle.lineWeight = 20;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle.dash = [omtrek / 8];\n\t\tcircle.lineCap = LineCap.Round;\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n}\n","package examples;\n\nimport js.Browser.*;\nimport sketcher.util.GridUtil;\nimport sketcher.util.MathUtil;\nimport sketcher.util.ColorUtil.*;\n\nclass ExImage {\n\tvar sketchWidth = 600;\n\tvar sketchHeight = 400;\n\t//\n\tvar grid:GridUtil;\n\t//\n\tvar isDebug:Bool = true;\n\n\tpublic function new() {\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\t// to connected to sketch\n\t\tgrid = new GridUtil(sketchWidth, sketchHeight);\n\t\tgrid.setNumbered(3, 3); // 3 horizontal, 3 vertical\n\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n\n\t\tinitDocument(); // if document doesn't have elements with correct id\n\t\tsketchSVG();\n\t\tsketchCanvas();\n\t}\n\n\tfunction initDocument() {\n\t\tvar wrapper = document.createDivElement();\n\t\twrapper.id = 'sketcher-wrapper';\n\t\twrapper.className = 'container';\n\n\t\tvar div0 = document.createDivElement();\n\t\tdiv0.id = 'sketcher-svg';\n\n\t\tvar div1 = document.createDivElement();\n\t\tdiv1.id = 'sketcher-canvas';\n\n\t\twrapper.appendChild(div0);\n\t\twrapper.appendChild(div1);\n\t\tdocument.body.appendChild(wrapper);\n\t}\n\n\tfunction sketchSVG() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-svg');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'svg');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction sketchCanvas() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'canvas');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction generateShapes(sketch:Sketcher) {\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar p = grid.array[0];\n\t\tvar image = sketch.makeImage(p.x, p.y, \"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\", 100, 100);\n\n\t\tvar p = grid.array[1];\n\t\tvar image = sketch.makeImage(p.x, p.y, \"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\", 100, 100);\n\t\timage.setRotate(90, p.x, p.y);\n\n\t\tvar p = grid.array[3];\n\t\tvar image = sketch.makeImage(p.x, p.y, \"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\", 50, 50, true);\n\n\t\tvar p = grid.array[4];\n\t\tvar image = sketch.makeImage(p.x, p.y, \"https://mdn.mozillademos.org/files/6457/mdn_logo_only_color.png\", 50, 50, true);\n\t\timage.setRotate(90, p.x, p.y);\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n}\n","package examples;\n\nimport sketcher.draw.AST.LineCap;\nimport js.Browser.*;\nimport sketcher.util.GridUtil;\nimport sketcher.util.MathUtil;\nimport sketcher.util.ColorUtil.*;\n\nclass ExLine {\n\tvar radiusSmall:Float = 50;\n\t//\n\tvar sketchWidth = 600;\n\tvar sketchHeight = 400;\n\t//\n\tvar grid:GridUtil;\n\t//\n\tvar isDebug:Bool = true;\n\n\tpublic function new() {\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\t// to connected to sketch\n\t\tgrid = new GridUtil(sketchWidth, sketchHeight);\n\t\tgrid.setNumbered(3, 3); // 3 horizontal, 3 vertical\n\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n\n\t\tinitDocument(); // if document doesn't have elements with correct id\n\t\tsketchSVG();\n\t\tsketchCanvas();\n\t}\n\n\tfunction initDocument() {\n\t\tvar wrapper = document.createDivElement();\n\t\twrapper.id = 'sketcher-wrapper';\n\t\twrapper.className = 'container';\n\n\t\tvar div0 = document.createDivElement();\n\t\tdiv0.id = 'sketcher-svg';\n\n\t\tvar div1 = document.createDivElement();\n\t\tdiv1.id = 'sketcher-canvas';\n\n\t\twrapper.appendChild(div0);\n\t\twrapper.appendChild(div1);\n\t\tdocument.body.appendChild(wrapper);\n\t}\n\n\tfunction sketchSVG() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-svg');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'svg');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction sketchCanvas() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'canvas');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction generateShapes(sketch:Sketcher) {\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar omtrek = MathUtil.circumferenceCircle(radiusSmall);\n\n\t\tvar p = grid.array[0];\n\t\tvar line = sketch.makeLine(p.x, p.y, p.x + radiusSmall, p.y + radiusSmall);\n\t\tline.strokeWeight = 10;\n\t\tline.strokeColor = getColourObj(RED);\n\n\t\tvar p = grid.array[1];\n\t\tvar line = sketch.makeLine(p.x, p.y, p.x + radiusSmall, p.y + radiusSmall);\n\t\tline.strokeWeight = 10;\n\t\tline.lineCap = LineCap.Round;\n\t\tline.strokeColor = getColourObj(GREEN);\n\n\t\tvar p = grid.array[2];\n\t\tvar line = sketch.makeLine(p.x, p.y, p.x + radiusSmall, p.y + radiusSmall);\n\t\tline.strokeWeight = 10;\n\t\tline.lineCap = LineCap.Round;\n\t\tline.strokeColor = getColourObj(LIME);\n\t\tline.dash = [20, 10];\n\n\t\tvar p = grid.array[3];\n\t\tvar line = sketch.makeLine(p.x, p.y, p.x + radiusSmall, p.y + radiusSmall);\n\t\tline.strokeWeight = 10;\n\t\tline.lineCap = LineCap.Round;\n\t\tline.strokeColor = getColourObj(PINK);\n\t\tline.setRotate(10, p.x, p.y); // doesn't work for svg or canvas\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n}\n","package examples;\n\nimport sketcher.draw.AST.LineCap;\nimport js.Browser.*;\nimport sketcher.util.GridUtil;\nimport sketcher.util.MathUtil;\nimport sketcher.util.ColorUtil.*;\n\nclass ExRectangle {\n\tvar rectW:Float = 100;\n\tvar rectH:Float = 50;\n\t//\n\tvar sketchWidth = 600;\n\tvar sketchHeight = 400;\n\t//\n\tvar grid:GridUtil;\n\t//\n\tvar isDebug:Bool = true;\n\n\tpublic function new() {\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\t// to connected to sketch\n\t\tgrid = new GridUtil(sketchWidth, sketchHeight);\n\t\tgrid.setNumbered(3, 3); // 3 horizontal, 3 vertical\n\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n\n\t\tinitDocument(); // if document doesn't have elements with correct id\n\t\tsketchSVG();\n\t\tsketchCanvas();\n\t\tsketchWebgl();\n\t}\n\n\tfunction initDocument() {\n\t\tvar wrapper = document.createDivElement();\n\t\twrapper.id = 'sketcher-wrapper';\n\t\twrapper.className = 'container';\n\n\t\tvar div0 = document.createDivElement();\n\t\tdiv0.id = 'sketcher-svg';\n\n\t\tvar div1 = document.createDivElement();\n\t\tdiv1.id = 'sketcher-canvas';\n\n\t\tvar div2 = document.createDivElement();\n\t\tdiv2.id = 'sketcher-canvas-webgl';\n\n\t\twrapper.appendChild(div0);\n\t\twrapper.appendChild(div1);\n\t\twrapper.appendChild(div2);\n\n\t\tdocument.body.appendChild(wrapper);\n\t}\n\n\tfunction sketchSVG() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-svg');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'svg');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction sketchCanvas() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'canvas');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction sketchWebgl() {\n\t\t// Make an instance of two and place it on the page.\n\t\tvar elem = document.getElementById('sketcher-canvas-webgl');\n\t\tvar settings:Settings = new Settings(sketchWidth, sketchHeight, 'webgl');\n\t\tvar sketch = Sketcher.create(settings).appendTo(elem);\n\n\t\tgenerateShapes(sketch);\n\t}\n\n\tfunction generateShapes(sketch:Sketcher) {\n\t\t// quick generate grid\n\t\tif (isDebug) {\n\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t\t}\n\n\t\tvar omtrek = (rectW * 2) + (rectH * 2);\n\n\t\tvar p = grid.array[0];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\n\t\tvar p = grid.array[1];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.fillColor = getColourObj(LIME);\n\n\t\tvar p = grid.array[2];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.fillColor = getColourObj(LIME);\n\t\tcircle.lineWeight = 10;\n\n\t\tvar p = grid.array[3];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\n\t\tvar p = grid.array[4];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\t\tcircle.strokeColor = getColourObj(GREEN);\n\n\t\tvar p = grid.array[5];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0.5;\n\t\tcircle.strokeColor = getColourObj(GREEN);\n\t\tcircle.strokeOpacity = 0.5;\n\n\t\tvar p = grid.array[6];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillColor = getColourObj(PINK);\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\n\t\tvar p = grid.array[7];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle.dash = [40, 20];\n\n\t\tvar p = grid.array[8];\n\t\tvar circle = sketch.makeRectangle(p.x, p.y, rectW, rectH);\n\t\tcircle.lineWeight = 10;\n\t\tcircle.fillOpacity = 0;\n\t\tcircle.strokeColor = getColourObj(FUCHSIA);\n\t\tcircle.dash = [40, 20];\n\t\tcircle.lineCap = LineCap.Round;\n\n\t\t// Don't forget to tell two to render everything to the screen\n\t\tsketch.update();\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map:StringMap<T>;\n\tvar keys:Array<String>;\n\tvar index:Int;\n\tvar count:Int;\n\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String, T> {\n\tprivate var h:Dynamic;\n\tprivate var rh:Dynamic;\n\n\tpublic inline function new():Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String):Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set(key:String, value:T):Void {\n\t\tif (isReserved(key))\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get(key:String):Null<T> {\n\t\tif (isReserved(key))\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists(key:String):Bool {\n\t\tif (isReserved(key))\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved(key:String, value:T):Void {\n\t\tif (rh == null)\n\t\t\trh = {};\n\t\trh[cast \"$\" + key] = value;\n\t}\n\n\tfunction getReserved(key:String):Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\" + key];\n\t}\n\n\tfunction existsReserved(key:String):Bool {\n\t\tif (rh == null)\n\t\t\treturn false;\n\t\treturn (cast rh).hasOwnProperty(\"$\" + key);\n\t}\n\n\tpublic function remove(key:String):Bool {\n\t\tif (isReserved(key)) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif (rh == null || !rh.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(rh, key);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (!h.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t\tjs.Syntax.delete(h, key);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys():Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\n\tfunction arrayKeys():Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\tif (h.hasOwnProperty(key))\n\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif (rh != null)\n\t\t\tuntyped {\n\t\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif (key.charCodeAt(0) == \"$\".code)\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t\t__js__(\"}\");\n\t\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator():Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\t@:runtime public inline function keyValueIterator():KeyValueIterator<String, T> {\n\t\treturn new haxe.iterators.MapKeyValueIterator(this);\n\t}\n\n\tpublic function copy():StringMap<T> {\n\t\tvar copied = new StringMap();\n\t\tfor (key in keys())\n\t\t\tcopied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString():String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor (i in 0...keys.length) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif (i < keys.length - 1)\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function clear():Void {\n\t\th = {};\n\t\trh = null;\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __js__(\"var __map_reserved = {};\");\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.xml;\n\nusing StringTools;\n\nprivate enum abstract S(Int) {\n\tvar IGNORE_SPACES;\n\tvar BEGIN;\n\tvar BEGIN_NODE;\n\tvar TAG_NAME;\n\tvar BODY;\n\tvar ATTRIB_NAME;\n\tvar EQUALS;\n\tvar ATTVAL_BEGIN;\n\tvar ATTRIB_VAL;\n\tvar CHILDS;\n\tvar CLOSE;\n\tvar WAIT_END;\n\tvar WAIT_END_RET;\n\tvar PCDATA;\n\tvar HEADER;\n\tvar COMMENT;\n\tvar DOCTYPE;\n\tvar CDATA;\n\tvar ESCAPE;\n}\n\nclass XmlParserException {\n\t/**\n\t\tthe XML parsing error message\n\t**/\n\tpublic var message:String;\n\n\t/**\n\t\tthe line number at which the XML parsing error occurred\n\t**/\n\tpublic var lineNumber:Int;\n\n\t/**\n\t\tthe character position in the reported line at which the parsing error occurred\n\t**/\n\tpublic var positionAtLine:Int;\n\n\t/**\n\t\tthe character position in the XML string at which the parsing error occurred\n\t**/\n\tpublic var position:Int;\n\n\t/**\n\t\tthe invalid XML string\n\t**/\n\tpublic var xml:String;\n\n\tpublic function new(message:String, xml:String, position:Int) {\n\t\tthis.xml = xml;\n\t\tthis.message = message;\n\t\tthis.position = position;\n\t\tlineNumber = 1;\n\t\tpositionAtLine = 0;\n\n\t\tfor (i in 0...position) {\n\t\t\tvar c = xml.fastCodeAt(i);\n\t\t\tif (c == '\\n'.code) {\n\t\t\t\tlineNumber++;\n\t\t\t\tpositionAtLine = 0;\n\t\t\t} else {\n\t\t\t\tif (c != '\\r'.code)\n\t\t\t\t\tpositionAtLine++;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function toString():String {\n\t\treturn Type.getClassName(Type.getClass(this)) + \": \" + message + \" at line \" + lineNumber + \" char \" + positionAtLine;\n\t}\n}\n\nclass Parser {\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th;\n\t}\n\n\t/**\n\t\tParses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.\n\n\t\t@throws haxe.xml.XmlParserException\n\t**/\n\tstatic public function parse(str:String, strict = false) {\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, strict, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, strict:Bool, p:Int = 0, ?parent:Xml):Int {\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\t// need extra state because next is in use\n\t\tvar escapeNext = S.BEGIN;\n\t\tvar attrValQuote = -1;\n\t\tinline function addChild(xml:Xml) {\n\t\t\tparent.addChild(xml);\n\t\t\tnsubs++;\n\t\t}\n\t\twhile (!StringTools.isEof(c)) {\n\t\t\tswitch (state) {\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '\\n'.code, '\\r'.code, '\\t'.code, ' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString());\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t} else if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tescapeNext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code) {\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code) {\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <![CDATA[\", str, p);\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t} else if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code) {\n\t\t\t\t\t\t\t\tif (str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!DOCTYPE\", str, p);\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t} else if (str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code)\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected <!--\", str, p);\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif (parent == null)\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c)) {\n\t\t\t\t\t\tif (p == start)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c)) {\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif (start == p)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected attribute name\", str, p);\n\t\t\t\t\t\ttmp = str.substr(start, p - start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif (xml.exists(aname))\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Duplicate attribute [\" + aname + \"]\", str, p);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected =\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '\"'.code | '\\''.code:\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tattrValQuote = c;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected \\\"\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '&'.code:\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\t\tescapeNext = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tcase '>'.code | '<'.code if (strict):\n\t\t\t\t\t\t\t// HTML allows these in attributes values\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid unescaped \" + String.fromCharCode(c) + \" in attribute value\", str, p);\n\t\t\t\t\t\tcase _ if (c == attrValQuote):\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tvar val = buf.toString();\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, strict, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif (nsubs == 0)\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected >\", str, p);\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c)) {\n\t\t\t\t\t\tif (start == p)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected node name\", str, p);\n\n\t\t\t\t\t\tvar v = str.substr(start, p - start);\n\t\t\t\t\t\tif (parent == null || parent.nodeType != Element) {\n\t\t\t\t\t\t\tthrow new XmlParserException('Unexpected </$v>, tag is not open', str, p);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Expected </\" + parent.nodeName + \">\", str, p);\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p + 1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code) {\n\t\t\t\t\t\taddChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif (c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if (c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0) {\n\t\t\t\t\t\taddChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code) {\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\taddChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code) {\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar c = s.fastCodeAt(1) == 'x'.code ? Std.parseInt(\"0\" + s.substr(1, s.length - 1)) : Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\t#if !(target.unicode)\n\t\t\t\t\t\t\tif (c >= 128) {\n\t\t\t\t\t\t\t\t// UTF8-encode it\n\t\t\t\t\t\t\t\tif (c <= 0x7FF) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xC0 | (c >> 6));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if (c <= 0xFFFF) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xE0 | (c >> 12));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if (c <= 0x10FFFF) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xF0 | (c >> 18));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 12) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Cannot encode UTF8-char \" + c, str, p);\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\tbuf.addChar(c);\n\t\t\t\t\t\t} else if (!escapes.exists(s)) {\n\t\t\t\t\t\t\tif (strict)\n\t\t\t\t\t\t\t\tthrow new XmlParserException(\"Undefined entity: \" + s, str, p);\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t} else if (!isValidChar(c) && c != \"#\".code) {\n\t\t\t\t\t\tif (strict)\n\t\t\t\t\t\t\tthrow new XmlParserException(\"Invalid character in entity: \" + String.fromCharCode(c), str, p);\n\t\t\t\t\t\tbuf.addChar(\"&\".code);\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tp--;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN) {\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA) {\n\t\t\tif (parent.nodeType == Element) {\n\t\t\t\tthrow new XmlParserException(\"Unclosed node <\" + parent.nodeName + \">\", str, p);\n\t\t\t}\n\t\t\tif (p != start || nsubs == 0) {\n\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\n\t\tif (!strict && state == S.ESCAPE && escapeNext == S.PCDATA) {\n\t\t\tbuf.addChar(\"&\".code);\n\t\t\tbuf.addSub(str, start, p - start);\n\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow new XmlParserException(\"Unexpected end\", str, p);\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code\n\t\t\t|| c == '_'.code || c == '-'.code;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.xml;\n\n/**\n\tThis class provides utility methods to convert Xml instances to\n\tString representation.\n**/\nclass Printer {\n\t/**\n\t\tConvert `Xml` to string representation.\n\n\t\tSet `pretty` to `true` to prettify the result.\n\t**/\n\tstatic public function print(xml:Xml, ?pretty = false) {\n\t\tvar printer = new Printer(pretty);\n\t\tprinter.writeNode(xml, \"\");\n\t\treturn printer.output.toString();\n\t}\n\n\tvar output:StringBuf;\n\tvar pretty:Bool;\n\n\tfunction new(pretty) {\n\t\toutput = new StringBuf();\n\t\tthis.pretty = pretty;\n\t}\n\n\tfunction writeNode(value:Xml, tabs:String) {\n\t\tswitch (value.nodeType) {\n\t\t\tcase CData:\n\t\t\t\twrite(tabs + \"<![CDATA[\");\n\t\t\t\twrite(value.nodeValue);\n\t\t\t\twrite(\"]]>\");\n\t\t\t\tnewline();\n\t\t\tcase Comment:\n\t\t\t\tvar commentContent:String = value.nodeValue;\n\t\t\t\tcommentContent = ~/[\\n\\r\\t]+/g.replace(commentContent, \"\");\n\t\t\t\tcommentContent = \"<!--\" + commentContent + \"-->\";\n\t\t\t\twrite(tabs);\n\t\t\t\twrite(StringTools.trim(commentContent));\n\t\t\t\tnewline();\n\t\t\tcase Document:\n\t\t\t\tfor (child in value) {\n\t\t\t\t\twriteNode(child, tabs);\n\t\t\t\t}\n\t\t\tcase Element:\n\t\t\t\twrite(tabs + \"<\");\n\t\t\t\twrite(value.nodeName);\n\t\t\t\tfor (attribute in value.attributes()) {\n\t\t\t\t\twrite(\" \" + attribute + \"=\\\"\");\n\t\t\t\t\twrite(StringTools.htmlEscape(value.get(attribute), true));\n\t\t\t\t\twrite(\"\\\"\");\n\t\t\t\t}\n\t\t\t\tif (hasChildren(value)) {\n\t\t\t\t\twrite(\">\");\n\t\t\t\t\tnewline();\n\t\t\t\t\tfor (child in value) {\n\t\t\t\t\t\twriteNode(child, pretty ? tabs + \"\\t\" : tabs);\n\t\t\t\t\t}\n\t\t\t\t\twrite(tabs + \"</\");\n\t\t\t\t\twrite(value.nodeName);\n\t\t\t\t\twrite(\">\");\n\t\t\t\t\tnewline();\n\t\t\t\t} else {\n\t\t\t\t\twrite(\"/>\");\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\tcase PCData:\n\t\t\t\tvar nodeValue:String = value.nodeValue;\n\t\t\t\tif (nodeValue.length != 0) {\n\t\t\t\t\twrite(tabs + StringTools.htmlEscape(nodeValue));\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\tcase ProcessingInstruction:\n\t\t\t\twrite(\"<?\" + value.nodeValue + \"?>\");\n\t\t\t\tnewline();\n\t\t\tcase DocType:\n\t\t\t\twrite(\"<!DOCTYPE \" + value.nodeValue + \">\");\n\t\t\t\tnewline();\n\t\t}\n\t}\n\n\tinline function write(input:String) {\n\t\toutput.add(input);\n\t}\n\n\tinline function newline() {\n\t\tif (pretty) {\n\t\t\toutput.add(\"\\n\");\n\t\t}\n\t}\n\n\tfunction hasChildren(value:Xml):Bool {\n\t\tfor (child in value) {\n\t\t\tswitch (child.nodeType) {\n\t\t\t\tcase Element, PCData:\n\t\t\t\t\treturn true;\n\t\t\t\tcase CData, Comment:\n\t\t\t\t\tif (StringTools.ltrim(child.nodeValue).length != 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\tcase _:\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport js.Syntax; // import it here so it's always available in the compiler\n\nprivate class HaxeError extends js.lib.Error {\n\tvar val:Dynamic;\n\n\t@:pure\n\tpublic function new(val:Dynamic) {\n\t\tsuper();\n\t\tthis.val = val;\n\t\tif ((cast js.lib.Error).captureStackTrace)\n\t\t\t(cast js.lib.Error).captureStackTrace(this, HaxeError);\n\t}\n\n\tpublic static function wrap(val:Dynamic):js.lib.Error {\n\t\treturn if (js.Syntax.instanceof(val, js.lib.Error)) val else new HaxeError(val);\n\t}\n\n\tstatic function __init__() {\n\t\tjs.lib.Object.defineProperty((cast HaxeError).prototype, \"message\", {get: () -> (cast String)(js.Lib.nativeThis.val)});\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\tstatic inline function isClass(o:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isInterface(o:Class<Dynamic>):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isInterface\", o.__isInterface__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic):Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\t@:pure static function getClass(o:Null<Dynamic>):Null<Dynamic> {\n\t\tif (o == null) {\n\t\t\treturn null;\n\t\t} else if (Std.is(o, Array)) {\n\t\t\treturn Array;\n\t\t} else {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o, s:String) {\n\t\tuntyped {\n\t\t\tif (o == null)\n\t\t\t\treturn \"null\";\n\t\t\tif (s.length >= 5)\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = js.Syntax.typeof(o);\n\t\t\tif (t == \"function\" && (isClass(o) || isEnum(o)))\n\t\t\t\tt = \"object\";\n\t\t\tswitch (t) {\n\t\t\t\tcase \"object\":\n\t\t\t\t\t#if !js_enums_as_arrays\n\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\tvar e = $hxEnums[o.__enum__];\n\t\t\t\t\t\tvar n = e.__constructs__[o._hx_index];\n\t\t\t\t\t\tvar con = e[n];\n\t\t\t\t\t\tif (con.__params__) {\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\treturn n + \"(\" + [for (p in (con.__params__ : Array<String>)) __string_rec(o[p], s)].join(\",\") + \")\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t#end\n\t\t\t\t\tif (js.Syntax.instanceof(o, Array)) {\n\t\t\t\t\t\t#if js_enums_as_arrays\n\t\t\t\t\t\t__feature__(\"has_enum\", if (o.__enum__) {\n\t\t\t\t\t\t\tif (o.length == 2)\n\t\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\t\tvar str = o[0] + \"(\";\n\t\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\t\tfor (i in 2...o.length) {\n\t\t\t\t\t\t\t\tif (i != 2)\n\t\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i], s);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstr += __string_rec(o[i], s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t\t});\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor (i in 0...o.length)\n\t\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\") + __string_rec(o[i], s);\n\t\t\t\t\t\tstr += \"]\";\n\t\t\t\t\t\treturn str;\n\t\t\t\t\t}\n\t\t\t\t\tvar tostr;\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t// strange error on IE\n\t\t\t\t\t\treturn \"???\";\n\t\t\t\t\t}\n\t\t\t\t\tif (tostr != null && tostr != __js__(\"Object.toString\") && js.Syntax.typeof(tostr) == \"function\") {\n\t\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\t\tif (s2 != \"[object Object]\")\n\t\t\t\t\t\t\treturn s2;\n\t\t\t\t\t}\n\t\t\t\t\tvar str = \"{\\n\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t\tvar k:String = null;\n\t\t\t\t\t__js__(\"for( {0} in {1} ) {\", k, o);\n\t\t\t\t\tif (hasp && !o.hasOwnProperty(k))\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif (k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\")\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif (str.length != 2)\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \" + __string_rec(o[k], s);\n\t\t\t\t\t__js__(\"}\");\n\t\t\t\t\ts = s.substring(1);\n\t\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\t\treturn str;\n\t\t\t\tcase \"function\":\n\t\t\t\t\treturn \"<function>\";\n\t\t\t\tcase \"string\":\n\t\t\t\t\treturn o;\n\t\t\t\tdefault:\n\t\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\t@:pure private static function __interfLoop(cc:Dynamic, cl:Dynamic) {\n\t\tif (cc == null)\n\t\t\treturn false;\n\t\tif (cc == cl)\n\t\t\treturn true;\n\t\tif (js.lib.Object.prototype.hasOwnProperty.call(cc, \"__interfaces__\")) {\n\t\t\tvar intf:Dynamic = cc.__interfaces__;\n\t\t\tfor (i in 0...intf.length) {\n\t\t\t\tvar i:Dynamic = intf[i];\n\t\t\t\tif (i == cl || __interfLoop(i, cl))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn __interfLoop(cc.__super__, cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") @:pure private static function __instanceof(o:Dynamic, cl:Dynamic) {\n\t\tif (cl == null)\n\t\t\treturn false;\n\t\tswitch (cl) {\n\t\t\tcase Int:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\" && js.Syntax.strictEq(o | 0, o);\n\t\t\tcase Float:\n\t\t\t\treturn js.Syntax.typeof(o) == \"number\";\n\t\t\tcase Bool:\n\t\t\t\treturn js.Syntax.typeof(o) == \"boolean\";\n\t\t\tcase String:\n\t\t\t\treturn js.Syntax.typeof(o) == \"string\";\n\t\t\tcase Array:\n\t\t\t\treturn js.Syntax.instanceof(o, Array) #if js_enums_as_arrays && o.__enum__ == null #end;\n\t\t\tcase Dynamic:\n\t\t\t\treturn o != null;\n\t\t\tdefault:\n\t\t\t\tif (o != null) {\n\t\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\t\tif (js.Syntax.typeof(cl) == \"function\") {\n\t\t\t\t\t\tif (__downcastCheck(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (js.Syntax.typeof(cl) == \"object\" && __isNativeObj(cl)) {\n\t\t\t\t\t\tif (js.Syntax.instanceof(o, cl))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// do not use isClass/isEnum here\n\t\t\t\tuntyped __feature__(\"Class.*\", if (cl == Class && o.__name__ != null) return true);\n\t\t\t\tuntyped __feature__(\"Enum.*\", if (cl == Enum && o.__ename__ != null) return true);\n\t\t\t\t#if js_enums_as_arrays\n\t\t\t\treturn o.__enum__ == cl;\n\t\t\t\t#else\n\t\t\t\treturn untyped __feature__(\n\t\t\t\t\t\"has_enum\",\n\t\t\t\t\tif (o.__enum__ != null) ($hxEnums[o.__enum__]) == cl else false,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\t#end\n\t\t}\n\t}\n\n\tstatic function __downcastCheck(o:Dynamic, cl:Class<Dynamic>):Bool {\n\t\treturn js.Syntax.instanceof(o, cl) || (isInterface(cl) && inline __implements(o, cl));\n\t}\n\n\tstatic function __implements(o:Dynamic, iface:Class<Dynamic>):Bool {\n\t\treturn __interfLoop(getClass(o), iface);\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o:Dynamic, t:Dynamic) {\n\t\tif (o == null || __instanceof(o, t))\n\t\t\treturn o;\n\t\telse\n\t\t\tthrow \"Cannot cast \" + Std.string(o) + \" to \" + Std.string(t);\n\t}\n\n\tstatic var __toStr:js.lib.Function;\n\n\tstatic function __init__() {\n\t\tBoot.__toStr = (cast {}).toString;\n\t}\n\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name:String = __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn js.Lib.global[cast name];\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\HTMLCanvasElement.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `HTMLCanvasElement` interface provides properties and methods for manipulating the layout and presentation of canvas elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the `HTMLElement` interface.\n\n\tDocumentation [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement>\n**/\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element {\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `width` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `300` is used.\n\t**/\n\tvar width : Int;\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `height` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `150` is used.\n\t**/\n\tvar height : Int;\n\t\n\t\n\t/**\n\t\tReturns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with `\"2d\"` returns a `CanvasRenderingContext2D` object, whereas calling it with `\"webgl\"` (or `\"experimental-webgl\"`) returns a `WebGLRenderingContext` object. This context is only available on browsers that implement WebGL.\n\t\t@throws DOMError\n\t**/\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic;\n\t\n\t/**\n\t\tReturns a data-URL containing a representation of the image in the format specified by the `type` parameter (defaults to `png`). The returned image is in a resolution of 96dpi.\n\t\t@throws DOMError\n\t**/\n\tfunction toDataURL( type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t\n\t/**\n\t\tCreates a `Blob` object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent.\n\t\t@throws DOMError\n\t**/\n\tfunction toBlob( callback : Blob -> Void, type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/**\n\t\tReturns a `CanvasCaptureMediaStream` that is a real-time video capture of the surface of the canvas.\n\t\t@throws DOMError\n\t**/\n\tfunction captureStream( ?frameRate : Float ) : CanvasCaptureMediaStream;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.WebGL2RenderingContext. */\n\tinline function getContextWebGL2( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.WebGL2RenderingContext {\n\t\treturn this.getContext('webgl2', attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","package sketcher.debug;\n\nimport sketcher.util.ColorUtil.*;\nimport sketcher.util.GridUtil;\nimport sketcher.AST;\nimport sketcher.draw.IBase;\n\nclass Grid {\n\tpublic function new() {}\n\n\t/**\n\t * use with de data of GridUtil\n\t * create dot point with a border of grid\n\t * @example\n\t * \t\t\tvar grid = ...\n\t * \t\t\tif (isDebug) {\n\t *\t\t\t\tsketcher.debug.Grid.gridDots(sketch, grid);\n\t * \t\t\t}\n\t */\n\tstatic public function gridDots(sketch:Sketcher, grid:GridUtil) {\n\t\tvar _circlesArray:Array<IBase> = [];\n\t\tfor (i in 0...grid.array.length) {\n\t\t\tvar point:Point = grid.array[i];\n\t\t\tvar circle = sketch.makeCircle(point.x, point.y, 3);\n\t\t\tcircle.fillColor = getColourObj(PINK, 1);\n\t\t\tcircle.strokeOpacity = 0;\n\t\t\t_circlesArray.push(circle);\n\t\t}\n\t\tvar rect = sketch.makeRectangle(grid.x, grid.y, grid.width, grid.height, false);\n\t\trect.strokeWeight = 1;\n\t\trect.strokeColor = getColourObj(GRAY, 0.5);\n\t\trect.fillOpacity = 0;\n\t\t_circlesArray.push(rect);\n\n\t\tvar circleGroup = sketch.makeGroup(_circlesArray);\n\t\tcircleGroup.id = 'grid debug layer';\n\t}\n}\n","package sketcher.draw;\n\nimport sketcher.draw.AST.LineCap;\nimport sketcher.draw.AST.LineJoin;\nimport sketcher.AST;\nimport sketcher.util.MathUtil;\n\nusing StringTools;\n\nclass Base {\n\tpublic static var COUNT:Int = 0;\n\n\tpublic var count(get, null):Int;\n\n\tpublic var xml:Xml;\n\n\t@:isVar public var id(get, set):String;\n\n\t// Positions the shape horizontally from the origin.\n\t@:isVar public var x(get, set):Float;\n\t// Positions the shape vertically from the origin.\n\t@:isVar public var y(get, set):Float;\n\n\t// colors\n\n\t/**\n\t * fill is the fill color\n\t */\n\t@:isVar public var fill(get, set):String; // = '#909090';\n\n\t@:isVar public var fillColor(get, set):String;\n\n\t/**\n\t * use a gradient as color\n\t * is syntatic sugar for\n\t * \t\t\tbg1.fillColor = 'url(#yoda-gradient)'; // works\n\t *\t\t\tbg1.fillGradientColor = 'yoda-gradient'; // better?\n\t */\n\t@:isVar public var fillGradientColor(get, set):String;\n\n\t/**\n\t * stroke is the stroke color\n\t */\n\t@:isVar public var stroke(get, set):String; // = '#000000';\n\n\t@:isVar public var strokeColor(get, set):String;\n\n\t// weight\n\t@:isVar public var lineWeight(get, set):Float; // = 1;\n\t// strokeWeight\n\t@:isVar public var strokeWeight(get, set):Float;\n\n\t@:isVar public var opacity(get, set):Float; // = 1;\n\t@:isVar public var strokeOpacity(get, set):Float;\n\t@:isVar public var fillOpacity(get, set):Float;\n\n\t/**\n\t * probably only usefull for groups (hide everything in this group)\n\t */\n\t@:isVar public var isVisible(get, set):Bool;\n\n\t// transform\n\t@:isVar public var rotate(get, set):Float;\n\t@:isVar public var move(get, set):Point; // move x/y\n\n\t@:isVar public var transform(get, set):String;\n\n\t// dashed line\n\t@:isVar public var dash(get, set):Array<Float> = [];\n\n\t@:isVar public var desc(get, set):String;\n\n\t// line specific\n\t@:isVar public var lineCap(get, set):LineCap; // \"butt|round|square\";\n\t@:isVar public var lineJoin(get, set):LineJoin; // \"arcs|bevel|miter|miter-clip|round\";\n\n\tvar transArr:Array<String> = [];\n\n\tpublic function new(name:String) {\n\t\txml = Xml.createElement(name);\n\t\tCOUNT++;\n\t\tid = get_id();\n\t}\n\n\t// ____________________________________ functions ____________________________________\n\t// public function noStroke() {\n\t// \tthis.lineWeight = 0;\n\t// \tthis.stroke = 'transparant';\n\t// }\n\n\tpublic function setID(id:String) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * if you really want to change the postions use this .. not rotate\n\t *\n\t * @param x\t\t\tnew position x\n\t * @param y   \t\t(optional) new position y\n\t */\n\tpublic function setPosition(x:Float, ?y:Float) {\n\t\tmove = {x: x, y: y};\n\t\tif (y == null)\n\t\t\tmove = {x: x, y: 0}\n\n\t\tvar str = 'translate(${x}';\n\t\tif (y != null)\n\t\t\tstr += ',${y}';\n\t\tstr += ')';\n\t\ttransArr.push(str);\n\t}\n\n\t/**\n\t * if you really want to change the rotation use this .. not rotate\n\t *\n\t * @param degree\trotation in degrees\n\t * @param x\t\t\t(optional) center x\n\t * @param y   \t\t(optional) center y\n\t */\n\tpublic function setRotate(degree:Float, ?x:Float, ?y:Float) {\n\t\trotate = degree;\n\t\tvar str = 'rotate(${degree}';\n\t\tif (x != null)\n\t\t\tstr += ',${x}';\n\t\tif (y != null)\n\t\t\tstr += ',${y}';\n\t\tstr += ')';\n\t\ttransArr.push(str);\n\t}\n\n\tpublic function setScale(x:Float, ?y:Float) {\n\t\tvar str = 'scale(${x}';\n\t\tif (y != null)\n\t\t\tstr += ',${y}';\n\t\tstr += ')';\n\t\ttransArr.push(str);\n\t}\n\n\tpublic function getTransform():String {\n\t\tvar str = '';\n\t\tfor (i in 0...transArr.length) {\n\t\t\tstr += transArr[i] + ' ';\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic function clone():Base {\n\t\ttrace(\"WIP\");\n\t\treturn cast(haxe.Json.parse(haxe.Json.stringify(this)), Base);\n\t}\n\n\t/**\n\t *  set everything to default values\n\t */\n\tpublic function useDefaultsCanvas() {\n\t\tif (this.lineWeight == null) {\n\t\t\tthis.lineWeight = 0;\n\t\t}\n\t\tif (this.fillColor == null) {\n\t\t\tthis.fillColor = '#000000';\n\t\t}\n\t\tif (this.strokeColor == null) {\n\t\t\tthis.strokeColor = '#000000';\n\t\t\tthis.strokeOpacity = 0;\n\t\t}\n\t\tif (this.fillOpacity == null) {\n\t\t\tthis.fillOpacity = 1;\n\t\t}\n\t\tif (this.strokeOpacity == null) {\n\t\t\tthis.strokeOpacity = 1;\n\t\t}\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_id():String {\n\t\tif (id == null) {\n\t\t\tid = getName() + \"_\" + COUNT;\n\t\t\tCOUNT++;\n\t\t}\n\t\treturn id;\n\t}\n\n\tfunction set_id(value:String):String {\n\t\t// for import in Illustrator its easier to have id that contain no spaces\n\t\tvalue = value.toLowerCase().replace(\" \", \"_\");\n\t\tif (xml != null) {\n\t\t\txml.set('id', Std.string(value));\n\t\t\txml.set('data-count', Std.string(COUNT));\n\t\t}\n\t\treturn id = value;\n\t}\n\n\tfunction get_fill():String {\n\t\treturn fill;\n\t}\n\n\tfunction set_fill(value:String):String {\n\t\txml.set('fill', Std.string(value));\n\t\treturn fill = value;\n\t}\n\n\tfunction get_fillColor():String {\n\t\treturn fill;\n\t}\n\n\tfunction set_fillColor(value:String):String {\n\t\treturn fill = value;\n\t}\n\n\tfunction get_fillGradientColor():String {\n\t\treturn fill;\n\t}\n\n\tfunction set_fillGradientColor(value:String):String {\n\t\treturn fill = 'url(#$value)';\n\t}\n\n\tfunction get_stroke():String {\n\t\treturn stroke;\n\t}\n\n\tfunction set_stroke(value:String):String {\n\t\txml.set('stroke', Std.string(value));\n\t\treturn stroke = value;\n\t}\n\n\tfunction get_strokeColor():String {\n\t\treturn stroke;\n\t}\n\n\tfunction set_strokeColor(value:String):String {\n\t\treturn stroke = value;\n\t}\n\n\tfunction get_lineWeight():Float {\n\t\treturn lineWeight;\n\t}\n\n\tfunction set_lineWeight(value:Float):Float {\n\t\txml.set('stroke-width', Std.string(value));\n\t\treturn lineWeight = value;\n\t}\n\n\tfunction get_strokeWeight():Float {\n\t\treturn lineWeight;\n\t}\n\n\tfunction set_strokeWeight(value:Float):Float {\n\t\treturn lineWeight = value;\n\t}\n\n\tfunction get_opacity():Float {\n\t\treturn opacity;\n\t}\n\n\tfunction set_opacity(value:Float):Float {\n\t\tvar v = MathUtil.clamp(value, 0, 1); // should between 0 and 1\n\t\tfillOpacity = v;\n\t\tstrokeOpacity = v;\n\t\t// xml.set('fill-opacity', Std.string(v));\n\t\t// xml.set('stroke-opacity', Std.string(v));\n\t\treturn opacity = v;\n\t}\n\n\t/**\n\t * [Description]\n\t * @return Float\n\t */\n\tfunction get_strokeOpacity():Float {\n\t\treturn strokeOpacity;\n\t}\n\n\tfunction set_strokeOpacity(value:Float):Float {\n\t\tvar v = MathUtil.clamp(value, 0, 1); // should between 0 and 1\n\t\txml.set('stroke-opacity', Std.string(v));\n\t\treturn strokeOpacity = v;\n\t}\n\n\tfunction get_fillOpacity():Float {\n\t\treturn fillOpacity;\n\t}\n\n\tfunction set_fillOpacity(value:Float):Float {\n\t\tvar v = MathUtil.clamp(value, 0, 1); // should between 0 and 1\n\t\txml.set('fill-opacity', Std.string(v));\n\t\treturn fillOpacity = v;\n\t}\n\n\tfunction get_y():Float {\n\t\treturn y;\n\t}\n\n\tfunction set_y(value:Float):Float {\n\t\treturn y = value;\n\t}\n\n\tfunction get_x():Float {\n\t\treturn x;\n\t}\n\n\tfunction set_x(value:Float):Float {\n\t\treturn x = value;\n\t}\n\n\tfunction get_rotate():Float {\n\t\treturn rotate;\n\t}\n\n\tfunction set_rotate(value:Float):Float {\n\t\t// setRotate(value); // recursion error\n\t\treturn rotate = value;\n\t}\n\n\tfunction get_move():Point {\n\t\treturn move;\n\t}\n\n\tfunction set_move(value:Point):Point {\n\t\treturn move = value;\n\t}\n\n\tfunction get_transform():String {\n\t\treturn transform;\n\t}\n\n\tfunction set_transform(value:String):String {\n\t\treturn transform = value;\n\t}\n\n\tfunction get_dash():Array<Float> {\n\t\treturn dash;\n\t}\n\n\tfunction set_dash(value:Array<Float>):Array<Float> {\n\t\tvar str = '';\n\t\tfor (i in 0...value.length) {\n\t\t\tstr += value[i] + \" \";\n\t\t}\n\t\txml.set('stroke-dasharray', str);\n\t\treturn dash = value;\n\t}\n\n\tfunction get_desc():String {\n\t\treturn desc;\n\t}\n\n\tfunction set_desc(value:String):String {\n\t\treturn desc = value;\n\t}\n\n\t// \"butt|round|square\";\n\tfunction get_lineCap():LineCap {\n\t\treturn lineCap;\n\t}\n\n\t// \"butt|round|square\";\n\tfunction set_lineCap(value:LineCap):LineCap {\n\t\txml.set('stroke-linecap', Std.string(value));\n\t\treturn lineCap = value;\n\t}\n\n\t// // \"arcs|bevel|miter|miter-clip|round\";\n\tfunction get_lineJoin():LineJoin {\n\t\treturn lineJoin;\n\t}\n\n\t// // \"arcs|bevel|miter|miter-clip|round\";\n\tfunction set_lineJoin(value:LineJoin):LineJoin {\n\t\txml.set('stroke-linejoin', Std.string(value));\n\t\treturn lineJoin = value;\n\t}\n\n\tfunction get_isVisible():Bool {\n\t\treturn isVisible;\n\t}\n\n\tfunction set_isVisible(value:Bool):Bool {\n\t\tvar _opacity = 0;\n\t\tif (value) {\n\t\t\t_opacity = 1;\n\t\t}\n\t\tfillOpacity = _opacity;\n\t\tstrokeOpacity = _opacity;\n\t\treturn isVisible = value;\n\t}\n\n\tfunction get_count():Int {\n\t\treturn COUNT;\n\t}\n\n\t// ____________________________________ toString ____________________________________\n\n\tpublic function getName() {\n\t\tvar name = Type.getClassName(Type.getClass(this));\n\t\treturn ('${name}');\n\t}\n\n\tpublic function toObject() {\n\t\tvar name = Type.getClassName(Type.getClass(this));\n\t\treturn haxe.Json.parse(haxe.Json.stringify(this));\n\t}\n\n\tpublic function toString() {\n\t\tvar name = Type.getClassName(Type.getClass(this));\n\t\treturn ('${name}: ' + haxe.Json.parse(haxe.Json.stringify(this)));\n\t}\n\n\tpublic function toSvg() {\n\t\tthrow \"Not implemented yet\";\n\t\t// this.svg();\n\t}\n}\n","package sketcher.draw;\n\nimport sketcher.util.ColorUtil;\nimport sketcher.util.MathUtil;\n\nclass Circle extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\tpublic var type = 'circle'; // base (get class name?)\n\n\t@:isVar public var radius(get, set):Float;\n\n\tpublic function new(x, y, radius) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.radius = radius;\n\t\tsuper('circle');\n\t\t// this.dash = []; // reset the dash for canvas?\n\t}\n\n\tpublic function noStroke() {\n\t\tthis.lineWeight = 0;\n\t\tthis.stroke = 'transparant';\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\t// var xml = Xml.createElement('circle');\n\t\txml.set('cx', Std.string(this.x));\n\t\txml.set('cy', Std.string(this.y));\n\t\txml.set('r', Std.string(this.radius));\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\tif (this.lineWeight != null)\n\t\t\txml.set('stroke-width', Std.string(this.lineWeight));\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\t// set everything to default values\n\t\tuseDefaultsCanvas();\n\n\t\tif (this.lineCap != null) {\n\t\t\tctx.lineCap = cast this.lineCap;\n\t\t}\n\t\tctx.lineWidth = this.lineWeight;\n\n\t\t// trace('fillColor : ' + this.fillColor);\n\t\t// trace('fillOpacity: ' + this.fillOpacity);\n\t\t// trace('strokeColor : ' + this.strokeColor);\n\t\t// trace('strokeOpacity: ' + this.strokeOpacity);\n\n\t\tvar _fillColor = ColorUtil.assumption(this.fillColor);\n\t\tctx.fillStyle = ColorUtil.getColourObj(_fillColor, this.fillOpacity);\n\n\t\tvar _strokeColor = ColorUtil.assumption(this.strokeColor);\n\t\tctx.strokeStyle = ColorUtil.getColourObj(_strokeColor, this.strokeOpacity);\n\n\t\tif (this.dash != null) {\n\t\t\tctx.setLineDash(this.dash);\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\t// rotation & move...\n\t\tif (this.rotate != null) {\n\t\t\t// trace(this.x, this.y, this.rotate);\n\t\t\tctx.save();\n\n\t\t\tctx.translate(this.x, this.y);\n\t\t\tctx.rotate(MathUtil.radians(this.rotate));\n\n\t\t\tif (this.move != null) {\n\t\t\t\tctx.translate(this.move.x, this.move.y);\n\t\t\t}\n\t\t\tctx.arc(0, 0, this.radius, 0, 2 * Math.PI);\n\n\t\t\tctx.restore();\n\t\t}\n\n\t\tif (this.rotate == null) {\n\t\t\tctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t\t}\n\n\t\tif (this.fill != null) {\n\t\t\tctx.fill();\n\t\t}\n\t\tif (this.stroke != null && this.lineWeight != 0) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\t// ctx.fill();\n\t\t// ctx.stroke();\n\n\t\tif (this.rotate != null) {}\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ debug ____________________________________\n\n\tpublic function debug() {\n\t\ttrace('${toString()}');\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\tfunction get_radius():Float {\n\t\treturn radius;\n\t}\n\n\tfunction set_radius(value:Float):Float {\n\t\treturn radius = value;\n\t}\n}\n","package sketcher.util;\n\nusing StringTools;\n\ntypedef RGBObject = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n};\n\ntypedef RGB = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n};\n\ntypedef RGBA = {\n\tvar r:Int;\n\tvar g:Int;\n\tvar b:Int;\n\tvar a:Float;\n};\n\nclass ColorUtil {\n\tpublic function new() {}\n\n\t/**\n\t * convert an rgb and alpha to RGB or RBGA string value\n\t * value checks are done in rgb and rbga function\n\t *\n\t * @param r\t\tred value (min 0, max 255)\n\t * @param g\t\tgreen value between 0 and 255\n\t * @param b\t\tblue value between 0 and 255\n\t * @param a \talpha used for this color (rbga), value is between 0 and 1, if is null rgba is not used\n\t * @return String\n\t */\n\tstatic public function getColour(r:Int, ?g:Int, ?b:Int, ?a:Float):String {\n\t\tvar c;\n\t\tif (g == null) {\n\t\t\tc = rgb(r, r, r);\n\t\t} else if (b == null && a == null) {\n\t\t\tc = rgba(r, r, r, g);\n\t\t} else if (a == null) {\n\t\t\tc = rgb(r, g, b);\n\t\t} else {\n\t\t\tc = rgba(r, g, b, a);\n\t\t}\n\t\treturn (c);\n\t};\n\n\t/**\n\t * use the typedef RGB to convert to rgb or rgba string\n\t *\n\t * @example\t\tcc.util.ColorUtil.getColourObj(BLACK);\n\t *\n\t * @param rgb \t\ttypedef RGB used, for type checking\n\t * @param a \t\talpha used for this color (rbga), value is between 0 and 1, if is null rgba is not used\n\t * @return String\n\t */\n\tstatic public function getColourObj(rgb:RGB, ?a:Float):String {\n\t\treturn getColour(rgb.r, rgb.g, rgb.b, a);\n\t}\n\n\t/**\n\t * use RGB values to create color\n\t * @param r red (max:255, min:0)\n\t * @param g green (max:255, min:0)\n\t * @param b blue (max:255, min:0)\n\t */\n\tstatic public function rgb(r:Int, ?g:Int, ?b:Int):String {\n\t\tif (g == null)\n\t\t\tg = r;\n\t\tif (b == null)\n\t\t\tb = r;\n\t\treturn 'rgb(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', ' + MathUtil.clamp(Math.round(b), 0, 255)\n\t\t\t+ ')';\n\t};\n\n\tstatic public function rgba(r, ?g, ?b, ?a):String {\n\t\tif (g == null) {\n\t\t\treturn 'rgb(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(r), 0, 255) + ', '\n\t\t\t\t+ MathUtil.clamp(Math.round(r), 0, 255) + ')';\n\t\t} else if (b == null) {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(r), 0, 255) + ', '\n\t\t\t\t+ MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(g, 0, 1) + ')';\n\t\t} else if (a == null) {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', '\n\t\t\t\t+ MathUtil.clamp(Math.round(b), 0, 255) + ', 1)';\n\t\t} else {\n\t\t\treturn 'rgba(' + MathUtil.clamp(Math.round(r), 0, 255) + ', ' + MathUtil.clamp(Math.round(g), 0, 255) + ', '\n\t\t\t\t+ MathUtil.clamp(Math.round(b), 0, 255) + ', ' + MathUtil.clamp(a, 0, 1) + ')';\n\t\t}\n\t};\n\n\t/**\n\t * [Description]\n\t * @param r\n\t * @param g\n\t * @param b\n\t * @return String\n\t */\n\tpublic static function rgbToHex(r:Int, g:Int, b:Int):String {\n\t\t// r = MathUtil.clamp(Math.round(r), 0, 255);\n\t\t// g = MathUtil.clamp(Math.round(g), 0, 255);\n\t\t// b = MathUtil.clamp(Math.round(b), 0, 255);\n\t\t// var hex = StringTools.hex(r,2)\n\t\treturn StringTools.hex(r, 2) + StringTools.hex(g, 2) + StringTools.hex(b, 2);\n\t}\n\n\tpublic static function rgb2hex(r:Int, g:Int, b:Int, ?a:Int = 255):Int {\n\t\treturn (a << 24) | (r << 16) | (g << 8) | b;\n\t}\n\n\t/**\n\t * get a random rgb color\n\t * @return String\n\t */\n\tstatic public function randomColour():String {\n\t\tvar r = MathUtil.randomInt(255);\n\t\tvar g = MathUtil.randomInt(255);\n\t\tvar b = MathUtil.randomInt(255);\n\t\treturn ColorUtil.rgb(r, g, b);\n\t}\n\n\tstatic public function randomColourObject():RGB {\n\t\tvar r = MathUtil.randomInt(255);\n\t\tvar g = MathUtil.randomInt(255);\n\t\tvar b = MathUtil.randomInt(255);\n\t\treturn {\n\t\t\tr: r,\n\t\t\tg: g,\n\t\t\tb: b\n\t\t};\n\t}\n\n\t// public static function hex2css( color : Int ) : String {\n\t// \treturn \"#\" + color.toString(16);\n\t// }\n\n\t/**\n\t *\t@example\t\tvar _color = ColorUtil.hex2rgb(0xff3333);\n\t *\t\t\t\t\ttrace(\"_color.r: \" + _color.r);\n\t *\n\t */\n\t// static function hexToRgb(hex:Int):RGBObject {\n\t// \tvar bigint = parseInt(hex, 16);\n\t// \tvar _r = (bigint >> 16) & 255;\n\t// \tvar _g = (bigint >> 8) & 255;\n\t// \tvar _b = bigint & 255;\n\t// \treturn {r:_r, g:_g, b:_b};\n\t// \t// return r + \",\" + g + \",\" + b;\n\t// }\n\t// http://old.haxe.org/doc/snip/colorconverter\n\tpublic static inline function toRGB(int:Int):RGBObject {\n\t\treturn {\n\t\t\tr: Math.round(((int >> 16) & 255)),\n\t\t\tg: Math.round(((int >> 8) & 255)),\n\t\t\tb: Math.round((int & 255)),\n\t\t}\n\t}\n\n\tpublic static inline function ttoRGB(int:Int):RGB {\n\t\treturn {\n\t\t\tr: ((int >> 16) & 255),\n\t\t\tg: ((int >> 8) & 255),\n\t\t\tb: (int & 255),\n\t\t}\n\t}\n\n\t/**\n\t * all different options that html colors can be converted to.\n\t *\n\t * this is only tested with\n\t * \t- 'rgb(0, 200, 255)'\n\t * \t- 'rgba(0, 200, 255, 1)' // but rgba doesntwork\n\t *\n\t * @param value\n\t * @return RGBA\n\t */\n\tpublic static inline function assumption(value:String):RGBA {\n\t\tvar _r:Int = 0;\n\t\tvar _g:Int = 0;\n\t\tvar _b:Int = 0;\n\t\tvar _a:Float = 1;\n\t\tvalue = value.replace(' ', ''); // remove spaces\n\n\t\tif (value.indexOf('rgba') != -1) {\n\t\t\tvalue = value.replace('rgba(', '').replace(')', '');\n\t\t\tvar arr = value.split(',');\n\t\t\t_r = cast arr[0];\n\t\t\t_g = cast arr[1];\n\t\t\t_b = cast arr[2];\n\t\t\t_a = cast arr[3];\n\t\t} else if (value.indexOf('rgb') != -1) {\n\t\t\tvalue = value.replace('rgb(', '').replace(')', '');\n\t\t\tvar arr = value.split(',');\n\t\t\t_r = cast arr[0];\n\t\t\t_g = cast arr[1];\n\t\t\t_b = cast arr[2];\n\t\t} else if (value.indexOf('#') != -1) {\n\t\t\t// value = value.replace('#', '');\n\t\t\tvar rgb = hex2RGB(value);\n\t\t\t_r = rgb.r;\n\t\t\t_g = rgb.g;\n\t\t\t_b = rgb.b;\n\t\t}\n\t\treturn {\n\t\t\tr: _r,\n\t\t\tg: _g,\n\t\t\tb: _b,\n\t\t\ta: _a,\n\t\t}\n\t}\n\n\t/**\n\t * convert a hex value to a RGB type\n\t *\n\t * @example \tvar rgb:RBG = ColorUtil.hex2RGB('#ff3333'); //  {r:255, g:0, b:0};\n\t *\n\t * @param hex \tstring\n\t * @return RGB\n\t */\n\tpublic static inline function hex2RGB(hex:String):RGB {\n\t\tvar int = Std.parseInt(hex.replace('#', '0x'));\n\t\treturn {\n\t\t\tr: ((int >> 16) & 255),\n\t\t\tg: ((int >> 8) & 255),\n\t\t\tb: (int & 255),\n\t\t}\n\t}\n\n\t// public static var BLACK : RGBObject = {r:0, g:0, b:0};\n\t// public static var WHITE : RGBObject = {r:255, g:255, b:255};\n\t// public static var RED : RGBObject = {r:255, g:0, b:0};\n\t// https://clrs.cc/\n\tpublic static var NAVY:RGBObject = toRGB(0x001f3f);\n\tpublic static var BLUE:RGBObject = toRGB(0x0074D9);\n\tpublic static var AQUA:RGBObject = toRGB(0x7FDBFF);\n\tpublic static var TEAL:RGBObject = toRGB(0x39CCCC);\n\tpublic static var OLIVE:RGBObject = toRGB(0x3D9970);\n\tpublic static var GREEN:RGBObject = toRGB(0x2ECC40);\n\tpublic static var LIME:RGBObject = toRGB(0x01FF70);\n\tpublic static var YELLOW:RGBObject = toRGB(0xFFDC00);\n\tpublic static var ORANGE:RGBObject = toRGB(0xFF851B);\n\tpublic static var RED:RGBObject = toRGB(0xFF4136);\n\tpublic static var MAROON:RGBObject = toRGB(0x85144b);\n\tpublic static var FUCHSIA:RGBObject = toRGB(0xF012BE);\n\tpublic static var PURPLE:RGBObject = toRGB(0xB10DC9);\n\tpublic static var BLACK:RGBObject = toRGB(0x111111);\n\tpublic static var GRAY:RGBObject = toRGB(0xAAAAAA);\n\tpublic static var SILVER:RGBObject = toRGB(0xDDDDDD);\n\tpublic static var WHITE:RGBObject = toRGB(0xFFFFFF);\n\t// [mck] my favourite debug color\n\tpublic static var PINK:RGBObject = toRGB(0xFF1493); // deeppink\n\tpublic static var PINK_DEEP:RGBObject = toRGB(0xFF1493); // deeppink\n\tpublic static var PINK_HOT:RGBObject = toRGB(0xff69B4); // hotpink\n\t// 500 and 1000 are to big for most ide... but do you really need that much color combinations?\n\tpublic static var niceColor100:Array<Array<String>> = [\n\t\t[\"#69d2e7\", \"#a7dbd8\", \"#e0e4cc\", \"#f38630\", \"#fa6900\"], [\"#fe4365\", \"#fc9d9a\", \"#f9cdad\", \"#c8c8a9\", \"#83af9b\"],\n\t\t[\"#ecd078\", \"#d95b43\", \"#c02942\", \"#542437\", \"#53777a\"], [\"#556270\", \"#4ecdc4\", \"#c7f464\", \"#ff6b6b\", \"#c44d58\"],\n\t\t[\"#774f38\", \"#e08e79\", \"#f1d4af\", \"#ece5ce\", \"#c5e0dc\"], [\"#e8ddcb\", \"#cdb380\", \"#036564\", \"#033649\", \"#031634\"],\n\t\t[\"#490a3d\", \"#bd1550\", \"#e97f02\", \"#f8ca00\", \"#8a9b0f\"], [\"#594f4f\", \"#547980\", \"#45ada8\", \"#9de0ad\", \"#e5fcc2\"],\n\t\t[\"#00a0b0\", \"#6a4a3c\", \"#cc333f\", \"#eb6841\", \"#edc951\"], [\"#e94e77\", \"#d68189\", \"#c6a49a\", \"#c6e5d9\", \"#f4ead5\"],\n\t\t[\"#3fb8af\", \"#7fc7af\", \"#dad8a7\", \"#ff9e9d\", \"#ff3d7f\"], [\"#d9ceb2\", \"#948c75\", \"#d5ded9\", \"#7a6a53\", \"#99b2b7\"],\n\t\t[\"#ffffff\", \"#cbe86b\", \"#f2e9e1\", \"#1c140d\", \"#cbe86b\"], [\"#efffcd\", \"#dce9be\", \"#555152\", \"#2e2633\", \"#99173c\"],\n\t\t[\"#343838\", \"#005f6b\", \"#008c9e\", \"#00b4cc\", \"#00dffc\"], [\"#413e4a\", \"#73626e\", \"#b38184\", \"#f0b49e\", \"#f7e4be\"],\n\t\t[\"#ff4e50\", \"#fc913a\", \"#f9d423\", \"#ede574\", \"#e1f5c4\"], [\"#99b898\", \"#fecea8\", \"#ff847c\", \"#e84a5f\", \"#2a363b\"],\n\t\t[\"#655643\", \"#80bca3\", \"#f6f7bd\", \"#e6ac27\", \"#bf4d28\"], [\"#00a8c6\", \"#40c0cb\", \"#f9f2e7\", \"#aee239\", \"#8fbe00\"],\n\t\t[\"#351330\", \"#424254\", \"#64908a\", \"#e8caa4\", \"#cc2a41\"], [\"#554236\", \"#f77825\", \"#d3ce3d\", \"#f1efa5\", \"#60b99a\"],\n\t\t[\"#ff9900\", \"#424242\", \"#e9e9e9\", \"#bcbcbc\", \"#3299bb\"], [\"#5d4157\", \"#838689\", \"#a8caba\", \"#cad7b2\", \"#ebe3aa\"],\n\t\t[\"#8c2318\", \"#5e8c6a\", \"#88a65e\", \"#bfb35a\", \"#f2c45a\"], [\"#fad089\", \"#ff9c5b\", \"#f5634a\", \"#ed303c\", \"#3b8183\"],\n\t\t[\"#ff4242\", \"#f4fad2\", \"#d4ee5e\", \"#e1edb9\", \"#f0f2eb\"], [\"#d1e751\", \"#ffffff\", \"#000000\", \"#4dbce9\", \"#26ade4\"],\n\t\t[\"#f8b195\", \"#f67280\", \"#c06c84\", \"#6c5b7b\", \"#355c7d\"], [\"#1b676b\", \"#519548\", \"#88c425\", \"#bef202\", \"#eafde6\"],\n\t\t[\"#bcbdac\", \"#cfbe27\", \"#f27435\", \"#f02475\", \"#3b2d38\"], [\"#5e412f\", \"#fcebb6\", \"#78c0a8\", \"#f07818\", \"#f0a830\"],\n\t\t[\"#452632\", \"#91204d\", \"#e4844a\", \"#e8bf56\", \"#e2f7ce\"], [\"#eee6ab\", \"#c5bc8e\", \"#696758\", \"#45484b\", \"#36393b\"],\n\t\t[\"#f0d8a8\", \"#3d1c00\", \"#86b8b1\", \"#f2d694\", \"#fa2a00\"], [\"#f04155\", \"#ff823a\", \"#f2f26f\", \"#fff7bd\", \"#95cfb7\"],\n\t\t[\"#2a044a\", \"#0b2e59\", \"#0d6759\", \"#7ab317\", \"#a0c55f\"], [\"#bbbb88\", \"#ccc68d\", \"#eedd99\", \"#eec290\", \"#eeaa88\"],\n\t\t[\"#b9d7d9\", \"#668284\", \"#2a2829\", \"#493736\", \"#7b3b3b\"], [\"#b3cc57\", \"#ecf081\", \"#ffbe40\", \"#ef746f\", \"#ab3e5b\"],\n\t\t[\"#a3a948\", \"#edb92e\", \"#f85931\", \"#ce1836\", \"#009989\"], [\"#67917a\", \"#170409\", \"#b8af03\", \"#ccbf82\", \"#e33258\"],\n\t\t[\"#e8d5b7\", \"#0e2430\", \"#fc3a51\", \"#f5b349\", \"#e8d5b9\"], [\"#aab3ab\", \"#c4cbb7\", \"#ebefc9\", \"#eee0b7\", \"#e8caaf\"],\n\t\t[\"#300030\", \"#480048\", \"#601848\", \"#c04848\", \"#f07241\"], [\"#ab526b\", \"#bca297\", \"#c5ceae\", \"#f0e2a4\", \"#f4ebc3\"],\n\t\t[\"#607848\", \"#789048\", \"#c0d860\", \"#f0f0d8\", \"#604848\"], [\"#a8e6ce\", \"#dcedc2\", \"#ffd3b5\", \"#ffaaa6\", \"#ff8c94\"],\n\t\t[\"#3e4147\", \"#fffedf\", \"#dfba69\", \"#5a2e2e\", \"#2a2c31\"], [\"#b6d8c0\", \"#c8d9bf\", \"#dadabd\", \"#ecdbbc\", \"#fedcba\"],\n\t\t[\"#fc354c\", \"#29221f\", \"#13747d\", \"#0abfbc\", \"#fcf7c5\"], [\"#1c2130\", \"#028f76\", \"#b3e099\", \"#ffeaad\", \"#d14334\"],\n\t\t[\"#edebe6\", \"#d6e1c7\", \"#94c7b6\", \"#403b33\", \"#d3643b\"], [\"#cc0c39\", \"#e6781e\", \"#c8cf02\", \"#f8fcc1\", \"#1693a7\"],\n\t\t[\"#dad6ca\", \"#1bb0ce\", \"#4f8699\", \"#6a5e72\", \"#563444\"], [\"#a7c5bd\", \"#e5ddcb\", \"#eb7b59\", \"#cf4647\", \"#524656\"],\n\t\t[\"#fdf1cc\", \"#c6d6b8\", \"#987f69\", \"#e3ad40\", \"#fcd036\"], [\"#5c323e\", \"#a82743\", \"#e15e32\", \"#c0d23e\", \"#e5f04c\"],\n\t\t[\"#230f2b\", \"#f21d41\", \"#ebebbc\", \"#bce3c5\", \"#82b3ae\"], [\"#b9d3b0\", \"#81bda4\", \"#b28774\", \"#f88f79\", \"#f6aa93\"],\n\t\t[\"#3a111c\", \"#574951\", \"#83988e\", \"#bcdea5\", \"#e6f9bc\"], [\"#5e3929\", \"#cd8c52\", \"#b7d1a3\", \"#dee8be\", \"#fcf7d3\"],\n\t\t[\"#1c0113\", \"#6b0103\", \"#a30006\", \"#c21a01\", \"#f03c02\"], [\"#382f32\", \"#ffeaf2\", \"#fcd9e5\", \"#fbc5d8\", \"#f1396d\"],\n\t\t[\"#e3dfba\", \"#c8d6bf\", \"#93ccc6\", \"#6cbdb5\", \"#1a1f1e\"], [\"#000000\", \"#9f111b\", \"#b11623\", \"#292c37\", \"#cccccc\"],\n\t\t[\"#c1b398\", \"#605951\", \"#fbeec2\", \"#61a6ab\", \"#accec0\"], [\"#8dccad\", \"#988864\", \"#fea6a2\", \"#f9d6ac\", \"#ffe9af\"],\n\t\t[\"#f6f6f6\", \"#e8e8e8\", \"#333333\", \"#990100\", \"#b90504\"], [\"#1b325f\", \"#9cc4e4\", \"#e9f2f9\", \"#3a89c9\", \"#f26c4f\"],\n\t\t[\"#5e9fa3\", \"#dcd1b4\", \"#fab87f\", \"#f87e7b\", \"#b05574\"], [\"#951f2b\", \"#f5f4d7\", \"#e0dfb1\", \"#a5a36c\", \"#535233\"],\n\t\t[\"#413d3d\", \"#040004\", \"#c8ff00\", \"#fa023c\", \"#4b000f\"], [\"#eff3cd\", \"#b2d5ba\", \"#61ada0\", \"#248f8d\", \"#605063\"],\n\t\t[\"#2d2d29\", \"#215a6d\", \"#3ca2a2\", \"#92c7a3\", \"#dfece6\"], [\"#cfffdd\", \"#b4dec1\", \"#5c5863\", \"#a85163\", \"#ff1f4c\"],\n\t\t[\"#4e395d\", \"#827085\", \"#8ebe94\", \"#ccfc8e\", \"#dc5b3e\"], [\"#9dc9ac\", \"#fffec7\", \"#f56218\", \"#ff9d2e\", \"#919167\"],\n\t\t[\"#a1dbb2\", \"#fee5ad\", \"#faca66\", \"#f7a541\", \"#f45d4c\"], [\"#ffefd3\", \"#fffee4\", \"#d0ecea\", \"#9fd6d2\", \"#8b7a5e\"],\n\t\t[\"#a8a7a7\", \"#cc527a\", \"#e8175d\", \"#474747\", \"#363636\"], [\"#ffedbf\", \"#f7803c\", \"#f54828\", \"#2e0d23\", \"#f8e4c1\"],\n\t\t[\"#f8edd1\", \"#d88a8a\", \"#474843\", \"#9d9d93\", \"#c5cfc6\"], [\"#f38a8a\", \"#55443d\", \"#a0cab5\", \"#cde9ca\", \"#f1edd0\"],\n\t\t[\"#4e4d4a\", \"#353432\", \"#94ba65\", \"#2790b0\", \"#2b4e72\"], [\"#0ca5b0\", \"#4e3f30\", \"#fefeeb\", \"#f8f4e4\", \"#a5b3aa\"],\n\t\t[\"#a70267\", \"#f10c49\", \"#fb6b41\", \"#f6d86b\", \"#339194\"], [\"#9d7e79\", \"#ccac95\", \"#9a947c\", \"#748b83\", \"#5b756c\"],\n\t\t[\"#edf6ee\", \"#d1c089\", \"#b3204d\", \"#412e28\", \"#151101\"], [\"#046d8b\", \"#309292\", \"#2fb8ac\", \"#93a42a\", \"#ecbe13\"],\n\t\t[\"#4d3b3b\", \"#de6262\", \"#ffb88c\", \"#ffd0b3\", \"#f5e0d3\"], [\"#fffbb7\", \"#a6f6af\", \"#66b6ab\", \"#5b7c8d\", \"#4f2958\"],\n\t\t[\"#ff003c\", \"#ff8a00\", \"#fabe28\", \"#88c100\", \"#00c176\"], [\"#fcfef5\", \"#e9ffe1\", \"#cdcfb7\", \"#d6e6c3\", \"#fafbe3\"],\n\t\t[\"#9cddc8\", \"#bfd8ad\", \"#ddd9ab\", \"#f7af63\", \"#633d2e\"], [\"#30261c\", \"#403831\", \"#36544f\", \"#1f5f61\", \"#0b8185\"],\n\t\t[\"#d1313d\", \"#e5625c\", \"#f9bf76\", \"#8eb2c5\", \"#615375\"], [\"#ffe181\", \"#eee9e5\", \"#fad3b2\", \"#ffba7f\", \"#ff9c97\"],\n\t\t[\"#aaff00\", \"#ffaa00\", \"#ff00aa\", \"#aa00ff\", \"#00aaff\"], [\"#c2412d\", \"#d1aa34\", \"#a7a844\", \"#a46583\", \"#5a1e4a\"]\n\t];\n\tpublic static var niceColor100SortedString:Array<Array<String>> = [\n\t\t[\"#E0E4CC\", \"#A7DBD8\", \"#69D2E7\", \"#F38630\", \"#FA6900\"], [\"#F9CDAD\", \"#C8C8A9\", \"#FC9D9A\", \"#83AF9B\", \"#FE4365\"],\n\t\t[\"#ECD078\", \"#D95B43\", \"#53777A\", \"#C02942\", \"#542437\"], [\"#C7F464\", \"#4ECDC4\", \"#FF6B6B\", \"#C44D58\", \"#556270\"],\n\t\t[\"#ECE5CE\", \"#F1D4AF\", \"#C5E0DC\", \"#E08E79\", \"#774F38\"], [\"#E8DDCB\", \"#CDB380\", \"#036564\", \"#033649\", \"#031634\"],\n\t\t[\"#F8CA00\", \"#E97F02\", \"#8A9B0F\", \"#BD1550\", \"#490A3D\"], [\"#E5FCC2\", \"#9DE0AD\", \"#45ADA8\", \"#547980\", \"#594F4F\"],\n\t\t[\"#EDC951\", \"#EB6841\", \"#00A0B0\", \"#CC333F\", \"#6A4A3C\"], [\"#F4EAD5\", \"#C6E5D9\", \"#C6A49A\", \"#D68189\", \"#E94E77\"],\n\t\t[\"#DAD8A7\", \"#FF9E9D\", \"#7FC7AF\", \"#3FB8AF\", \"#FF3D7F\"], [\"#D5DED9\", \"#D9CEB2\", \"#99B2B7\", \"#948C75\", \"#7A6A53\"],\n\t\t[\"#FFFFFF\", \"#F2E9E1\", \"#CBE86B\", \"#CBE86B\", \"#1C140D\"], [\"#EFFFCD\", \"#DCE9BE\", \"#555152\", \"#99173C\", \"#2E2633\"],\n\t\t[\"#00DFFC\", \"#00B4CC\", \"#008C9E\", \"#005F6B\", \"#343838\"], [\"#F7E4BE\", \"#F0B49E\", \"#B38184\", \"#73626E\", \"#413E4A\"],\n\t\t[\"#E1F5C4\", \"#EDE574\", \"#F9D423\", \"#FC913A\", \"#FF4E50\"], [\"#FECEA8\", \"#99B898\", \"#FF847C\", \"#E84A5F\", \"#2A363B\"],\n\t\t[\"#F6F7BD\", \"#E6AC27\", \"#80BCA3\", \"#BF4D28\", \"#655643\"], [\"#F9F2E7\", \"#AEE239\", \"#40C0CB\", \"#8FBE00\", \"#00A8C6\"],\n\t\t[\"#E8CAA4\", \"#64908A\", \"#CC2A41\", \"#424254\", \"#351330\"], [\"#F1EFA5\", \"#D3CE3D\", \"#60B99A\", \"#F77825\", \"#554236\"],\n\t\t[\"#E9E9E9\", \"#BCBCBC\", \"#FF9900\", \"#3299BB\", \"#424242\"], [\"#EBE3AA\", \"#CAD7B2\", \"#A8CABA\", \"#838689\", \"#5D4157\"],\n\t\t[\"#F2C45A\", \"#BFB35A\", \"#88A65E\", \"#5E8C6A\", \"#8C2318\"], [\"#FAD089\", \"#FF9C5B\", \"#F5634A\", \"#3B8183\", \"#ED303C\"],\n\t\t[\"#F4FAD2\", \"#F0F2EB\", \"#E1EDB9\", \"#D4EE5E\", \"#FF4242\"], [\"#FFFFFF\", \"#D1E751\", \"#4DBCE9\", \"#26ADE4\", \"#000000\"],\n\t\t[\"#F8B195\", \"#F67280\", \"#C06C84\", \"#6C5B7B\", \"#355C7D\"], [\"#EAFDE6\", \"#BEF202\", \"#88C425\", \"#519548\", \"#1B676B\"],\n\t\t[\"#BCBDAC\", \"#CFBE27\", \"#F27435\", \"#F02475\", \"#3B2D38\"], [\"#FCEBB6\", \"#F0A830\", \"#78C0A8\", \"#F07818\", \"#5E412F\"],\n\t\t[\"#E2F7CE\", \"#E8BF56\", \"#E4844A\", \"#91204D\", \"#452632\"], [\"#EEE6AB\", \"#C5BC8E\", \"#696758\", \"#45484B\", \"#36393B\"],\n\t\t[\"#F0D8A8\", \"#F2D694\", \"#86B8B1\", \"#FA2A00\", \"#3D1C00\"], [\"#FFF7BD\", \"#F2F26F\", \"#95CFB7\", \"#FF823A\", \"#F04155\"],\n\t\t[\"#A0C55F\", \"#7AB317\", \"#0D6759\", \"#0B2E59\", \"#2A044A\"], [\"#EEDD99\", \"#EEC290\", \"#CCC68D\", \"#EEAA88\", \"#BBBB88\"],\n\t\t[\"#B9D7D9\", \"#668284\", \"#7B3B3B\", \"#493736\", \"#2A2829\"], [\"#ECF081\", \"#FFBE40\", \"#B3CC57\", \"#EF746F\", \"#AB3E5B\"],\n\t\t[\"#EDB92E\", \"#A3A948\", \"#F85931\", \"#009989\", \"#CE1836\"], [\"#CCBF82\", \"#B8AF03\", \"#67917A\", \"#E33258\", \"#170409\"],\n\t\t[\"#E8D5B9\", \"#E8D5B7\", \"#F5B349\", \"#FC3A51\", \"#0E2430\"], [\"#EBEFC9\", \"#EEE0B7\", \"#E8CAAF\", \"#C4CBB7\", \"#AAB3AB\"],\n\t\t[\"#F07241\", \"#C04848\", \"#601848\", \"#480048\", \"#300030\"], [\"#F4EBC3\", \"#F0E2A4\", \"#C5CEAE\", \"#BCA297\", \"#AB526B\"],\n\t\t[\"#F0F0D8\", \"#C0D860\", \"#789048\", \"#607848\", \"#604848\"], [\"#DCEDC2\", \"#FFD3B5\", \"#A8E6CE\", \"#FFAAA6\", \"#FF8C94\"],\n\t\t[\"#FFFEDF\", \"#DFBA69\", \"#3E4147\", \"#5A2E2E\", \"#2A2C31\"], [\"#FEDCBA\", \"#ECDBBC\", \"#DADABD\", \"#C8D9BF\", \"#B6D8C0\"],\n\t\t[\"#FCF7C5\", \"#0ABFBC\", \"#FC354C\", \"#13747D\", \"#29221F\"], [\"#FFEAAD\", \"#B3E099\", \"#D14334\", \"#028F76\", \"#1C2130\"],\n\t\t[\"#EDEBE6\", \"#D6E1C7\", \"#94C7B6\", \"#D3643B\", \"#403B33\"], [\"#F8FCC1\", \"#C8CF02\", \"#E6781E\", \"#1693A7\", \"#CC0C39\"],\n\t\t[\"#DAD6CA\", \"#1BB0CE\", \"#4F8699\", \"#6A5E72\", \"#563444\"], [\"#E5DDCB\", \"#A7C5BD\", \"#EB7B59\", \"#CF4647\", \"#524656\"],\n\t\t[\"#FDF1CC\", \"#C6D6B8\", \"#FCD036\", \"#E3AD40\", \"#987F69\"], [\"#E5F04C\", \"#C0D23E\", \"#E15E32\", \"#A82743\", \"#5C323E\"],\n\t\t[\"#EBEBBC\", \"#BCE3C5\", \"#82B3AE\", \"#F21D41\", \"#230F2B\"], [\"#B9D3B0\", \"#F6AA93\", \"#F88F79\", \"#81BDA4\", \"#B28774\"],\n\t\t[\"#E6F9BC\", \"#BCDEA5\", \"#83988E\", \"#574951\", \"#3A111C\"], [\"#FCF7D3\", \"#DEE8BE\", \"#B7D1A3\", \"#CD8C52\", \"#5E3929\"],\n\t\t[\"#F03C02\", \"#C21A01\", \"#A30006\", \"#6B0103\", \"#1C0113\"], [\"#FFEAF2\", \"#FCD9E5\", \"#FBC5D8\", \"#F1396D\", \"#382F32\"],\n\t\t[\"#E3DFBA\", \"#C8D6BF\", \"#93CCC6\", \"#6CBDB5\", \"#1A1F1E\"], [\"#CCCCCC\", \"#B11623\", \"#9F111B\", \"#292C37\", \"#000000\"],\n\t\t[\"#FBEEC2\", \"#ACCEC0\", \"#C1B398\", \"#61A6AB\", \"#605951\"], [\"#FFE9AF\", \"#F9D6AC\", \"#FEA6A2\", \"#8DCCAD\", \"#988864\"],\n\t\t[\"#F6F6F6\", \"#E8E8E8\", \"#B90504\", \"#333333\", \"#990100\"], [\"#E9F2F9\", \"#9CC4E4\", \"#F26C4F\", \"#3A89C9\", \"#1B325F\"],\n\t\t[\"#DCD1B4\", \"#FAB87F\", \"#F87E7B\", \"#5E9FA3\", \"#B05574\"], [\"#F5F4D7\", \"#E0DFB1\", \"#A5A36C\", \"#535233\", \"#951F2B\"],\n\t\t[\"#C8FF00\", \"#FA023C\", \"#413D3D\", \"#4B000F\", \"#040004\"], [\"#EFF3CD\", \"#B2D5BA\", \"#61ADA0\", \"#248F8D\", \"#605063\"],\n\t\t[\"#DFECE6\", \"#92C7A3\", \"#3CA2A2\", \"#215A6D\", \"#2D2D29\"], [\"#CFFFDD\", \"#B4DEC1\", \"#A85163\", \"#FF1F4C\", \"#5C5863\"],\n\t\t[\"#CCFC8E\", \"#8EBE94\", \"#DC5B3E\", \"#827085\", \"#4E395D\"], [\"#FFFEC7\", \"#9DC9AC\", \"#FF9D2E\", \"#919167\", \"#F56218\"],\n\t\t[\"#FEE5AD\", \"#FACA66\", \"#A1DBB2\", \"#F7A541\", \"#F45D4C\"], [\"#FFFEE4\", \"#FFEFD3\", \"#D0ECEA\", \"#9FD6D2\", \"#8B7A5E\"],\n\t\t[\"#A8A7A7\", \"#CC527A\", \"#E8175D\", \"#474747\", \"#363636\"], [\"#FFEDBF\", \"#F8E4C1\", \"#F7803C\", \"#F54828\", \"#2E0D23\"],\n\t\t[\"#F8EDD1\", \"#C5CFC6\", \"#D88A8A\", \"#9D9D93\", \"#474843\"], [\"#F1EDD0\", \"#CDE9CA\", \"#A0CAB5\", \"#F38A8A\", \"#55443D\"],\n\t\t[\"#94BA65\", \"#2790B0\", \"#4E4D4A\", \"#2B4E72\", \"#353432\"], [\"#FEFEEB\", \"#F8F4E4\", \"#A5B3AA\", \"#0CA5B0\", \"#4E3F30\"],\n\t\t[\"#F6D86B\", \"#FB6B41\", \"#339194\", \"#F10C49\", \"#A70267\"], [\"#CCAC95\", \"#9A947C\", \"#9D7E79\", \"#748B83\", \"#5B756C\"],\n\t\t[\"#EDF6EE\", \"#D1C089\", \"#B3204D\", \"#412E28\", \"#151101\"], [\"#ECBE13\", \"#93A42A\", \"#2FB8AC\", \"#309292\", \"#046D8B\"],\n\t\t[\"#F5E0D3\", \"#FFD0B3\", \"#FFB88C\", \"#DE6262\", \"#4D3B3B\"], [\"#FFFBB7\", \"#A6F6AF\", \"#66B6AB\", \"#5B7C8D\", \"#4F2958\"],\n\t\t[\"#FABE28\", \"#FF8A00\", \"#88C100\", \"#00C176\", \"#FF003C\"], [\"#FCFEF5\", \"#FAFBE3\", \"#E9FFE1\", \"#D6E6C3\", \"#CDCFB7\"],\n\t\t[\"#DDD9AB\", \"#BFD8AD\", \"#9CDDC8\", \"#F7AF63\", \"#633D2E\"], [\"#0B8185\", \"#1F5F61\", \"#36544F\", \"#403831\", \"#30261C\"],\n\t\t[\"#F9BF76\", \"#8EB2C5\", \"#E5625C\", \"#D1313D\", \"#615375\"], [\"#EEE9E5\", \"#FFE181\", \"#FAD3B2\", \"#FFBA7F\", \"#FF9C97\"],\n\t\t[\"#AAFF00\", \"#FFAA00\", \"#00AAFF\", \"#FF00AA\", \"#AA00FF\"], [\"#D1AA34\", \"#A7A844\", \"#A46583\", \"#C2412D\", \"#5A1E4A\"],\n\t\t[\"#F8F3BF\", \"#DCE4F7\", \"#BFCFF7\", \"#75616B\", \"#D34017\"]];\n\n\t/**\n\t * \t\tvar colorArray = ColorUtil.niceColor100SortedInt[randomInt(ColorUtil.niceColor100SortedInt.length - 1)];\n\t */\n\tpublic static var niceColor100SortedInt:Array<Array<Int>> = [\n\t\t[14738636, 11000792, 6935271, 15959600, 16410880], [16371117, 13158569, 16555418, 8630171, 16663397],\n\t\t[15519864, 14244675, 5470074, 12593474, 5514295], [13104228, 5164484, 16739179, 12864856, 5595760], [15525326, 15848623, 12968156, 14716537, 7819064],\n\t\t[15261131, 13480832, 222564, 210505, 202292], [16304640, 15302402, 9083663, 12391760, 4786749], [15072450, 10346669, 4566440, 5536128, 5853007],\n\t\t[15583569, 15427649, 41136, 13382463, 6965820], [16050901, 13034969, 13018266, 14057865, 15289975], [14342311, 16752285, 8374191, 4176047, 16727423],\n\t\t[14016217, 14274226, 10072759, 9735285, 8022611], [16777215, 15919585, 13363307, 13363307, 1840141], [15728589, 14477758, 5591378, 10032956, 3024435],\n\t\t[57340, 46284, 35998, 24427, 3422264], [16245950, 15774878, 11764100, 7561838, 4275786], [14808516, 15590772, 16372771, 16552250, 16731728],\n\t\t[16699048, 10074264, 16745596, 15223391, 2766395], [16185277, 15117351, 8436899, 12537128, 6641219], [16380647, 11461177, 4243659, 9420288, 43206],\n\t\t[15256228, 6590602, 13380161, 4342356, 3478320], [15855525, 13880893, 6338970, 16218149, 5587510], [15329769, 12369084, 16750848, 3316155, 4342338],\n\t\t[15459242, 13293490, 11061946, 8619657, 6111575], [15909978, 12563290, 8955486, 6196330, 9184024], [16437385, 16751707, 16081738, 3899779, 15544380],\n\t\t[16054994, 15790827, 14806457, 13954654, 16728642], [16777215, 13756241, 5094633, 2534884, 0], [16298389, 16151168, 12610692, 7101307, 3497085],\n\t\t[15400422, 12513794, 8963109, 5346632, 1795947], [12369324, 13614631, 15889461, 15737973, 3878200], [16575414, 15771696, 7913640, 15759384, 6177071],\n\t\t[14874574, 15253334, 14976074, 9510989, 4531762], [15656619, 12958862, 6907736, 4540491, 3553595], [15784104, 15914644, 8829105, 16394752, 4004864],\n\t\t[16775101, 15921775, 9818039, 16745018, 15745365], [10536287, 8041239, 878425, 732761, 2753610], [15654297, 15647376, 13420173, 15641224, 12303240],\n\t\t[12179417, 6718084, 8076091, 4798262, 2762793], [15528065, 16760384, 11783255, 15692911, 11222619], [15579438, 10725704, 16275761, 39305, 13506614],\n\t\t[13418370, 12103427, 6787450, 14889560, 1508361], [15259065, 15259063, 16102217, 16530001, 926768],\n\t\t[15462345, 15655095, 15256239, 12897207, 11187115], [15757889, 12601416, 6297672, 4718664, 3145776],\n\t\t[16051139, 15786660, 12963502, 12362391, 11227755], [15790296, 12638304, 7901256, 6322248, 6309960],\n\t\t[14478786, 16765877, 11069134, 16755366, 16747668], [16776927, 14662249, 4079943, 5910062, 2763825],\n\t\t[16702650, 15522748, 14342845, 13162943, 11983040], [16578501, 704444, 16528716, 1275005, 2695711], [16771757, 11788441, 13714228, 167798, 1843504],\n\t\t[15592422, 14082503, 9750454, 13853755, 4209459], [16317633, 13160194, 15104030, 1479591, 13372473], [14341834, 1814734, 5211801, 6970994, 5649476],\n\t\t[15064523, 10995133, 15432537, 13583943, 5391958], [16642508, 13031096, 16568374, 14921024, 9994089],\n\t\t[15069260, 12636734, 14769714, 11020099, 6042174], [15461308, 12379077, 8565678, 15867201, 2297643],\n\t\t[12178352, 16165523, 16289657, 8502692, 11700084], [15137212, 12377765, 8624270, 5720401, 3805468], [16578515, 14608574, 12046755, 13470802, 6175017],\n\t\t[15744002, 12720641, 10682374, 7012611, 1835283], [16771826, 16570853, 16500184, 15808877, 3682098], [14933946, 13162175, 9686214, 7126453, 1711902],\n\t\t[13421772, 11605539, 10424603, 2698295, 0], [16510658, 11325120, 12694424, 6399659, 6314321], [16771503, 16373420, 16688802, 9292973, 9996388],\n\t\t[16185078, 15263976, 12125444, 3355443, 10027264], [15332089, 10274020, 15887439, 3836361, 1782367],\n\t\t[14471604, 16431231, 16285307, 6201251, 11556212], [16118999, 14737329, 10855276, 5460531, 9772843], [13172480, 16384572, 4275517, 4915215, 262148],\n\t\t[15725517, 11720122, 6401440, 2396045, 6312035], [14675174, 9619363, 3973794, 2185837, 2960681], [13631453, 11853505, 11030883, 16719692, 6051939],\n\t\t[13433998, 9354900, 14441278, 8548485, 5126493], [16776903, 10340780, 16751918, 9539943, 16081432],\n\t\t[16704941, 16435814, 10607538, 16229697, 16014668], [16776932, 16773075, 13692138, 10475218, 9140830],\n\t\t[11052967, 13390458, 15210333, 4671303, 3552822], [16772543, 16311489, 16220220, 16074792, 3018019],\n\t\t[16313809, 12963782, 14191242, 10329491, 4671555], [15855056, 13494730, 10537653, 15960714, 5588029], [9747045, 2592944, 5131594, 2838130, 3486770],\n\t\t[16711403, 16315620, 10859434, 828848, 5127984], [16177259, 16476993, 3379604, 15797321, 10945127], [13413525, 10130556, 10321529, 7637891, 5993836],\n\t\t[15595246, 13746313, 11739213, 4271656, 1380609], [15515155, 9675818, 3127468, 3183250, 290187], [16113875, 16765107, 16758924, 14574178, 5061435],\n\t\t[16776119, 10942127, 6731435, 5995661, 5187928], [16432680, 16747008, 8962304, 49526, 16711740], [16580341, 16448483, 15335393, 14083779, 13488055],\n\t\t[14539179, 12572845, 10280392, 16232291, 6503726], [754053, 2056033, 3560527, 4208689, 3155484], [16367478, 9351877, 15032924, 13709629, 6378357],\n\t\t[15657445, 16769409, 16438194, 16759423, 16751767], [11206400, 16755200, 43775, 16711850, 11141375],\n\t\t[13740596, 10987588, 10773891, 12730669, 5905994], [16315327, 14476535, 12570615, 7692651, 13844503]];\n}\n","package sketcher.draw;\n\nclass Ellipse extends Base implements IBase {\n\t@:isVar public var ry(get, set):Float;\n\t@:isVar public var rx(get, set):Float;\n\n\tpublic var type = 'Ellipse'; // base (get class name?)\n\n\tpublic function new(x, y, rx, ry) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.rx = rx;\n\t\tthis.ry = ry;\n\t\tsuper('ellipse');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\txml.set('cx', Std.string(this.x));\n\t\txml.set('cy', Std.string(this.y));\n\t\txml.set('rx', Std.string(this.rx));\n\t\txml.set('ry', Std.string(this.ry));\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tctx.beginPath();\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_ry():Float {\n\t\treturn ry;\n\t}\n\n\tfunction set_ry(value:Float):Float {\n\t\treturn ry = value;\n\t}\n\n\tfunction get_rx():Float {\n\t\treturn rx;\n\t}\n\n\tfunction set_rx(value:Float):Float {\n\t\treturn rx = value;\n\t}\n}\n","package sketcher.draw;\n\nimport js.Browser.*;\n\n/**\n * SVG: in svg you create a gradient and place it as a fill over an rectangle/circle/etc\n * CANVAS: in canvas you don't have that controle, so you create a rectantle and place the gradient over there\n */\n/**\n * @source\n * \t\thttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient\n * \t\thttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient\n * \t\thttps://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop\n */\nclass Gradient extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\tpublic var type = 'gradient'; // base (get class name?)\n\n\tvar color0:String;\n\tvar color1:String;\n\n\tvar canvasGradient:js.html.CanvasGradient;\n\tvar gradientObj:GradientObj;\n\n\t/**\n\t * [Description]\n\t * @param color0\n\t * @param color1\n\t * @param isLinear\n\t */\n\tpublic function new(color0:String, color1:String, isLinear:Bool = true) {\n\t\tthis.color0 = color0;\n\t\tthis.color1 = color1;\n\n\t\tsuper('linearGradient');\n\t}\n\n\t/**\n\t\t<linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n\t\t  <stop offset=\"0%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\" />\n\t\t  <stop offset=\"100%\" style=\"stop-color:rgb(255,0,0);stop-opacity:1\" />\n\t\t</linearGradient>\n\t */\n\tpublic function svg(?settings:Settings):String {\n\t\t// xml.set('id', 'test-gradient');\n\t\tvar stop0 = Xml.createElement('stop');\n\t\tstop0.set('offset', '0%');\n\t\tstop0.set('stop-color', '${this.color0}');\n\t\tvar stop1 = Xml.createElement('stop');\n\t\tstop1.set('offset', '100%');\n\t\tstop1.set('stop-color', '${this.color1}');\n\t\t// var stop2 = Xml.createElement('stop');\n\t\t// stop2.set('offset', '50%');\n\t\t// stop2.set('stop-color', 'pink');\n\n\t\txml.addChild(stop0);\n\t\txml.addChild(stop1);\n\t\t// xml.addChild(stop2);\n\n\t\t// if (this.stroke != null)\n\t\t// \txml.set('stroke', this.stroke);\n\n\t\t// if (lineWeight != null)\n\t\t// \txml.set('stroke-width', Std.string(this.lineWeight));\n\n\t\treturn xml.toString();\n\t}\n\n\t/**\n\t * \tcurrently the svg way of creating gradients doesn't work with canvas\n\t *\n\t * @example:\n\t *\t\t\tif (settings.type.toLowerCase() == 'canvas') {\n\t *\t\t\t\tvar gradient = sketch.makeGradient('#B993D6', '#8CA6DB');\n\t *\t\t\t}\n\t *\n\t * @param ctx\n\t */\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tif (!ISWARN) {\n\t\t\tconsole.warn('Gradient doens\\'t work the same as svg, use with care');\n\t\t\tISWARN = true;\n\t\t}\n\n\t\tvar w = ctx.canvas.width;\n\t\tvar h = ctx.canvas.height;\n\t\tvar grd = ctx.createLinearGradient(0, 0, w, 0);\n\t\tgrd.addColorStop(0, '${this.color0}');\n\t\tgrd.addColorStop(1, '${this.color1}');\n\n\t\t// [mck] probably use this to get this var in combination with rect?\n\t\tcanvasGradient = grd;\n\t\tgradientObj = {\n\t\t\tid: this.id,\n\t\t\tcanvasGradient: canvasGradient\n\t\t}\n\n\t\tctx.fillStyle = grd;\n\t\tctx.fillRect(0, 0, w, h);\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n}\n\ntypedef GradientObj = {\n\tvar id:String;\n\tvar canvasGradient:js.html.CanvasGradient;\n}\n","package sketcher.draw;\n\nimport js.Browser.*;\n\nclass Group extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\tpublic var type = 'group'; // base (get class name?)\n\n\t@:isVar public var arr(get, set):Array<IBase>;\n\n\t/**\n\t * create a group to join a couple of IBase items\n\t * useful in `svg`, not so much in `canvas`\n\t * might be usefull to push all actions into one transform\n\t */\n\tpublic function new(arr:Array<IBase>) {\n\t\tthis.arr = arr;\n\t\tsuper('g');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\tif (this.x > 0 && this.y > 0) {\n\t\t\tthis.transArr.push('translate(${this.x}, ${this.y})');\n\t\t}\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\t\t// xml.set('x', Std.string(this.x));\n\t\t// xml.set('y', Std.string(this.y));\n\n\t\tvar comment = Xml.createComment('Group: ${id}');\n\t\txml.addChild(comment); // not sure why?\n\t\txml.addChild(Xml.parse('<desc>${id}</desc>'));\n\t\tfor (i in 0...this.arr.length) {\n\t\t\t// untyped xml.appendChild(this.arr[i].svg);\n\t\t\t// xml.addChild(Xml.createComment(this.arr[i].type));\n\t\t\tvar base = this.arr[i];\n\t\t\txml.addChild(Xml.parse(base.svg(null)));\n\t\t}\n\t\t// xml.set('x', '0');\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tif (!ISWARN) {\n\t\t\tconsole.warn('The Group (${id}) changes like transforms/etc. doesn\\'t work for canvas (yet)');\n\t\t\tconsole.groupCollapsed('Group (${id})');\n\t\t\tconsole.info('the following work\\n- strokeOpacity\\n- fillOpacity\\n- fillColor\\n- strokeColor');\n\t\t\tconsole.groupEnd();\n\t\t\tGroup.ISWARN = true;\n\t\t}\n\t\t// TODO set transforms on group also on individuals\n\t\tfor (i in 0...this.arr.length) {\n\t\t\tvar base = this.arr[i];\n\t\t\tif (base == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (this.fillOpacity != null) {\n\t\t\t\tcast(base, Base).fillOpacity = this.fillOpacity;\n\t\t\t}\n\t\t\tif (this.strokeOpacity != null) {\n\t\t\t\tcast(base, Base).strokeOpacity = this.strokeOpacity;\n\t\t\t}\n\t\t\tif (this.fillColor != null) {\n\t\t\t\tcast(base, Base).fillColor = this.fillColor;\n\t\t\t}\n\t\t\tif (this.strokeColor != null) {\n\t\t\t\tcast(base, Base).strokeColor = this.strokeColor;\n\t\t\t}\n\n\t\t\tbase.ctx(ctx);\n\t\t}\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ unique functions for this specific class ____________________________________\n\n\tpublic function hide() {\n\t\t// hide this group with\n\t\t// opacity:0 // old way... doesn't work that well for canvas\n\t\tfillOpacity = 0;\n\t\tstrokeOpacity = 0;\n\t}\n\n\tpublic function test() {\n\t\ttrace('test if casting works');\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_arr():Array<IBase> {\n\t\treturn arr;\n\t}\n\n\tfunction set_arr(value:Array<IBase>):Array<IBase> {\n\t\treturn arr = value;\n\t}\n}\n","package sketcher.draw;\n\nimport sketcher.util.ColorUtil;\nimport sketcher.util.MathUtil;\nimport js.html.Image;\nimport js.Browser.*;\n\nclass Image extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\tpublic var type = 'image'; // base (get class name?)\n\n\t// Points at a URL for the image file.\n\t@:isVar public var href(get, set):String;\n\t// The width the image renders at. Unlike HTML's <img>, this attribute is required.\n\t@:isVar public var width(get, set):Float;\n\t// he height the image renders at. Unlike HTML's <img>, this attribute is required.\n\t@:isVar public var height(get, set):Float;\n\n\t@:isVar public var preserveAspectRatio(get, set):PreserveAspectRatioObj;\n\n\t@:isVar public var isCenter(get, set):Bool;\n\n\tpublic function new(x, y, href, width, height, ?isCenter:Bool = false) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.href = href;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.isCenter = isCenter;\n\t\tif (isCenter) {\n\t\t\tthis.x = this.x - (this.width / 2);\n\t\t\tthis.y = this.y - (this.height / 2);\n\n\t\t\t// trace(this.x);\n\t\t}\n\n\t\tsuper('image');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\txml.set('x', Std.string(this.x));\n\t\txml.set('y', Std.string(this.y));\n\t\txml.set('href', Std.string(this.href));\n\t\txml.set('width', Std.string(this.width));\n\t\txml.set('height', Std.string(this.height));\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\t// set everything to default values\n\t\tuseDefaultsCanvas();\n\n\t\tctx.imageSmoothingEnabled = true; // default true\n\t\tuntyped ctx.imageSmoothingQuality = 'high';\n\t\t// trace('canvas image');\n\t\tvar img = new js.html.Image(); // Create new img element\n\t\timg.onload = function() {\n\t\t\ttrace('image.onload');\n\n\t\t\t// execute drawImage statements here\n\n\t\t\t// trace(img.width); // 600\n\t\t\t// trace(img.height); // 529\n\t\t\tvar prop = img.height / img.width;\n\t\t\tif (img.width < img.height)\n\t\t\t\tprop = img.width / img.height;\n\n\t\t\t// rotation & move...\n\t\t\tif (this.rotate != null) {\n\t\t\t\t// trace(this.x, this.y, this.rotate);\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.translate(this.x, this.y);\n\t\t\t\tctx.rotate(MathUtil.radians(this.rotate));\n\n\t\t\t\tif (this.move != null) {\n\t\t\t\t\tctx.translate(this.move.x, this.move.y);\n\t\t\t\t}\n\n\t\t\t\tif (isCenter) {\n\t\t\t\t\tctx.drawImage(img, -(this.width * 0), -(this.height * prop), this.width, this.height * prop);\n\t\t\t\t} else {\n\t\t\t\t\tctx.drawImage(img, 0, 0, this.width, this.height * prop);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\tif (this.rotate == null) {\n\t\t\t\tctx.drawImage(img, this.x, this.y, this.width, this.height * prop);\n\t\t\t}\n\t\t};\n\t\timg.onerror = function(e) {\n\t\t\tconsole.warn(e);\n\t\t}\n\t\t// img.crossOrigin = \"Anonymous\"; ???\n\t\timg.src = this.href; // Set source path\n\n\t\t// trace(this.href, this.width, this.height);\n\n\t\t// var testImg = document.createImageElement();\n\t\t// testImg.src = this.href;\n\t\t// document.body.appendChild(testImg);\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_href():String {\n\t\treturn href;\n\t}\n\n\tfunction set_href(value:String):String {\n\t\treturn href = value;\n\t}\n\n\tfunction get_width():Float {\n\t\treturn width;\n\t}\n\n\tfunction set_width(value:Float):Float {\n\t\treturn width = value;\n\t}\n\n\tfunction get_height():Float {\n\t\treturn height;\n\t}\n\n\tfunction set_height(value:Float):Float {\n\t\treturn height = value;\n\t}\n\n\tfunction get_isCenter():Bool {\n\t\treturn isCenter;\n\t}\n\n\tfunction set_isCenter(value:Bool):Bool {\n\t\treturn isCenter = value;\n\t}\n\n\tfunction get_preserveAspectRatio():PreserveAspectRatioObj {\n\t\treturn preserveAspectRatio;\n\t}\n\n\tfunction set_preserveAspectRatio(value:PreserveAspectRatioObj):PreserveAspectRatioObj {\n\t\treturn preserveAspectRatio = value;\n\t}\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\nenum abstract PreserveAspectRatioObj(String) {\n\tvar None = \"none\"; // Do not force uniform scaling. Scale the graphic content of the given element non-uniformly if necessary such that the element's bounding box exactly matches the viewport rectangle. Note that if <align> is none, then the optional <meetOrSlice> value is ignored.\n\tvar xMinYMin = \"xMinYMin\"; // - Force uniform scaling.\n\t// Align the <min-x> of the element's viewBox with the smallest X value of the viewport.\n\t//  Align the <min-y> of the element's viewBox with the smallest Y value of the viewport.\n\tvar xMidYMin = \"xMidYMin\"; // - Force uniform scaling.\n\t// Align the midpoint X value of the element's viewBox with the midpoint X value of the viewport.\n\t// Align the <min-y> of the element's viewBox with the smallest Y value of the viewport.\n\tvar xMaxYMin = \"xMaxYMin\"; // - Force uniform scaling.\n\t// Align the <min-x>+<width> of the element's viewBox with the maximum X value of the viewport.\n\t// Align the <min-y> of the element's viewBox with the smallest Y value of the viewport.\n\tvar xMinYMid = \"xMinYMid\"; // - Force uniform scaling.\n\t// Align the <min-x> of the element's viewBox with the smallest X value of the viewport.\n\t// Align the midpoint Y value of the element's viewBox with the midpoint Y value of the viewport.\n\tvar xMidYMid = \"xMidYMid\"; // (the default)  // - Force uniform scaling.\n\t// Align the midpoint X value of the element's viewBox with the midpoint X value of the viewport.\n\t// Align the midpoint Y value of the element's viewBox with the midpoint Y value of the viewport.\n\tvar xMaxYMid = \"xMaxYMid\"; // - Force uniform scaling. // Align the <min-x>+<width> of the element's viewBox with the maximum X value of the viewport.\n\t// Align the midpoint Y value of the element's viewBox with the midpoint Y value of the viewport.\n\tvar xMinYMax = \"xMinYMax\"; // - Force uniform scaling. // Align the <min-x> of the element's viewBox with the smallest X value of the viewport.\n\t// Align the <min-y>+<height> of the element's viewBox with the maximum Y value of the viewport.\n\tvar xMidYMax = \"xMidYMax\"; // - Force uniform scaling. // Align the midpoint X value of the element's viewBox with the midpoint X value of the viewport.\n\t// Align the <min-y>+<height> of the element's viewBox with the maximum Y value of the viewport.\n\tvar xMaxYMax = \"xMaxYMax\"; //  // - Force uniform scaling.\n\t// Align the <min-x>+<width> of the element's viewBox with the maximum X value of the viewport.\n\t// Align the <min-y>+<height> of the element's viewBox with the maximum Y value of the viewport.\n}\n","package sketcher.draw;\n\nimport sketcher.util.ColorUtil;\n\nclass Line extends Base implements IBase {\n\t@:isVar public var x2(get, set):Float;\n\t@:isVar public var y2(get, set):Float;\n\n\t// @:isVar public var lineWeight(get, set):Float;\n\t// TODO: change to enum LineCap\n\t// @:isVar public var lineCap(get, set):String;\n\tpublic var type = 'Line'; // base (get class name?)\n\n\tpublic function new(x, y, x2, y2) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.x2 = x2;\n\t\tthis.y2 = y2;\n\t\tsuper('line');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\txml.set('x1', Std.string(this.x));\n\t\txml.set('y1', Std.string(this.y));\n\t\txml.set('x2', Std.string(this.x2));\n\t\txml.set('y2', Std.string(this.y2));\n\t\tif (this.stroke != null)\n\t\t\txml.set('stroke', this.stroke);\n\n\t\tif (lineWeight != null)\n\t\t\txml.set('stroke-width', Std.string(this.lineWeight));\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\t// set everything to default values\n\t\tuseDefaultsCanvas();\n\n\t\tif (this.lineCap != null) {\n\t\t\tctx.lineCap = cast this.lineCap;\n\t\t}\n\t\tctx.lineWidth = this.lineWeight;\n\n\t\t// trace('fillColor : ' + this.fillColor);\n\t\t// trace('fillOpacity: ' + this.fillOpacity);\n\t\t// trace('strokeColor : ' + this.strokeColor);\n\t\t// trace('strokeOpacity: ' + this.strokeOpacity);\n\n\t\tvar _fillColor = ColorUtil.assumption(this.fillColor);\n\t\tctx.fillStyle = ColorUtil.getColourObj(_fillColor, this.fillOpacity);\n\n\t\tvar _strokeColor = ColorUtil.assumption(this.strokeColor);\n\t\tctx.strokeStyle = ColorUtil.getColourObj(_strokeColor, this.strokeOpacity);\n\n\t\tif (this.dash != null) {\n\t\t\tctx.setLineDash(this.dash);\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tctx.moveTo(this.x, this.y);\n\t\tctx.lineTo(this.x2, this.y2);\n\n\t\tif (this.fill != null) {\n\t\t\tctx.fill();\n\t\t}\n\t\tif (this.stroke != null && this.lineWeight != 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t\t// ctx.closePath();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_x2():Float {\n\t\treturn x2;\n\t}\n\n\tfunction set_x2(value:Float):Float {\n\t\treturn x2 = value;\n\t}\n\n\tfunction get_y2():Float {\n\t\treturn y2;\n\t}\n\n\tfunction set_y2(value:Float):Float {\n\t\treturn y2 = value;\n\t}\n\n\t// function get_lineWeight():Float {\n\t// \treturn lineWeight;\n\t// }\n\t// function set_lineWeight(value:Float):Float {\n\t// \treturn lineWeight = value;\n\t// }\n\t// function get_lineCap():String {\n\t// \treturn lineCap;\n\t// }\n\t// function set_lineCap(value:String):String {\n\t// \treturn lineCap = value;\n\t// }\n}\n","package sketcher.draw;\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\n *\n * https://www.w3schools.com/graphics/svg_path.asp\n *\n *\n */\nclass Path extends Base implements IBase {\n\tpublic var dArray:Array<String> = [];\n\n\tpublic var type = 'Path'; // base (get class name?)\n\n\tpublic function new(x, y) {\n\t\tmoveTo(x, y);\n\t\tsuper('path');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\tvar str = '';\n\t\tfor (i in dArray) {\n\t\t\tstr += i;\n\t\t}\n\t\txml.set('d', str);\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tctx.beginPath();\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ functions ____________________________________\n\n\t/**\n\t * create a rectangular shape with an other rectangular shape punched out\n\t * \t- sort of like a square donut\n\t * \t- window\n\t * \t- passe-partout\n\t *\n\t *\n\t * @example:\n\t * \t\t\t\tvar _path = sketch.makePath(0, 0);\n\t *\t\t\t\t_path.window(100, 50, 400, 500, 225, 200, 150, 200);\n\t *\t\t\t\t_path.fillColor = getColourObj(PINK);\n\t *\n\t * <path d=\"M100,50V550H500V50ZM375,400H225V200H375Z\" style=\"fill:#fff\"/>\n\t *\n\t * @param  x       [description]\n\t * @param  y       [description]\n\t * @param  width   [description]\n\t * @param  height  [description]\n\t * @param  x2      [description]\n\t * @param  y2      [description]\n\t * @param  width2  [description]\n\t * @param  height2 [description]\n\t * @param          [description]\n\t * @return         [description]\n\t */\n\tpublic function window(x:Float, y:Float, width:Float, height:Float, x2:Float, y2:Float, width2:Float, height2:Float) {\n\t\t//  clear dArray\n\t\tdArray = [];\n\t\tthis.id = 'passe-partout ${count}';\n\t\t// start drawing\n\t\tdArray.push('M${x},${y}'); // M100,50\n\t\tdArray.push('V${y + height}'); // V550\n\t\tdArray.push('H${x + width}'); // H500\n\t\tdArray.push('V${y}'); // V50\n\t\tdArray.push('Z'); // Z\n\t\t//\n\t\tdArray.push('M${x2 + width2},${y2 + height2}'); // M375,400\n\t\tdArray.push('H${x2}'); // H225\n\t\tdArray.push('V${y2}'); //  V200\n\t\tdArray.push('H${x2 + width2}'); // H375\n\t\tdArray.push('Z'); // Z\n\t}\n\n\tpublic function moveTo(x:Float, y:Float) {\n\t\tdArray.push('M${x}, ${y} ');\n\t}\n\n\t/**\n\t * The most generic is the \"Line To\" command, called with L. L takes two parameters—x and y coordinates—and draws a line from the current position to a new position.\n\t * @param x\n\t * @param y\n\t */\n\tpublic function lineTo(x, y) {\n\t\tdArray.push('L${x}, ${y} ');\n\t}\n\n\t/**\n\t * There are two abbreviated forms for drawing horizontal and vertical lines. H draws a horizontal line, and V draws a vertical line. Both commands only take one argument since they only move in one direction.\n\t * @param x\n\t */\n\tpublic function horizontalLineTo(x) {\n\t\tdArray.push('H${x} ');\n\t}\n\n\tpublic function verticalLineTo(y) {\n\t\tdArray.push('V${y} ');\n\t}\n\n\t/**\n\t * The cubic curve, C, is the slightly more complex curve. Cubic Beziers take in two control points for each point. Therefore, to create a cubic Bezier, you need to specify three sets of coordinates.\n\t * @param x1\t(x1,y1) is the control point for the start of your curve,\n\t * @param y1\t(x1,y1) is the control point for the start of your curve,\n\t * @param x2\t(x2,y2) is the control point for the end.\n\t * @param y2\t(x2,y2) is the control point for the end.\n\t * @param x\t\tThe last set of coordinates here (x,y) are where you want the line to end.\n\t * @param y\t\tThe last set of coordinates here (x,y) are where you want the line to end.\n\t */\n\tpublic function curveto(x1:Float, y1:Float, x2:Float, y2:Float, x:Float, y:Float) {\n\t\tdArray.push('C${x1}, ${y1} ${x2}, ${y2} ${x}, ${y} ');\n\t}\n\n\t// S = smooth curveto\n\t// Q = quadratic Bézier curve\n\t// T = smooth quadratic Bézier curveto\n\t// A = elliptical Arc\n\n\t/**\n\t * We can shorten the above path declaration a little bit by using the \"Close Path\" command, called with Z. This command draws a straight line from the current position back to the first point of the path. It is often placed at the end of a path node, although not always. There is no difference between the uppercase and lowercase command.\n\t */\n\tpublic function closepath() {\n\t\tdArray.push('Z ');\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n}\n","package sketcher.draw;\n\nimport sketcher.util.ColorUtil;\nimport sketcher.AST.Point;\nimport sketcher.draw.AST.LineCap;\n\n/**\n * The <polyline> element is used to create any shape that consists of only straight lines (that is connected at several points):\n * @source: \thttps://www.w3schools.com/graphics/svg_polyline.asp\n */\nclass PolyLine extends Base implements IBase {\n\tpublic var type = 'PolyLine'; // base (get class name?)\n\n\t// @:isVar public var lineCap(get, set):LineCap;\n\t@:isVar public var arr(get, set):Array<Float>; // collection of points\n\n\tpublic function new(arr:Array<Float>) {\n\t\tthis.arr = arr;\n\t\tsuper('polyline');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\tif (desc != '') {\n\t\t\t// xml.addChild(Xml.createComment('desc')); // still weird I need to do this\n\t\t\txml.addChild(Xml.parse('<desc>${desc}</desc>'));\n\t\t}\n\t\tvar str = '';\n\t\tfor (i in 0...this.arr.length) {\n\t\t\tvar value = this.arr[i];\n\t\t\tstr += '${value} ';\n\t\t}\n\t\txml.set('points', str);\n\n\t\tif (this.getTransform() != '') {\n\t\t\ttrace(this.getTransform());\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\t// set everything to default values\n\t\tuseDefaultsCanvas();\n\n\t\tif (this.lineCap != null) {\n\t\t\tctx.lineCap = cast this.lineCap;\n\t\t}\n\t\tctx.lineWidth = this.lineWeight;\n\n\t\tvar _fillColor = ColorUtil.assumption(this.fillColor);\n\t\tctx.fillStyle = ColorUtil.getColourObj(_fillColor, this.fillOpacity);\n\n\t\tvar _strokeColor = ColorUtil.assumption(this.strokeColor);\n\t\tctx.strokeStyle = ColorUtil.getColourObj(_strokeColor, this.strokeOpacity);\n\n\t\tif (this.dash != null) {\n\t\t\tctx.setLineDash(this.dash);\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tvar _pointArray = convertArr();\n\t\t// trace(this.pointArray);\n\t\t// trace('----');\n\t\t// trace(_pointArray);\n\n\t\tfor (i in 0..._pointArray.length) {\n\t\t\tvar p = _pointArray[i];\n\t\t\tif (i == 0) {\n\t\t\t\tctx.moveTo(p.x, p.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(p.x, p.y);\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\tfunction convertArr():Array<Point> {\n\t\tvar _pointArray = [];\n\t\tfor (i in 0...this.arr.length) {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tvar x = this.arr[i];\n\t\t\t\tvar y = this.arr[i + 1];\n\t\t\t\t_pointArray.push({x: x, y: y});\n\t\t\t}\n\t\t}\n\t\treturn _pointArray;\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_arr():Array<Float> {\n\t\treturn arr;\n\t}\n\n\tfunction set_arr(value:Array<Float>):Array<Float> {\n\t\treturn arr = value;\n\t}\n}\n","package sketcher.draw;\n\nimport sketcher.AST.Point;\n\nclass Polygon extends Base implements IBase {\n\tpublic var type = 'Polygon'; // base (get class name?)\n\n\t@:isVar public var arr(get, set):Array<Float>; // collection of points\n\n\tpublic function new(arr:Array<Float>) {\n\t\tthis.arr = arr;\n\t\tsuper('polygon');\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\tvar str = '';\n\t\tfor (i in 0...this.arr.length) {\n\t\t\tvar value = this.arr[i];\n\t\t\tstr += '${value} ';\n\t\t}\n\t\txml.set('points', str);\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tctx.beginPath();\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\t// ____________________________________ public functions ____________________________________\n\t// not sure what this does?????\n\t//\n\tpublic function getPoint(id:Int):Point {\n\t\t// [mck] do check for total nr\n\t\tif (id * 2 > arr.length) {\n\t\t\ttrace(\"not in this length\");\n\t\t}\n\t\tvar p = {x: arr[id * 2], y: arr[(id * 2) + 1]};\n\t\treturn p;\n\t}\n\n\t/**\n\t * Create shape with polygon\n\t * \t\t- triangle with 3 sides\n\t * \t\t- square with 4 sides\n\t * \t\t- pentagon with 5 sides\n\t * \t\t- hexagon with 6 sides\n\t * \t\t- heptagon with 27 sides\n\t *\n\t * @example\n\t *\t\t\t\tvar _polygon = sketch.makePolygon([]);\n\t *\t\t\t\t_polygon.sides(sh.x, sh.y, 6, sh.size);\n\t *\t\t\t\t_polygon.rotate = sh.degree;\n\t *\t\t\t\t_polygon.strokeColor = getColourObj(BLACK);\n\t *\t\t\t\t_polygon.strokeWeight = 1;\n\t *\t\t\t\t_polygon.fillOpacity = 0;\n\t *\n\t * @param x\t\t\tx position of the shape\n\t * @param y\t\t\ty position of the shape\n\t * @param sides\t\tnumber of sides (3=triangle, 4=square, etc)\n\t * @param size\t\tradius of the polygon (length to the corner)\n\t */\n\tpublic function sides(x:Float, y:Float, sides:Int, size:Float) {\n\t\t// reset array\n\t\tthis.arr = [];\n\n\t\t// trace(x);\n\t\t// trace(y);\n\t\t// this.arr.push((x + size) * Math.cos(0));\n\t\t// this.arr.push((y + size) * Math.sin(0));\n\t\tfor (i in 0...sides) {\n\t\t\tvar _x = x + (size * Math.cos(i * (2 * Math.PI) / sides));\n\t\t\tvar _y = y + (size * Math.sin(i * (2 * Math.PI) / sides));\n\t\t\tthis.arr.push(_x);\n\t\t\tthis.arr.push(_y);\n\t\t}\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_arr():Array<Float> {\n\t\treturn arr;\n\t}\n\n\tfunction set_arr(value:Array<Float>):Array<Float> {\n\t\treturn arr = value;\n\t}\n}\n","package sketcher.draw;\n\nimport js.Browser.*;\nimport js.html.webgl.RenderingContext;\nimport sketcher.AST.Point;\nimport sketcher.util.ColorUtil;\n\nclass Rectangle extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\t@:isVar public var width(get, set):Float;\n\t@:isVar public var height(get, set):Float;\n\n\t@:isVar public var radius(get, set):Int;\n\n\tpublic var type = 'rectangle'; // base (get class name?)\n\n\tvar xpos:Float;\n\tvar ypos:Float;\n\tvar isCenter:Bool;\n\n\tpublic var point_top_left:Point;\n\tpublic var point_top_right:Point;\n\tpublic var point_bottom_left:Point;\n\tpublic var point_bottom_right:Point;\n\n\tpublic function new(x:Float, y:Float, width:Float, height:Float, ?isCenter:Bool = true) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.xpos = this.x - (this.width / 2);\n\t\tthis.ypos = this.y - (this.height / 2);\n\n\t\tthis.isCenter = isCenter;\n\t\tif (!isCenter) {\n\t\t\tthis.xpos = this.x;\n\t\t\tthis.ypos = this.y;\n\t\t}\n\n\t\tthis.point_top_left = {x: this.xpos, y: this.ypos};\n\t\tthis.point_top_right = {x: this.xpos + this.width, y: this.ypos};\n\t\tthis.point_bottom_left = {x: this.xpos, y: this.ypos + this.height};\n\t\tthis.point_bottom_right = {x: this.xpos + this.width, y: this.ypos + this.height};\n\n\t\tsuper('rect');\n\t}\n\n\tpublic function noStroke() {\n\t\tthis.lineWeight = 0;\n\t\tthis.strokeOpacity = 0;\n\t}\n\n\tpublic function svg(?settings:Settings):String {\n\t\txml.set('x', Std.string(this.xpos));\n\t\txml.set('y', Std.string(this.ypos));\n\t\txml.set('width', Std.string(this.width));\n\t\txml.set('height', Std.string(this.height));\n\n\t\tif (radius != null) {\n\t\t\txml.set('rx', Std.string(this.radius));\n\t\t\txml.set('ry', Std.string(this.radius));\n\t\t}\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\t// set everything to default values\n\t\tuseDefaultsCanvas();\n\n\t\tif (this.lineCap != null) {\n\t\t\tctx.lineCap = cast this.lineCap;\n\t\t}\n\t\tctx.lineWidth = this.lineWeight;\n\n\t\t// trace('fillColor : ' + this.fillColor);\n\t\t// trace('fillOpacity: ' + this.fillOpacity);\n\t\t// trace('strokeColor : ' + this.strokeColor);\n\t\t// trace('strokeOpacity: ' + this.strokeOpacity);\n\n\t\tvar _fillColor = ColorUtil.assumption(this.fillColor);\n\t\tctx.fillStyle = ColorUtil.getColourObj(_fillColor, this.fillOpacity);\n\n\t\tvar _strokeColor = ColorUtil.assumption(this.strokeColor);\n\t\tctx.strokeStyle = ColorUtil.getColourObj(_strokeColor, this.strokeOpacity);\n\n\t\tif (this.dash != null) {\n\t\t\tctx.setLineDash(this.dash);\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tif (this.radius == null) {\n\t\t\t// normal rectangle\n\t\t\tctx.rect(this.xpos, this.ypos, this.width, this.height);\n\t\t} else {\n\t\t\t// rectangle with radius\n\t\t\tvar radius = {\n\t\t\t\ttl: this.radius,\n\t\t\t\ttr: this.radius,\n\t\t\t\tbr: this.radius,\n\t\t\t\tbl: this.radius\n\t\t\t};\n\t\t\tctx.moveTo(this.xpos + radius.tl, this.ypos);\n\t\t\tctx.lineTo(this.xpos + this.width - radius.tr, this.ypos);\n\t\t\tctx.quadraticCurveTo(this.xpos + this.width, this.ypos, this.xpos + this.width, this.ypos + radius.tr);\n\t\t\tctx.lineTo(this.xpos + this.width, this.ypos + this.height - radius.br);\n\t\t\tctx.quadraticCurveTo(this.xpos + this.width, this.ypos + this.height, this.xpos + this.width - radius.br, this.ypos + this.height);\n\t\t\tctx.lineTo(this.xpos + radius.bl, this.ypos + this.height);\n\t\t\tctx.quadraticCurveTo(this.xpos, this.ypos + this.height, this.xpos, this.ypos + this.height - radius.bl);\n\t\t\tctx.lineTo(this.xpos, this.ypos + radius.tl);\n\t\t\tctx.quadraticCurveTo(this.xpos, this.ypos, this.xpos + radius.tl, this.ypos);\n\t\t\tctx.closePath();\n\t\t}\n\n\t\tif (this.fill != null) {\n\t\t\tctx.fill();\n\t\t}\n\t\tif (this.stroke != null && this.lineWeight != 0) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\t// ctx.fill();\n\t\t// ctx.stroke();\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {\n\t\tif (!ISWARN) {\n\t\t\tconsole.warn('webgl is not implemented yet');\n\t\t\tISWARN = true;\n\t\t}\n\n\t\tvar c = '#ff3333';\n\n\t\tvar rgba = ColorUtil.assumption(c);\n\t\t// trace(rgba);\n\t\t// Set clear color to black, fully opaque\n\t\t// gl.clearColor(rgba.r, rgba.g, rgba.b, rgba.a);\n\t\t// Clear the color buffer with specified clear color\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT);\n\t\t// gl.clear(0);\n\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t// Set the clear color to darkish green.\n\t\tgl.clearColor(rgba.r / 255, rgba.g / 255, rgba.b / 255, rgba.a);\n\t\t// gl.clearColor(0.0, 0.5, 0.0, 1.0);\n\t\t// Clear the context with the newly set color. This is\n\t\t// the function call that actually does the drawing.\n\t\tgl.clear(RenderingContext.COLOR_BUFFER_BIT);\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\tfunction get_radius():Int {\n\t\treturn radius;\n\t}\n\n\tfunction set_radius(value:Int):Int {\n\t\treturn radius = value;\n\t}\n\n\tfunction get_width():Float {\n\t\treturn width;\n\t}\n\n\tfunction set_width(value:Float):Float {\n\t\treturn width = value;\n\t}\n\n\tfunction get_height():Float {\n\t\treturn height;\n\t}\n\n\tfunction set_height(value:Float):Float {\n\t\treturn height = value;\n\t}\n}\n","package sketcher.draw;\n\nimport js.Browser.*;\nimport sketcher.util.ColorUtil;\n\nusing StringTools;\n\n/**\n * \t// description\n *\tvar text = sketch.makeText(this.shapeName, 50, 140);\n *\ttext.fontFamily = '\"Soft Sugar [plain]\", SOFTSUGARPLAIN, sans-serif';\n *\ttext.fontSize = '115px';\n *\ttext.fill = '#CCCCCC';\n *\n *\ttext.fontWeight = \"700\";\n *\ttext.fontSize = '${_fontSize}px';\n *\ttext.fill = getColourObj(BLACK);\n */\nclass Text extends Base implements IBase {\n\tpublic static var ISWARN:Bool;\n\n\tpublic var type = 'Text'; // base (get class name?)\n\n\t@:isVar public var str(get, set):String;\n\n\t@:isVar public var fontSize(get, set):String;\n\n\t/**\n\t * font-family: family-name|generic-family|initial|inherit;\n\t * @see https://www.w3schools.com/cssref/pr_font_font-family.asp\n\t *\n\t * @example '\"Times New Roman\", Times, serif;'\n\t */\n\t@:isVar public var fontFamily(get, set):String;\n\n\t/**\n\t * font-weight: normal|bold|bolder|lighter|number|initial|inherit;\n\t * @see https://www.w3schools.com/cssref/pr_font_weight.asp\n\t */\n\t@:isVar public var fontWeight(get, set):String;\n\n\t@:isVar public var textAnchor(get, set):TextAnchorType;\n\n\t@:isVar public var textAlign(get, set):TextAlignType;\n\n\t/**\n\t * alignment-baseline: auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | inherit\n\t * @see https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/alignment-baseline\n\t */\n\t@:isVar public var alignmentBaseline(get, set):AlignmentBaselineType;\n\n\t@:isVar public var dominantBaseline(get, set):DominantBaselineType;\n\n\t/**\n\t * hacky\n\t */\n\tpublic var _textAlign:String;\n\n\tpublic var _textBaseline:String;\n\n\t/**\n\t * test style\n\t */\n\t@:isVar public var style(get, set):String;\n\n\t/**\n\t * Create a text element in svg\n\t *\n\t * @param str\t\tstring value\n\t * @param x\t\t\t(optional:default=0) x pos\n\t * @param y\t\t\t(optional:default=0) y pos\n\t *\n\t * @source: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text\n\t */\n\tpublic function new(str:String, ?x:Float = 0, ?y:Float = 0) {\n\t\tthis.str = str;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tsuper('text');\n\t}\n\n\t// ____________________________________ func ____________________________________\n\tpublic function align(value:TextAnchorType) {\n\t\tthis.textAnchor = value;\n\t}\n\n\tpublic function baseline(value:AlignmentBaselineType) {\n\t\tthis.alignmentBaseline = value;\n\t}\n\n\t//  dominant-baseline=\"middle\" text-anchor=\"middle\"\n\t// ____________________________________ create ____________________________________\n\tpublic function svg(?settings:Settings):String {\n\t\t// var style = '<style>.small {font:italic 13px sans-serif; fill:red;}</style>';\n\t\tvar comment = Xml.createComment('${this.str}');\n\t\tvar content = Xml.parse(this.str);\n\n\t\txml.addChild(comment); // strange reason I need to add this comment first otherwise the next line will not work\n\t\txml.addChild(content);\n\t\txml.set('x', Std.string(this.x));\n\t\txml.set('y', Std.string(this.y));\n\t\t// this is probably a very bad way of fixing this... but it seems to work\n\t\tif (this.style != null) {\n\t\t\t// make sure the styling class is unique...\n\t\t\tvar className = this.str.replace(' ', '').replace('\\n', '').toLowerCase();\n\t\t\txml.set('class', 'fontstyle_${className}');\n\t\t\t// var style = '<style type=\"text/css\">.fontstyle_${className} {${this.style}}</style>';\n\t\t\t// xml.addChild(Xml.parse(style));\n\n\t\t\t// [mck] this doesn't break the svg export to jpg or png, but it doesn't show it in the canvas when rendering\n\t\t\tvar style = document.createElement('style');\n\t\t\tstyle.innerHTML = '.fontstyle_${className} {${this.style}}';\n\t\t\tdocument.body.appendChild(style);\n\n\t\t\t// var _svg:js.html.svg.SVGElement = document.getElementsByName('svg')[0];\n\t\t\t// _svg.insertBefore(_svg.firstChild, style);\n\t\t}\n\t\t// xml.set('dx', Std.string(this.y));\n\t\t// xml.set('dy', Std.string(this.y));\n\t\t// xml.set('rotate', Std.string(this.y));\n\t\t// xml.set('lengthAdjust', Std.string(this.y));\n\t\t// xml.set('textLength', Std.string(this.y));\n\n\t\tif (this._textAlign != null) {\n\t\t\tconvertTextAlign();\n\t\t}\n\t\tif (this._textBaseline != null) {\n\t\t\tconvertTextBaseline();\n\t\t}\n\n\t\t/**\n\t\t\t<style>\n\t\t\t .small { font: italic 13px sans-serif; }\n\t\t\t</style>\n\t\t */\n\n\t\tif (this.getTransform() != '') {\n\t\t\txml.set('transform', this.getTransform());\n\t\t}\n\n\t\treturn xml.toString();\n\t}\n\n\tpublic function ctx(ctx:js.html.CanvasRenderingContext2D) {\n\t\tuseDefaultsCanvas();\n\n\t\tctx.save(); // save current state\n\n\t\tvar _fillColor = ColorUtil.assumption(this.fillColor);\n\t\tctx.fillStyle = ColorUtil.getColourObj(_fillColor, this.fillOpacity);\n\n\t\tvar _css = '';\n\t\tctx.font = '${_css} ${this.fontSize}px ${this.fontFamily}'.ltrim();\n\t\tctx.textAlign = cast textAlign;\n\t\tctx.textBaseline = cast alignmentBaseline;\n\n\t\t// trace(textAlign, alignmentBaseline);\n\t\tctx.fillText(this.str, this.x, this.y);\n\n\t\t// restore canvas to previous position\n\t\tctx.restore();\n\t}\n\n\tfunction convertTextAlign() {\n\t\tswitch (this._textAlign) {\n\t\t\tcase 'left':\n\t\t\t\tthis.textAnchor = TextAnchorType.Left;\n\t\t\tcase 'right':\n\t\t\t\tthis.textAnchor = TextAnchorType.Right;\n\t\t\tdefault:\n\t\t\t\tthis.textAnchor = TextAnchorType.Left;\n\t\t\t\ttrace(\"case '\" + this._textAlign + \"': trace ('\" + this._textAlign + \"');\");\n\t\t}\n\t}\n\n\tpublic function gl(gl:js.html.webgl.RenderingContext) {}\n\n\tfunction convertTextBaseline() {\n\t\tswitch (this._textBaseline) {\n\t\t\tcase 'top':\n\t\t\t\tthis.dominantBaseline = DominantBaselineType.Hanging;\n\t\t\tcase 'center':\n\t\t\t\tthis.dominantBaseline = DominantBaselineType.Middle;\n\t\t\tcase 'bottom':\n\t\t\t\tthis.dominantBaseline = DominantBaselineType.Baseline;\n\t\t\tdefault:\n\t\t\t\tthis.dominantBaseline = DominantBaselineType.Auto;\n\t\t\t\ttrace(\"case '\" + this._textBaseline + \"': trace ('\" + this._textBaseline + \"');\");\n\t\t}\n\t}\n\n\t// ____________________________________ getter/setter ____________________________________\n\n\tfunction get_fontSize():String {\n\t\treturn fontSize;\n\t}\n\n\tfunction set_fontSize(value:String):String {\n\t\txml.set('font-size', value);\n\t\treturn fontSize = value;\n\t}\n\n\tfunction get_fontFamily():String {\n\t\treturn fontFamily;\n\t}\n\n\tfunction set_fontFamily(value:String):String {\n\t\txml.set('font-family', value);\n\t\treturn fontFamily = value;\n\t}\n\n\tfunction get_fontWeight():String {\n\t\treturn fontWeight;\n\t}\n\n\tfunction set_fontWeight(value:String):String {\n\t\txml.set('font-weight', value);\n\t\treturn fontWeight = value;\n\t}\n\n\tfunction get_textAnchor():TextAnchorType {\n\t\treturn textAnchor;\n\t}\n\n\tfunction set_textAnchor(value:TextAnchorType):TextAnchorType {\n\t\txml.set('text-anchor', Std.string(value));\n\t\treturn textAnchor = value;\n\t}\n\n\tfunction get_alignmentBaseline():AlignmentBaselineType {\n\t\treturn alignmentBaseline;\n\t}\n\n\tfunction set_alignmentBaseline(value:AlignmentBaselineType):AlignmentBaselineType {\n\t\txml.set('alignment-baseline', Std.string(value));\n\t\treturn alignmentBaseline = value;\n\t}\n\n\tfunction get_dominantBaseline():DominantBaselineType {\n\t\treturn dominantBaseline;\n\t}\n\n\tfunction set_dominantBaseline(value:DominantBaselineType):DominantBaselineType {\n\t\txml.set('dominant-baseline', Std.string(value));\n\t\treturn dominantBaseline = value;\n\t}\n\n\tfunction get_textAlign():TextAlignType {\n\t\treturn textAlign;\n\t}\n\n\tfunction set_textAlign(value:TextAlignType):TextAlignType {\n\t\treturn textAlign = value;\n\t}\n\n\tfunction get_str():String {\n\t\treturn str;\n\t}\n\n\tfunction set_str(value:String):String {\n\t\treturn str = value;\n\t}\n\n\t/**\n\t * test\n\t * @return String\n\t */\n\tfunction get_style():String {\n\t\treturn style;\n\t}\n\n\tfunction set_style(value:String):String {\n\t\treturn style = value;\n\t}\n}\n\n@:enum abstract TextAnchorType(String) {\n\tvar Start = \"start\";\n\tvar Middle = \"middle\";\n\tvar End = \"end\";\n\tvar Left = \"start\"; // syntatic sugar\n\tvar Right = \"end\"; // syntatic sugar\n\tvar Center = \"middle\"; // syntatic sugar\n}\n\n@:enum abstract AlignmentBaselineType(String) {\n\tvar Auto = \"auto\";\n\tvar Baseline = \"baseline\";\n\tvar BeforeEdge = \"before-edge\";\n\tvar TextBeforeEdge = \"text-before-edge\";\n\tvar Middle = \"middle\";\n\tvar Central = \"central\";\n\tvar AfterEdge = \"after-edge\";\n\tvar TextAfterEdge = \"text-after-edge\";\n\tvar Ideographic = \"ideographic\";\n\tvar Alphabetic = \"alphabetic\";\n\tvar Hanging = \"hanging\";\n\tvar Mathematical = \"mathematical\";\n\tvar Top = \"top\";\n\tvar Center = \"center\";\n\tvar Bottom = \"bottom\";\n}\n\n@:enum abstract DominantBaselineType(String) { // var Auto = \"auto\";\n\tvar Auto = \"auto\";\n\tvar Baseline = \"baseline\";\n\tvar UseScript = 'use-script';\n\tvar NoChange = 'no-change';\n\tvar ResetSize = 'reset-size';\n\tvar Ideographic = \"ideographic\";\n\tvar Alphabetic = \"alphabetic\";\n\tvar Hanging = \"hanging\";\n\tvar Mathematical = \"mathematical\";\n\tvar Central = 'central';\n\tvar Middle = \"middle\";\n\tvar TextAfterEdge = \"text-after-edge\";\n\tvar TextBeforeEdge = \"text-before-edge\";\n\tvar Inherit = 'inherit';\n}\n\n// canvas?\nenum abstract TextAlignType(String) {\n\tvar Center = \"center\";\n\tvar End = \"end\";\n\tvar Left = \"left\";\n\tvar Right = \"right\";\n\tvar Start = \"start\";\n}\n","package sketcher.util;\n\n// import Sketch.Global.*;\nimport sketcher.AST;\nimport js.Browser.*;\nimport js.html.CanvasRenderingContext2D;\nimport sketcher.util.ColorUtil.RGB;\n\n/**\n *\n * |-------------------------------|\n * |             row               |\n * |-------------------------------|\n *\n *\n * |--------|\n * |        |\n * |        |\n * |        |\n * | colomn |\n * |        |\n * |        |\n * |        |\n * |--------|\n *\n *\n * @example\n * \t\t\tvar grid:GridUtil = new GridUtil();\n * \t\t\tgrid.setNumbered(3,3); // 3 horizontal, 3 vertical\n * \t\t\t// grid.setCellSize(_cellsize); // use a cellsize (width/height)\n * \t\t\tgrid.setIsCenterPoint(true); // default true, but can be set if needed\n *\n * \t\t\t// quick generate grid\n * \t\t\tif (isDebug) {\n * \t\t\t\tShapeUtil.gridField(ctx, grid); // canvas\n * \t\t\t\t// util.TestUtil.gridDots(sketch, grid); // svg\n * \t\t\t}\n *\n * \t\t\t// use grid to generate totale amount of shapes/etc\n * \t\t\tfor (i in 0...grid.array.length) {\n * \t\t\t\tshapeArray.push(createShape(i, grid.array[i]));\n * \t\t\t}\n */\nclass GridUtil {\n\tpublic var array:Array<Point> = [];\n\tpublic var total:Int = null;\n\n\t/**\n\t * starting point x\n\t */\n\tpublic var x:Float = null;\n\n\t/**\n\t * starting point y\n\t */\n\tpublic var y:Float = null;\n\n\t/**\n\t * the width of the grid\n\t */\n\tpublic var width:Float = null;\n\n\t/**\n\t * the height of the grid\n\t */\n\tpublic var height:Float = null;\n\n\tpublic var gridX:Float = 0;\n\tpublic var gridY:Float = 0;\n\n\t/**\n\t * create grid with center point as (gridw gridheight center)\n\t */\n\tpublic var isCentered:Bool = false;\n\n\t/**\n\t * use fullscreen or bigger to use a grid\n\t */\n\tpublic var isFullscreen:Bool = false;\n\n\t/**\n\t * how width is the grid\n\t */\n\tpublic var cellWidth:Float = null;\n\n\t/**\n\t * how height is the grid\n\t */\n\tpublic var cellHeight:Float = null;\n\n\t/**\n\t * number of horizontal items in the array\n\t */\n\tpublic var numHor:Float = null;\n\n\t/**\n\t * same as numHor, but a easier name to remember\n\t */\n\tpublic var totalRow:Int = null;\n\n\t/**\n\t * number of vertical items in the array\n\t */\n\tpublic var numVer:Float = null;\n\n\t/**\n\t * same as numVer, but a easier name to remember\n\t */\n\tpublic var totalColumn:Int = null;\n\n\tvar _isCellSize:Bool = false;\n\tvar _isNumbered:Bool = false;\n\tvar _isDimension:Bool = false;\n\tvar _isPosition:Bool = false;\n\tvar _isDebug:Bool = false; // fix ugly grid bugs\n\n\t// ____________________________________ chaining ____________________________________\n\t// new private vars\n\tprivate var _x:Dynamic; //\n\tprivate var _y:Dynamic; //\n\tprivate var _w:Float; //\n\tprivate var _h:Float; //\n\tprivate var _hor:Dynamic; //\n\tprivate var _ver:Dynamic; //\n\tprivate var _cellw:Dynamic; //\n\tprivate var _cellh:Dynamic; //\n\tprivate var _center:Dynamic; //\n\tprivate var _debug:Dynamic; // (Suggestion: debug)\n\tprivate var _fullscreen:Dynamic; // (Suggestions: fullscreen, isFullscreen)\n\tprivate var _color:Dynamic; // (Suggestion: color)\n\n\tpublic function new(w:Float, h:Float) {\n\t\tthis._w = w;\n\t\tthis._h = h;\n\t}\n\n\t/**\n\t * var grid = GridUtil.create(ctx).draw();\n\t *\n\t * @param ctx\n\t * @param text\n\t * @return GridUtil\n\t */\n\tstatic inline public function create(w:Float, h:Float):GridUtil {\n\t\tvar GridUtil = new GridUtil(w, h);\n\t\treturn GridUtil;\n\t}\n\n\t// ____________________________________ properties ____________________________________\n\n\t/**\n\t * [mck] prefer to have this x, and y\n\t *\n\t * set the x position of the grid\n\t *\n\t * @param x \tstart grid at ypos\n\t * @return GridUtil\n\t */\n\tinline public function xpos(x:Float):GridUtil {\n\t\tthis._x = x;\n\t\treturn this;\n\t}\n\n\t/**\n\t * set the y position of the grid\n\t * @param y \tstart grid at ypos\n\t * @return GridUtil\n\t */\n\tinline public function ypos(y:Float):GridUtil {\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * start position x and y\n\t * @param x \tstart grid at xpos\n\t * @param y \tstart grid at ypos\n\t * @return GridUtil\n\t */\n\tinline public function pos(x:Float, y:Float):GridUtil {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\treturn this;\n\t}\n\n\t/**\n\t * use specific size of the grid\n\t * @param w \twidth in pixels\n\t * @param h \theight in pixels\n\t * @return GridUtil\n\t */\n\tinline public function dimension(w:Float, h:Float):GridUtil {\n\t\tthis._w = w;\n\t\tthis._h = h;\n\t\treturn this;\n\t}\n\n\t/**\n\t * grid with horizontal (column) and vertical (rows)\n\t * @param hor\n\t * @param ver\n\t * @return GridUtil\n\t */\n\tinline public function grid(hor:Int, ver:Int):GridUtil {\n\t\tthis._hor = hor;\n\t\tthis._ver = ver;\n\t\treturn this;\n\t}\n\n\t/**\n\t * set the cell size of the grid\n\t * @param w \twidth of the cell\n\t * @param h \theight of the cell\n\t * @return GridUtil\n\t */\n\tinline public function size(w:Float, h:Float):GridUtil {\n\t\tthis._cellw = w;\n\t\tthis._cellh = h;\n\t\treturn this;\n\t}\n\n\t/**\n\t * use a centered grid\n\t * @return GridUtil\n\t */\n\tinline public function centered():GridUtil {\n\t\tthis._center = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * use to debug this class\n\t * @return GridUtil\n\t */\n\tinline public function debug():GridUtil {\n\t\tthis._debug = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * doesn't work yet\n\t * @return GridUtil\n\t */\n\tinline public function fullscreen():GridUtil {\n\t\tthis._fullscreen = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * doesn't work yet and no idea why?\n\t * @return GridUtil\n\t */\n\tinline public function color(value:RGB):GridUtil {\n\t\tthis._color = value;\n\t\treturn this;\n\t}\n\n\t/**\n\t * doesn't work yet and no idea why?\n\t * @return GridUtil\n\t */\n\tinline public function calc():GridUtil {\n\t\ttrace('WIP');\n\t\treturn this;\n\t}\n\n\t/**\n\t * start position x and y\n\t * @param x \tstart grid at xpos\n\t * @param y \tstart grid at ypos\n\t */\n\tpublic function setPosition(x, y) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setPostion');\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis._isPosition = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use centered point for grid\n\t *\n\t * @param isCentered  (default: true)\n\t */\n\tpublic function setIsCenterPoint(isCentered:Bool = true) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setCenterPoint');\n\t\tthis.isCentered = isCentered;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use when want to debug the grid\n\t *\n\t * @param isDebug  (default = true)\n\t */\n\tpublic function setDebug(isDebug:Bool = true) {\n\t\tthis._isDebug = isDebug;\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setDebug');\n\t}\n\n\t/**\n\t * create a grid that is fullscreen, or bigger\n\t *\n\t * works with \t- cellsize (width/height)\n\t * \t\t\t\t- numVer/numHer\n\t *\n\t * @param isFullscreen\t(optional) default : true\n\t */\n\tpublic function setIsFullscreen(isFullscreen:Bool = true) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setIsFullscreen');\n\t\tthis.isFullscreen = isFullscreen;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * create a grid based upon width/height\n\t * \t\tx, y, cellWidth, cellHeight is calculated\n\t * @param width\t\ttotal width of grid\n\t * @param height\ttotal height of grid\n\t */\n\tpublic function setDimension(width:Float, height:Float) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setDimension (width: ${width}, height: ${height})');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis._isDimension = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * create grid based upon horizontal and vertical blocks\n\t * @param numHor\tnumber of items horizontal (colums)\n\t * @param numVer\tnumber of items vertical (rows)\n\t */\n\tpublic function setNumbered(numHor:Float, numVer:Float) {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setNumbers (numHor: ${numHor}, numVer: ${numVer})');\n\t\tthis.numHor = numHor;\n\t\tthis.numVer = numVer;\n\t\tthis._isNumbered = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * use these values to calculate the grid\n\t * if this is only set, it will x, y, width, height of the grid\n\t *\n\t * center point is LEFT,TOP\n\t *\n\t * @param cellWidth \tfixed grid width\n\t * @param cellHeight \t(optional) fixed grid height (default is equal to cellWidth)\n\t */\n\tpublic function setCellSize(cellWidth:Float, ?cellHeight:Float) {\n\t\tif (cellHeight == null)\n\t\t\tcellHeight = cellWidth;\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} setCellSize (cellWidth: ${cellWidth}, cellHeight: ${cellHeight})');\n\t\tthis.cellWidth = cellWidth;\n\t\tthis.cellHeight = cellHeight;\n\t\tthis._isCellSize = true;\n\t\tcalculate();\n\t}\n\n\t/**\n\t * in which row is this value\n\t *\n\t * @param sh\n\t * @return Int\n\t */\n\tpublic function row(sh:Point):Int {\n\t\treturn getTablePosition(sh).row;\n\t}\n\n\t/**\n\t * in which column is this value\n\t * @param sh\n\t * @return Int\n\t */\n\tpublic function column(sh:Point):Int {\n\t\treturn getTablePosition(sh).column;\n\t}\n\n\t/**\n\t * get the row and column data of a point\n\t *\n\t * @example\n\t * \t\t\tfor (i in 0...grid.array.length) {\n\t *\t\t\t\tvar sh = grid.array[i];\n\t *\t\t\t\ttrace(grid.getTablePosition(sh).row);\n\t *\t\t\t}\n\t *\n\t * @param sh\n\t * @return Dynamic\n\t */\n\tpublic function getTablePosition(sh:Point):Dynamic {\n\t\tvar index = array.indexOf(sh);\n\t\tvar _row = Math.floor(index / numHor);\n\t\tvar _column = index - (_row * numHor);\n\t\treturn {\"row\": _row, \"column\": _column};\n\t}\n\n\t/**\n\t * get the index of (no safety yet)\n\t * @param point\n\t * @return Int\n\t */\n\tpublic function getIndex(point:Point):Int {\n\t\tvar index = array.indexOf(point);\n\t\tif (index == -1)\n\t\t\tconsole.warn('Looks like this point (${point.x}, ${point.y}) is not in array');\n\t\treturn index;\n\t}\n\n\t/**\n\t * convert rows and column into a value in that table/grid\n\t *\n\t * @param row\t\tif de grid would be a table, which row do you want\n\t * @param column\tif de grid would be a table, which column do you want\n\t * @return Point\n\t */\n\tpublic function getTablePoint(row:Int, column:Int):Point {\n\t\t// [mck] lets build in some clever messages\n\t\tif (row >= totalRow) {\n\t\t\tconsole.warn('looks like the row is outside the grid ($row >= $totalRow)');\n\t\t\treturn null;\n\t\t}\n\t\tif (column >= totalColumn) {\n\t\t\tconsole.warn('looks like the column is outside the grid ($column >= $totalColumn)');\n\t\t\treturn null;\n\t\t}\n\t\tif (row < 0) {\n\t\t\tconsole.warn('looks like the row is outside the grid ($row < 0)');\n\t\t\treturn null;\n\t\t}\n\t\tif (column < 0) {\n\t\t\tconsole.warn('looks like the column is outside the grid ($column < 0)');\n\t\t\treturn null;\n\t\t}\n\t\treturn array[Math.round((row * numHor) + (column))];\n\t}\n\n\tpublic function reset() {\n\t\tarray = []; // reset array\n\t}\n\n\tfunction calculate() {\n\t\tif (_isDebug)\n\t\t\tconsole.log('${toString()} calculate()');\n\t\t/**\n\t\t * solution #1:\n\t\t * grid is fixed via `cellWidth` and `cellHeight`\n\t\t * calculate: `x`, `y`, `width`, `height`, `numHor`, `numVer`\n\t\t *\n\t\t * TOP/LEFT centerpoint?\n\t\t */\n\t\tif (_isCellSize && !_isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #1: cellSize is set');\n\t\t\tnumHor = Math.floor(_w / cellWidth);\n\t\t\tnumVer = Math.floor(_h / cellHeight);\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tx = (_w - width) / 2;\n\t\t\ty = (_h - height) / 2;\n\t\t}\n\n\t\t/**\n\t\t * solution #2:\n\t\t * use numbered cells (in x-dir and y-dir),\n\t\t * calculate: `x`, `y`, `width`, `height`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isNumbered && !_isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #2: numbered cells set');\n\t\t\tvar __w = (width != null) ? width : _w;\n\t\t\tvar __h = (height != null) ? height : _h;\n\t\t\t// numHor = Math.floor(_w / cellWidth);\n\t\t\t// numVer = Math.floor(_h / cellHeight);\n\t\t\tcellWidth = __w / numHor;\n\t\t\tcellHeight = __h / numVer;\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tx = (_w - width) / 2;\n\t\t\ty = (_h - height) / 2;\n\n\t\t\tconsole.groupCollapsed('GridUtil values (#2):');\n\t\t\tconsole.info('cellWidth: $cellWidth, \\ncellHeight: $cellHeight, \\nwidth: $width, \\nheight: $height, \\nx: $x, \\ny: $y');\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\t/**\n\t\t * solution #3:\n\t\t * use a grid with set `width` and `height`\n\t\t * calculate: `x`, `y`, `numHor`, `numVer`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && !_isNumbered && !_isCellSize) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #3: width/height set ($width, $height)');\n\n\t\t\t// is not set\n\t\t\tvar _cellWidth = (cellWidth != null) ? cellWidth : 50;\n\t\t\tvar _cellHeight = (cellHeight != null) ? cellHeight : 50;\n\t\t\t// now we can calculate the number of rows/cols\n\t\t\tnumHor = Math.floor(width / _cellWidth);\n\t\t\tnumVer = Math.floor(height / _cellHeight);\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * _cellWidth;\n\t\t\theight = numVer * _cellHeight;\n\t\t\t// and now the width and height might have changed, so does the cells\n\t\t\tcellWidth = width / numHor;\n\t\t\tcellHeight = height / numVer;\n\t\t\t// centered everything\n\t\t\tx = (_w - width) / 2;\n\t\t\ty = (_h - height) / 2;\n\t\t}\n\n\t\t/**\n\t\t * solution #3a:\n\t\t * use a grid with set `width`, `height` AND `numHor`, `numVer`\n\t\t * calculate: `x`, `y`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && !_isCellSize) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #3a: width/height set ($width, $height) AND number row/cols ($numHor, $numVer)');\n\n\t\t\t// is not set, calculate\n\t\t\tcellWidth = Math.floor(width / numHor); // make it round numbers\n\t\t\tcellHeight = Math.floor(height / numVer); // make it round numbers\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\tif (!this._isPosition) {\n\t\t\t\t// centered everything\n\t\t\t\tx = (_w - width) / 2;\n\t\t\t\ty = (_h - height) / 2;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * solution #3b:\n\t\t * use a grid with set `width`, `height` AND `numHor`, `numVer`\n\t\t * calculate: `x`, `y`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isDimension && _isNumbered && !_isCellSize) {\n\t\t\tif (_isDebug) {\n\t\t\t\tconsole.info('${toString()} solution #3b: w/h set ($width, $height) AND number row/cols ($numHor, $numVer)');\n\t\t\t\tconsole.info('${toString()}  ($_w, $_h)');\n\t\t\t}\n\n\t\t\t// is not set, calculate\n\t\t\tcellWidth = Math.floor(width / numHor); // make it round numbers\n\t\t\tcellHeight = Math.floor(height / numVer); // make it round numbers\n\t\t\t// because we can't have half a row, we need to recalculate the width/heigth\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\t\t\t// if(\t!this._isPosition) {\n\t\t\t// \t// centered everything\n\t\t\t// \tx = (w - width) / 2;\n\t\t\t// \ty = (h - height) / 2;\n\t\t\t// }\n\t\t}\n\n\t\t/**\n\t\t * solution #4:\n\t\t * size of the cell is known, and width and height\n\t\t * calculate: `x`, `y`, `width`, `height`, `cellWidth`, `cellHeight`\n\t\t */\n\t\tif (_isCellSize && _isDimension) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #4: cellSize is set and width/height');\n\t\t\tnumHor = Math.floor(width / cellWidth);\n\t\t\tnumVer = Math.floor(height / cellHeight);\n\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\n\t\t\t// [mck] cellwidth will be leading, so the width and height will be fixed accordingly\n\t\t\tif (!_isPosition) {\n\t\t\t\tx = (_w - width) / 2;\n\t\t\t\ty = (_h - height) / 2;\n\t\t\t}\n\t\t}\n\n\t\tif (isFullscreen && _isCellSize) {\n\t\t\tif (_isDebug)\n\t\t\t\tconsole.info('${toString()} solution #5: fullscreen and cellSize is set');\n\n\t\t\twidth = _w;\n\t\t\theight = _h;\n\n\t\t\t// round up\n\t\t\tnumHor = Math.ceil(width / cellWidth);\n\t\t\tnumVer = Math.ceil(height / cellHeight);\n\n\t\t\t// calculate again, based upon numHor/numVer\n\t\t\twidth = numHor * cellWidth;\n\t\t\theight = numVer * cellHeight;\n\n\t\t\tx = (_w - width) / 2;\n\t\t\ty = (_h - height) / 2;\n\t\t}\n\n\t\tvar cx = 0.0;\n\t\tvar cy = 0.0;\n\t\tif (isCentered) {\n\t\t\tcx = cellWidth / 2;\n\t\t\tcy = cellHeight / 2;\n\t\t}\n\n\t\tarray = []; // reset array\n\t\tvar total = Math.round(numHor * numVer);\n\t\tvar xpos = 0;\n\t\tvar ypos = 0;\n\t\tfor (i in 0...total) {\n\t\t\tvar point:Point = {\n\t\t\t\tx: Math.round(x + (xpos * cellWidth) + cx),\n\t\t\t\ty: Math.round(y + (ypos * cellHeight) + cy),\n\t\t\t}\n\t\t\tarray.push(point);\n\t\t\txpos++;\n\t\t\tif (xpos >= numHor) {\n\t\t\t\txpos = 0;\n\t\t\t\typos++;\n\t\t\t}\n\t\t}\n\n\t\ttotal = array.length; // just to have easy access to the array lentth\n\t\tif (_isDebug) {\n\t\t\tconsole.groupCollapsed('${toString()} Sata');\n\t\t\tconsole.log('x: $x, y: $y, width: $width, height: $height, cellWidth: $cellWidth, cellHeight: $cellHeight, numHor: $numHor, numVer: $numVer, array: ${array.length}');\n\t\t\tconsole.table(array);\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\ttotalRow = Math.round(numVer);\n\t\ttotalColumn = Math.round(numHor);\n\t}\n\n\t/**\n\t * old gridtools, renamed it from GridUtil.create to GridUtil.createGrid\n\t *\n\t * @param x\t\t\tstart position x\n\t * @param y\t\t\tstart postion y\n\t * @param width\t\twidth of grid\n\t * @param height\theight of grid\n\t * @param numHor\tnumber of items horizontal\n\t * @param numVer\tnumber of itmes vertical\n\t */\n\tstatic public function createGrid(x:Float, y:Float, width:Float, height:Float, numHor:Int = 1, numVer:Int = 1):Array<Point> {\n\t\t// trace( x, y, width, height, numHor, numVer);\n\t\tvar gridW = width / (numHor - 1);\n\t\tvar gridH = height / (numVer - 1);\n\t\tvar total = numHor * numVer;\n\t\tvar xpos = 0;\n\t\tvar ypos = 0;\n\t\tvar arr:Array<Point> = [];\n\t\tfor (i in 0...total) {\n\t\t\tvar point:Point = {\n\t\t\t\tx: x + (xpos * gridW),\n\t\t\t\ty: y + (ypos * gridH),\n\t\t\t}\n\t\t\tarr.push(point);\n\t\t\txpos++;\n\t\t\tif (xpos >= numHor) {\n\t\t\t\txpos = 0;\n\t\t\t\typos++;\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction toString():String {\n\t\treturn '[GridUtil]';\n\t}\n}\n","package sketcher.util;\n\nimport sketcher.AST;\n\n/**\n * Math related stuff is found here\n * \t\t- radians & convertions\n * \t\t- degree & convertions\n * \t\t- etc\n *\n * @example\n * ```\n * import cc.util.MathUtil;\n * MathUtil.random (10);\n *\n * // or\n *\n * import cc.util.MathUtil.*;\n * random(10); // make it easier to read\n * ```\n *\n */\nclass MathUtil {\n\t/**\n\t * convert degree to radians\n\t *\n\t * @param deg\n\t * @return Float\n\t */\n\tstatic public function radians(deg:Float):Float {\n\t\treturn deg * Math.PI / 180;\n\t};\n\n\t/**\n\t * convert radians to degree\n\t *\n\t * @param rad\n\t * @return Float\n\t */\n\tstatic public function degrees(rad:Float):Float {\n\t\treturn rad * 180 / Math.PI;\n\t};\n\n\t// public function rotateDegrees(deg) {\n\t// \tthis.rotate(radians(deg));\n\t// }\n\t// public function rotateDeg(deg) {\n\t// \tthis.rotate(radians(deg));\n\t// }\n\tstatic public function degreesToPoint(deg, diameter) {\n\t\tvar rad = Math.PI * deg / 180;\n\t\tvar r = diameter / 2;\n\t\treturn {x: r * Math.cos(rad), y: r * Math.sin(rad)};\n\t}\n\n\tstatic public function distributeAngles(me, total) {\n\t\treturn me / total * 360;\n\t}\n\n\t/**\n\t * calculate distance between two point (x,y)\n\t * easier to remember\n\t *\n\t * @param x1\tpoint 1, xpos\n\t * @param y1\tpoint 1, ypos\n\t * @param x2\tpoint 2, xpos\n\t * @param y2\tpoint 2, ypos\n\t *\n\t * @return  \tdistance between two points\n\t */\n\tstatic public function distance(x1:Float, y1:Float, x2:Float, y2:Float):Float {\n\t\treturn dist(x1, y1, x2, y2);\n\t}\n\n\t/**\n\t * calculate distance between two point (x,y)\n\t * easier to remember\n\t *\n\t * @param x1\tpoint 1, xpos\n\t * @param y1\tpoint 1, ypos\n\t * @param x2\tpoint 2, xpos\n\t * @param y2\tpoint 2, ypos\n\t *\n\t * @return  \tdistance between two points\n\t */\n\tstatic public function dist(x1:Float, y1:Float, x2:Float, y2:Float) {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\treturn Math.sqrt((x2 * x2) + (y2 * y2));\n\t}\n\n\t/**\n\t * [pythagoreanTheorem description]\n\t *\n\t * @example\n\t * \t\t\ttrace (MathUtil.pythagoreanTheorem(0, 5, 10)); // 8.66025403784439\n\t *\t\t\ttrace (MathUtil.pythagoreanTheorem(8.66025403784439, 5, 0)); // 10\n\t *\t\t\ttrace (MathUtil.pythagoreanTheorem(8.66025403784439, 0, 10)); // 5\n\t *\n\t * @param  a \tside A\n\t * @param  b \tside B\n\t * @param  c \thypotenuse C\n\t */\n\tpublic static function pythagoreanTheorem(a:Float = null, b:Float = null, c:Float = null):Float {\n\t\tif (a == null && b == null && c == null) {\n\t\t\ttrace(\"Really? Perhaps you should use some data\");\n\t\t\treturn 0;\n\t\t}\n\t\tvar value = 0.0;\n\n\t\tif (c == null || c == 0)\n\t\t\tvalue = Math.sqrt(a * a + b * b);\n\t\tif (a == null || a == 0)\n\t\t\tvalue = Math.sqrt(c * c - b * b);\n\t\tif (b == null || b == 0)\n\t\t\tvalue = Math.sqrt(c * c - a * a);\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * calculate the circumference of a circle (omtrek)\n\t * \tOmtrek = pi * diameter = 2 * pi * straal\n\t *\n\t * \t@example\n\t * \t\tMathUtil.circumferenceCircle(10); // 62.83185307179586\n\t *\n\t * @param radius \t\t\tradius of circel\n\t * @return Float\t\t\tcircumference\n\t */\n\tstatic public function circumferenceCircle(radius:Float):Float {\n\t\treturn Math.PI * radius * 2;\n\t}\n\n\t/**\n\t * calculate the circumference of a circle (omtrek)\n\t * \tOmtrek = pi * diameter = 2 * pi * straal\n\t *\n\t * \t@example\n\t * \t\tMathUtil.circumference2RadiusCircle(62.83185307179586); // 10\n\t *\n\t * @param circumference \tcircumference of cicle\n\t * @return Float\t\t\tradius circle\n\t */\n\tstatic public function circumference2RadiusCircle(circumference:Float):Float {\n\t\treturn circumference / (Math.PI * 2);\n\t}\n\n\t/**\n\t * Oppervlakte = 1/4 * pi * diameter2 = pi * straal2\n\t *\n\t * \t@example\n\t * \t\tMathUtil.areaCircle(10); // 62.83185307179586\n\t *\n\t * @param radius\n\t * @return Float\n\t */\n\tstatic public function areaCircle(radius:Float):Float {\n\t\treturn Math.PI * Math.sqrt(radius);\n\t}\n\n\t/**\n\t * Get a random number between `min` and `max`\n\t *\n\t * @example\t\tcc.util.MathUtil.randomInteger(10,100); // producess an number between 10 and 100\n\t *\n\t * @param min \tminimum value\n\t * @param max \tmaximum value (optional: if not `max == min` and `min == 0` )\n\t * @return Int\tnumber between `min` and `max`\n\t */\n\tstatic public function randomInteger(min:Int, ?max:Int):Int {\n\t\tif (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0;\n\t\t}\n\t\treturn Math.floor(Math.random() * (max + 1 - min)) + min;\n\t}\n\n\tstatic public function randomInt(min, ?max):Int {\n\t\treturn randomInteger(min, max);\n\t}\n\n\t/**\n\t * Get a random number between `min` and `max`\n\t *\n\t * @example\t\tcc.util.MathUtil.random(10,100); // producess an number between 10 and 100\n\t *\n\t * @param min \tminimum value\n\t * @param max \tmaximum value\n\t * @return Float\tnumber between `min` and `max`\n\t */\n\tstatic public function random(?min:Float, ?max:Float):Float {\n\t\tif (min == null) {\n\t\t\tmin = 0;\n\t\t\tmax = 1;\n\t\t} else if (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0;\n\t\t}\n\t\treturn (Math.random() * (max - min)) + min;\n\t};\n\n\tstatic public function randomP(?min:Float, ?max:Float) {\n\t\tif (min == null) {\n\t\t\tmin = 0.1;\n\t\t\tmax = 1;\n\t\t} else if (max == null) {\n\t\t\tmax = min;\n\t\t\tmin = 0.1;\n\t\t}\n\t\treturn (Math.random() * (max - min)) + min;\n\t};\n\n\t/**\n\t * not sure how this will work..\n\t *\n\t * @example \tMathUtil.chance(80); // 80% chance for true\n\t *\n\t * what I want is chance(80) or chance(0.8)\n\t * and get a 80% change for a true, otherwise false\n\t * chance\n\t * @param value a value between 0 and 1\n\t */\n\tstatic public function chance(value:Float):Bool {\n\t\tif (value > 1)\n\t\t\tvalue /= 100;\n\t\t// return (random(value) > value - 1);\n\t\treturn Math.random() < value;\n\t}\n\n\t/**\n\t * get value 1 or -1\n\t * sort of like the yes/no version (`MathUtil.flip()`)\n\t * usefull for direction change\n\t */\n\tstatic public function posNeg() {\n\t\treturn randomInt(0, 1) * 2 - 1;\n\t}\n\n\t/**\n\t * its either yes or no (true or false)\n\t *\n\t * @example \t\ttrace(MathUtil.flip());\n\t * @return Bool\n\t */\n\tstatic public function flip():Bool {\n\t\treturn Math.random() < 0.5;\n\t}\n\n\t/**\n\t * calculate the angle between two point\n\t * @param cx\t\tcenter point x\n\t * @param cy\t\tcenter point y\n\t * @param ex\t\tend point x\n\t * @param ey\t\tend point y\n\t * @return Float\n\t */\n\tstatic public function angle(cx:Float, cy:Float, ex:Float, ey:Float):Float {\n\t\tvar dy = ey - cy;\n\t\tvar dx = ex - cx;\n\t\tvar theta = Math.atan2(dy, dx); // range (-PI, PI]\n\t\ttheta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n\t\tif (theta < 0)\n\t\t\ttheta = 360 + theta; // range [0, 360);\n\t\tif (theta == 360)\n\t\t\ttheta = 0;\n\t\treturn theta;\n\t}\n\n\tstatic public function map(value, min1, max1, min2, max2, clampResult) {\n\t\tvar returnvalue = ((value - min1) / (max1 - min1) * (max2 - min2)) + min2;\n\t\tif (clampResult)\n\t\t\treturn clamp(returnvalue, min2, max2);\n\t\telse\n\t\t\treturn returnvalue;\n\t};\n\n\t/**\n\t * get an orbit value: use a centerpoint and radius to create points around this centerpoint\n\t *\n\t *\t@example\n\t *\t\timport cc.util.MathUtil;\n\t *\t\tvar point = MathUtil.orbit (100,100,20, 360/4);\n\t *\t\ttrace('${point.x} , ${point.y}');\n\t *\n\t *\n\t * @param xpos center point x\n\t * @param ypos center point y\n\t * @param angle in degree (360)\n\t * @param radius the radius of circle\n\t * @return AST.Point\n\t */\n\tstatic public function orbit(xpos:Float, ypos:Float, angle:Float, radius:Float):AST.Point {\n\t\t// plot the balls x to cos and y to sin\n\t\tvar _xpos = xpos + Math.cos(radians(angle)) * radius;\n\t\tvar _ypos = ypos + Math.sin(radians(angle)) * radius;\n\t\treturn {x: _xpos, y: _ypos};\n\t}\n\n\tstatic public function orbitX(origin:Float, angle:Float, radius:Float):Float {\n\t\treturn origin + Math.cos(radians(angle)) * radius;\n\t}\n\n\tstatic public function orbitY(origin:Float, angle:Float, radius:Float):Float {\n\t\treturn origin + Math.sin(radians(angle)) * radius;\n\t}\n\n\tstatic public function orbitZ(origin:Float, angle:Float, radius:Float):Float {\n\t\treturn origin + Math.cos(radians(angle)) * radius;\n\t}\n\n\t/**\n\t * Randomly shuffle an array\n\t * https://stackoverflow.com/a/2450976/1293256\n\t * @param  {Array} array The array to shuffle\n\t * @return {String}      The first item in the shuffled array\n\t */\n\tstatic public function shuffle(array:Array<Dynamic>):Array<Dynamic> {\n\t\tvar currentIndex = array.length;\n\t\tvar temporaryValue, randomIndex;\n\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 != currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\t/**\n\t * sent a value, and check if it is in the correct range\n\t *\n\t * @example\n\t * \t MathUtil.clamp(Math.round(r), 0, 255) // a value r should be between 0 and 255\n\t *\n\t * @param value\t\tvalue to check\n\t * @param min\t\tminimum value\n\t * @param max\t\tmaximum value\n\t */\n\tstatic public function clamp(value, min, max) {\n\t\treturn Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\n\t}\n\n\t/**\n\t\tfunction xyz(px, py, pz, pitch, roll, yaw) {\n\n\t\tvar cosa = Math.cos(yaw);\n\t\tvar sina = Math.sin(yaw);\n\n\t\tvar cosb = Math.cos(pitch);\n\t\tvar sinb = Math.sin(pitch);\n\n\t\tvar cosc = Math.cos(roll);\n\t\tvar sinc = Math.sin(roll);\n\n\t\tvar Axx = cosa*cosb;\n\t\tvar Axy = cosa*sinb*sinc - sina*cosc;\n\t\tvar Axz = cosa*sinb*cosc + sina*sinc;\n\n\t\tvar Ayx = sina*cosb;\n\t\tvar Ayy = sina*sinb*sinc + cosa*cosc;\n\t\tvar Ayz = sina*sinb*cosc - cosa*sinc;\n\n\t\tvar Azx = -sinb;\n\t\tvar Azy = cosb*sinc;\n\t\tvar Azz = cosb*cosc;\n\n\t\tx = Axx*px + Axy*py + Axz*pz;\n\t\ty = Ayx*px + Ayy*py + Ayz*pz;\n\t\tz = Azx*px + Azy*py + Azz*pz;\n\n\t\treturn {x:x, y:y, z:z};\n\t\t}\n\t */\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math {\n\tstatic var PI(default, null):Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null):Float;\n\t@:pure private static inline function get_NEGATIVE_INFINITY():Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get, null):Float;\n\t@:pure private static inline function get_POSITIVE_INFINITY():Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null):Float;\n\t@:pure private static inline function get_NaN():Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\t@:pure static function abs(v:Float):Float;\n\t@:pure static function acos(v:Float):Float;\n\t@:pure static function asin(v:Float):Float;\n\t@:pure static function atan(v:Float):Float;\n\t@:pure static function atan2(y:Float, x:Float):Float;\n\t@:pure static function ceil(v:Float):Int;\n\t@:pure static function cos(v:Float):Float;\n\t@:pure static function exp(v:Float):Float;\n\t@:pure static function floor(v:Float):Int;\n\t@:pure static function log(v:Float):Float;\n\t@:pure static function max(a:Float, b:Float):Float;\n\t@:pure static function min(a:Float, b:Float):Float;\n\t@:pure static function pow(v:Float, exp:Float):Float;\n\tstatic function random():Float;\n\t@:pure static function round(v:Float):Int;\n\t@:pure static function sin(v:Float):Float;\n\t@:pure static function sqrt(v:Float):Float;\n\t@:pure static function tan(v:Float):Float;\n\n\t@:pure static inline function ffloor(v:Float):Float {\n\t\treturn floor(v);\n\t}\n\n\t@:pure static inline function fceil(v:Float):Float {\n\t\treturn ceil(v);\n\t}\n\n\t@:pure static inline function fround(v:Float):Float {\n\t\treturn round(v);\n\t}\n\n\t@:pure static inline function isFinite(f:Float):Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\t@:pure static inline function isNaN(f:Float):Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi extern class String {\n\tvar length(default, null):Int;\n\n\t@:pure function new(string:String):Void;\n\t@:pure function toUpperCase():String;\n\t@:pure function toLowerCase():String;\n\t@:pure function charAt(index:Int):String;\n\t@:pure function indexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function lastIndexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function split(delimiter:String):Array<String>;\n\t@:pure function toString():String;\n\t@:pure function substring(startIndex:Int, ?endIndex:Int):String;\n\n\t@:pure inline function charCodeAt(index:Int):Null<Int> {\n\t\treturn @:privateAccess HxOverrides.cca(this, index);\n\t}\n\n\t@:pure inline function substr(pos:Int, ?len:Int):String {\n\t\treturn @:privateAccess HxOverrides.substr(this, pos, len);\n\t}\n\n\t@:pure static inline function fromCharCode(code:Int):String {\n\t\treturn untyped __define_feature__('String.fromCharCode', js.Syntax.code(\"String.fromCodePoint({0})\", code));\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __feature__('String.fromCharCode',\n\t\t\tjs.Syntax.code(\"if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }\"));\n\t}\n}\n"],
"names":[],
"mappings":"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,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW;mDAErC,CACjE,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WACtG,CAAC,UAAW,UAAW,UAAW,UAAW,WAAY,CAAC,UAAW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"
}